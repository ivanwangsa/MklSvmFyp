%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: compiled-literature-review.dvi
%%CreationDate: Tue Jan 27 22:26:56 2015
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR10 CMTI10 CMSY10 CMMIB10 CMR8 CMMI10 CMMI8
%%+ CMEX10 CMBX10 CMSY8 CMMI6 CMMIB8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o compiled-literature-review.ps
%+ compiled-literature-review.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.01.27:2226
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2010/10/02 $
% Version         : 0.62 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 692 2012-06-04 06:47:40Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMIB8
%!PS-AdobeFont-1.0: CMMIB8 003.002
%%Title: CMMIB8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB8 known{/CMMIB8 findfont dup/UniqueID known{dup
/UniqueID get 5087390 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB8 def
/FontBBox {-15 -250 1281 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB8.) readonly def
/FullName (CMMIB8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269DEDF1D3B06E73B0
B74894306131514B208B9A57FCCD3847667CC9CC9C7829C1C829CB834536BDCB
127EA457B62FF74FD7CA15E41ED4623531A42365FB88DD1891D5A993EDB11279
71A814F42F948097461627AD9AAF6434D5C17645588F0DCB18B55E207687845D
8DC36AF2073D77A8A8EB05D607DBA9E0526827ACE118E9409848972432A83B79
E41FC776FA2B2DF7ECE03DEC18AB9D27591ED8ED135843AD9D624637C3C532EE
BEF0F248479252570C09098095DEAEEE53F3EE8CC9DFE3A30C5794828B4BFF23
5CAF5742069F7FF36BF744721C0E57592F04E8D8BF02465A83EAD65BBEE10FDA
306FFAB93E3DF71662E4277641DCFF1B7E6727F143BCE4CB818E2B9EA8FB484F
C47A02BE1B94713ABF4BB4C5BF8E4B88F2D9774199C1067326D84C506A49F947
1220DACB94C3D3959259B03024EBC5337F2AF3EFADDB7BA16C1B4DA2F438A6AA
CDF7C322483C8C1A95163D97A8F627729A130F9E04E026250EA77642344B8560
599271E6C891DC0B32BB1ED5FFFC7C03611A7C0F3B42B2AE80E7C1BCBDBCD548
ACCE78E06C7D57DA082BD3E4561103B9322C2657499D3B3665938B6433F19B70
BD6EAFB79EDA9F7C733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB010F
1B0E9652ED4449553DDC6CD84B58648D003908790EF4815D54359A4765E47832
77B00E8B7F4F9193B14FDC6C9AAF77ECAEBD1BEEA012AD706C5EAF4DDEE1FC89
D548DE6B2FBF432CC86DE12947EA454C3D6CABDA58E8554B43EFF68D534DE9B4
5ED9CAA7B58684DF5EC37E177F8DE0E71A06707B45A742475C9C6A6DC74B3440
FF721196F0AD340668F00D659A5A9962779B6925F5E792D2C8A00F00D009F45B
73B418B7A03B27EF7ABD5F0DBF2A9D1953278995AD8BA7B8E791EA99B2090A92
8583B54760483FB9F72F513B878165CF003EF2298E78CAC9952BD186374DFBAD
237A6080073B411FA8E72A107DA08F96A39866D27B7FAC0F538AD22035DDF492
65B094B5CC653EED5A1D648F1E934409A9578FA25624FDBFDCBA8321F9C93D64
2EC4A164A10EAF9B78E1A61FA4AA0DCB6FA82D683B031E7B70C65DF8A3F6702A
6273A12E86D78CA1BCEF565E76E6A37BEF1041E2623F43D0D431B7DA661B9218
75CBEECA8DAF7381965497930EE7F6ECD865E8254E3682604B95360BE55D8C09
87F6C0135869FBCCB77C4A48D4085675E5D5A639D17FE3A9D5FF285571E0C14B
BA3EFB8FBCD0285E6CA408671BF068E1B9F1C040926407EF7B57E76C8E946D19
3A4CC08C18064A68B48B4B5375F034CEDD6975EB2E8407FAAE7071BF646AC58A
C3BB7B2424C609567B3CD4F2E0BAD042E501A0D3EB53D7F782EE8AE67738CC53
790C5B35ADA202B937DA03ECC0CB86F2393B7E88FF7B76935CEF77D306C69F46
E8BCB28F3F97B511B5E602EB3ABE324C1DB9C9B99AF93F1E089F699DD51E2F22
93FCB2F4F3DAB763101E4C37E7E5B56EF3D4DC10C45191A53CAF2E61DBF03294
75C707CE9587E609C891E82D224C7B1B0ACB90B5EDCA6E2C1310B09F39F61739
C620DDA0630504134E024B6503530987BB1B88E0644483DD257344B36FB0E0A1
25BBE8427F6AF5180F9F40772459C58F15FA8BD5FDBB7676602FD7C7FC515CDA
605A719EC3ACB078EC381B7801160A9B48A7EA4D25398E1638EC83B7EA2708D5
1163C0E760828570E8DF66747DA6C75B2C1501FB96769CF0CAC50861EBFD4DB2
04D92561A961F44D7B0D1001FA798A078D2F969F890D3008481743FD2136AC38
9EDAE09DA49A8280CDC41C649FE7A3EB286ECFE1AC9E275837D4DABF0DC21581
7CF8D7FB46C40EEC02DB638A80F62BBF1AA7A186AB08E5BA31CBDC83EDCB0560
D0ED86C574C1587A21EDF20E1E92A2D4E93C11E1DEC8006F180A087810B30289
A76E82BA559B7D71C2BB3980D291833CADA7F1E138C65860AF9A5B042947BCA0
5473B1120D61E6671B1B02575BC171F175B6079B23689DBC858BE49A3A30A594
B743CEF0036CB3783738F604DBDC01CACA81184F76DF99E14D1E4A307230612D
0C8914291FF2AE1002956B78FB863CF0131AE36EF045305207B19BC55CAB18F3
3D21E6327E23F624B29D4C503AAA8F8491C5E19910A0DDA24A31DB8B24A7DAAB
C3428DD8BDE111031906AA5F9C0F2507851FC446C30A8CBAC46357228E3D9747
7B999DFDC48C3A8BA5680138CD473B52E8F21BF9882E2C80CB13CC9EA275B65B
337A5A51F693C99254F68D5347C6212E97C9A221B652036501F0D65ACE46917A
8B3DF0B3E4C29D5BE4F2B45F8061BEF3F59E70D62C64434B3B978C6EAB14DEB2
D13F363969A32190F8D7D2C23A803237161D116158C3D4382B220CF1C05D14D4
611AF4DD10A5DC52E3D04E0E5ABA1D4E43304DDB4C4007E1AC26A3CDAC24ACCC
013000670B408749FC2200DE3A67BA0718F70DF3BF2DD40762A432B0ED3845D2
FC49F9FD3F72D17F41A113A416FC3270B3750F4E57FA84599C36CEAD36F5A57A
31865B91C13DC02F8DF136558E0300A4083EECFCD3502BC2270149017421B0F8
880CC181307387AD89653FD1A54D903F3708C7ACB08F489DFEEEE9D88B37FF40
CECA4DB6C95FEB527055DA34BA3B982E36DD02AE06D7B84AC06323DB5E034CC3
C8BA5B16479CDA9983649F3F15FE61AA8ACCF3EC8F4C8B4C18E48C81AEC35542
1E66E2CE5C356A1F9BE9B96331BE68AAD82A04AD992CAA0D9FB182FD94795B7A
CD9FF0B64C417E6023AE98FA906F79EA80EECA91C2BA7B42C641402632CAA5B0
B6B3B3C4DE6FEF981F7B74D868D89ECB62FEBCB569C011E6E02A39F7AD592370
ED17F1C84F36F3C73068D908D8B0BA66867D3207FA535628C0A57025226839CC
18726127480A015C66DAA2AD2F3E4FCB095EE507C343186C51A9EC4ECFA72D27
815022CD526B7995DBA79A69368A52F3903A41C3BC65A9CFB7A90FB41E943B5C
802849F983C139E4D3A95736F8174017D5A65A52DDAE40673CE6F836DD45C355
4E616A23592FE744A99660D62A4321F4F052118FEEA55336CA6882E06452BADA
0A649F3A32A1DCC20E6949D0561CB06DA7973C99A6AA3A3FDB12CA1658122644
7B3507153A9F43826C711F4776E98C921CCDA5E2FC2EC839204AFBF82DFBD889
3A81E31349FD656B00B84FE683738F72951DC232AAFE9DF250C5719D8B410E79
A002233A0D73A0F44A0533374A79410C080999B66264536087D4C7CC8F608AD7
AF9D73CEC46EBB622629D23CB9322B118A06CA79B08A0D16A64705F08615DBF5
9FB4D897047EAD2A6F0EB4800B46460D68B3D5859AFFDCB7DC85B962E01D1A66
3217CE2A7786AA648BFAD8C4F96BCEB18E93D260B1BA2C81D953BDEAA375A7AE
6D9E72FE4E7FE23E3AE1D856A7F401F3624D3D45FD5C70443F4F14AD781DF7CB
50054E4C7CD24C6D3007BDFB4B1F89790379F3965F9DF850FA7BA2FB0CB9B82A
B72E4CF839DB53E405B828D06B313FFF0D42CDF9B38156FDD4813B4E300C4FA9
C2783C58809189D6B6D805F41F2AC4AC457B26CB660A80BBB860833973E1F89E
15328266B8BEEF76D3261BF9DDDDE4972F7EDAF790110DB0916A61E2A0A6703C
CAED2074228C2C0D9706A52721365717AB217498C97C6891A20214F3310EBE50
95CD368DCBD293A0DE4AC7098998A8EBEEA0F39278C4890DCE6BBC8404DF942E
61C149FCDBFD2BAF3420DC0D67B3FCDD524AD5059D67D587B7E0651C85663C35
676E91F6776C4618FB4E03F657D04E622609D15ABD7C3DB7F0E28183E2B29560
81D11729CFE1F531CA766B6B1B1660B3C2C4EBC5FBC4E4A811780D2C2058DFEA
083A531EBF85FFBDA2F806D2FE0A5BB73A96A61C28FD3175781DF6BF415E0368
E02A3E3190ADA61D5AB22FE38A205BC2453967C2729F4D591D8B7FF38721ED0B
6CF0D6E716023021966F638841D707709D7C414DBDD6758803AB48E228F48958
31167E7E98B8DE364A5F0BB9E1ADE11B217CD0B23798DEA834159434C9F90E94
1FA726B1CA82013BFE580716D4B2889A55B31C663093FF628C264D19352DCC1D
A9D61728BCAFA46F34E7AE98240FB8AE4FE50A85A8018299D2476B63F2BBFF96
42E3151C0FAB2E2D4DBCCA06BE751756CF92501C08297E046FB275AA470CB0EA
DC3F14EEA4C3146815E3AB62180579A86039208870AD36D1AB7E5F00FDDA4C78
31EAE802ACFAD1224934C2889B928331ACC83DE5F8D1AF90239A14D65067C3B3
F5463A2B7C7FB36112B6A67BC9CC6E3A6B4008B62B748E05CBF80365E5610A86
5A55F30027A44FA4AB0BDF6316FB26FA74806F6C88F2971B24F23B7F1B08181D
00F7414F3AE5D53E070AC075E83C5B2BC47458524B6D09267AD331F2F0B88F34
5EF3E7946FB7ECE31901BEAE5D66F8A87C214918005748D40FDEB3901CFF1844
E2A3D8383312E949AE9EE53A945A9332BEF3E3838AE44FE9584EBE2A97330450
40A83031149ED4A6B0BAAE73F787FE528C79D5F6E2A5BE14A4F3F8AC8599F744
02E9E5F7F0DDBBFEEFF8E5557A3D1E68D80DCDAA4F144CA5D2237B28372278E3
F836EA467A4AA76923A0D76DE1B223F1967A3E7E8DAC815BEAAFF9845F55D810
0A02AE72BD311FA95C495D89D1EB54CC4FB9ABD040305943D99B47EDC51B3CDB
F16238E1A8EE0BE48EFE6DFD78A42020E99EBA84ED513DDA3A358434416846B4
E8A8FD41E5E566AD9A90EFB70F60DBB9546B08C58FE19375B47CE34B35ED7B21
E6ECC0B7FF69E08E46FABCDDB89EAD93C32F295F23C70F148BDE2F4F21C8265E
69ACE2233394041DDD2121D1C64FF265A17297507222CBC126B24F267DEFD5CD
C4FA06543AE1D6FB7606879CF456F0CE8DC4DD1E82AFEA23A3A2707C2E40B957
A216D70ACABFFB720B4E8FE60CCCF0668F848A1BA4BB7E3285D7E44B674077A9
5C1DDEB8B2BC6B87C7ECF7C05C3A788D5C2AEC12B1ACF2108250A852706E6C37
2F20118BD9F2A4AA4FCE05C0758D83A64148615FC74363DBE1C7171759740FE6
2858AD8E317672CAC5DFC8B1F73C7E844FBD02A7D96D1739EECF516C35AA2974
59D3D21433EF480D5BEBCEB67E3DA559CC879637009A7E2E4B0D3949D016E886
7D62B0B89837E8644B9AB583A904FCC650BD004B34A3B6612466E758E1A84390
8DE39E2F3BACB7DDF6294E38B496D452EF135C673CED98A26578D4A99A7AAC04
CEFF2378F28140F09DCDF48A3BF036946FFBEB8DCFBC1238177B4EA230D46211
B5A40003D0DA8B7CF61C1BA320387A20C1ED4B2B4CF1015CBE1F0060D7A49585
02843D85A095222DCD136F6BC76B2B20CC1DB6CA235A165EADB6E259F62EA679
27AAF35BAB17F64BEB72E9F514803D6F0C4465453F84EB988056C2D76217ABF4
8289046E47BD3ADD5A8DD0BC96FA8E4D082441DBDAF260367131F841ACE328E3
E148093AC2818E28E8140AC365C51AFE1E379421977241DC7F0BA4F2CB8EA090
1D5A4B6A59415BCFF558352DD6DAED220668121CE072DE7F53D259CB7C46C2C6
A066BC5B3B26A53EDDFBAF827697DF4A27BA4BA7933B17402B181D4DE7B4391E
211B0B5CD9D567B532786CC57E30B0D6678E9D1758EF2F3D48A6D286AC81E1C2
F878473754151F9265195E74D6902E54A378A035ED420FC0F4937315B5F505EA
F7EE81FA75FEC271B26ADD63456D8E23166847F6FDBFCB37584CC82D743DC96D
CB41BCDE34E9778800F3B73C05DD78BC161C3C67EFC92870693A359F604D0E08
63AB0DF6167DAD9B93EE342A8D28A416A5912B3533264C0FD2831AB20EB5F7E1
B4043B2A7B117AD76128EDC5E8757C97970C451B056CEBDAA76EE658EA96B586
3827F008BE6BA64B8846D0E8925572CB779CD4CC6AB71130A907BE9E569DE4C7
D4B0A93117EEF7B95424C66F2178054C4243BF25CD00A0004024B2B51CDFDF5F
E5762406005B28DD0E9E917EB98EA8EBC6F57A81830171DF1567D6ADB2F86AF1
5A996B361E1D8682AAFE89BFB28D450773AF4A60EA7554CB591ED286ED36DEF5
A58CAF23FDDFF453C22F1E9CDF62B99ACEB78BE6F1E6A0F2FFB11D7E886E3008
62D9C8068A62825648D2C53C60340BD87350E50202323620C52391811DD11715
0985260584CB5C9ECAD0BE3DEB26817E13244B5F4D3A75F70ED783566DEA521F
F430084E7F5F9E9AAB1C0BEB93B5020195B7E813CCCE407ADD04AB4CC22FB654
5828265AC115266A5BF852009601F8CC4578AFB0A1959BD88284C0876D2E84CB
C26F8484A67A82F9AE92B9111C374CA629152B6389C479297CCB9AB018D8FC7A
E187157B992B5F9B62C4DD3C7ABE9D68E376033C576EB1D78F25A661E01354D8
6A418F388611FFDF2E22EB3A32B8BA1405CA598050CB5D396241431A8517B2C6
D71FCF202B44921A714529D848772DD13C47F344791196E6D8CA5E9D78A04242
5E80155347B8A7E02A84EE58FA0A278E30C68DDF02953E979F6E465600AB051D
8F853D6C46D214FA9EA8134EFA14BAD3FE0D935A635A29E49AB0ECE0976D605F
A8D26023FB49DFD48DC252C1CC43757E41FFA0FE6D2B50FE90618616C982CA3A
D77F5C94C5AED1C25E12512E05E600E42B085762F39AF54C430216FFC7DD23BA
64EEE4F52568DAC7866FE5E37AEE0C1A02C8BCDF9D8B3DC447365F260BF65013
34BD206724FC2E4231A884A6F6A6D9D46181C6DACCA050B4D30503BD10BB7BCC
80CC819FD0B578EE51B37F95F5423B97F3F5163A6DDADC6AC3ADF629A48011AE
A142EED2DDD1EE396AEE0AD4DC83EC5DAE3E0F3453C38483F2EF7874724F265E
C1114B7E49B5705EA923EC1A045484C361B91C320F7790083D9525D4F139A1A8
8BA0A3474783CCEF9A4B65EE649580918951AC0C438C2B0413761A253A43579B
0B4E810991B89E49AAA2BF3ECA1B632A05E106294E945229EDA1F984E4B34DBD
CA13D716BCF0EBC7839D9C209745ABF5DD04A0DE7FBBD0DA10F74CB1B290A054
5E462284433E6FAB623D976427C198F43AE7A3EAA0AEFC1C2E3BF19C22AE415D
E00D3C32FEA8406DFC96D818C0EB22D20F43823C6BE2C359AF0B3E8A19BD48D3
E28008BE6ABFA1E8EB7C78CC83911F0135D83A8EDC5FB27DC47BED3A81B7CE80
FDBD1B9341857BF53B043200A74EB033EEA2AB0217A4B0D2FDCFE5F90B7DE689
ABAFB2D47CD3EF42192855C59B2E358EA7C829BA6F25F1A235B7D33F1695A5AE
FA97111522880FFF0CF6DC99D57C9C0FC4C7CCCC240182B12388AC75794524E5
7D5DC783B05A3A50C7650D899E91770834ED76E582468E299D3B7008C8F80FEA
A4F0F4F3456C52BB92BA805364E7DB9D530D784A2F24964F8E9AE72535D2DA4D
789E3666DCE32E0E5FD84753361FF5D15709DDFDF7B173F87B3E272D4C8E5384
69FCF7FBF8C4ED2CFE62101E0BCC65C561B74DA005AC37BE76BDA64FD8B0AE05
3BB5BAC685C96D5D38E8D03B3074AD2C8DB917F4C5891E514D4F32106CBA9E6D
AD5F4E71500B93BDA117CE8E25FF91531A7CB9B678C65989DCAF09462006E40F
076939CA5703136C3B267CFD13E4207F970C68AD15C9CD0685484B85C1F204B6
509D528405326D92D67F66D9FBDA01BA4EAE81E70AE1626F45A4D1681D45410B
FBD05083AD901F6C724A435B996173A8B83A65AA522E7EF3FCE1F6FA451BAC01
D7726ECB9315F67B19F9F1C64AE9850B3680A200EFA84D8A8CB84C429B0281AF
D54AE529CED2B82315CFED4FE0AD129EC02F35655EBD7D2E94D2C642F08E9838
2338D226C6D19AF48364D137D888EA4C028BAEB70EF1C1A61C1A995D45C5195D
2DFD6A115FCC58282FB238676F24EAFABB92755B6E2290B1AE18E50BB5461EF8
0C13DF7332D3452BAC2AEAE3B88469CDEBFBDE831696D98B3CFFF9726E64210F
522A4C74D4DFE664DBF5F1AB78B9F1576B698CC8820406236A8A3F2B8A661C8F
8C71A9493DE4720BDF8BBA1BC0CB3EA61E6043FD22FF709EF4852703A484E035
6F827185BC10BA7D0ECFF7AEF22FD544A097C41C6AC65F8CB6F09FD8DAE8CC08
97D6C54D8CD13D3DAF207193D41A19EFF5D49CFFABF85235C8BF48A6ECE59C59
39C7A2B1CF1647762A9D8B6D60E5FE94B11096D562F1F3B1477D403806B3EA1D
78D144216244A2EC9D798B6D1D0A64CDCB0AE825C8B3125AF27917DC66CF601F
29251DF486DEE06532FD3B218B247F4AB8E3C3D163D9A03A95DF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 83 /S put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08A430B643B6ED36DCAA09B41
FEFDB90E10C8A8B74EB358437D0CEBB9E03109C593BAC09CA996278246E7CA38
4F311F23DC5A7F7DB374E0E3D066C874EEE28CFA47054DC41A389203BFB3D601
BC9A4817F8DAC250A102E7404CA135B33DD66F8FF40D106F52081FBA3E79CE29
FCA5C502B38C86D8D507AEF30436472D2381DEA09B8B3BCB109BCD72332A9483
E61ECF0F89A85BC37B8C10FF3F7C0A84FB8D0F4A7898D3F8B06202FF8DCD698B
56544751347E9AA35209B18D3D416E5E034E36D9C5FC0B33B7AA0D46F3A3F925
7FCE00D42215F7C2717D78C7BEC199043BCC3D4CEAAD87BFB1ED2F719ABED65B
EB6A783BD5E0935B9A5FA7F899D25750536B99A0113F16C45E5CD4DDD975EA74
596C6E35ECDDACE357F9EBD01798566169C00EA22408D0F4FF55AC0534A95427
08397FD84E02F485A1DD12882BD92B7E2ABB6AACAADB9579BE24A6A444D0F701
24C5987C6DCFADD05965CB2AEA3DB5EA3AC844634407025ADD94D468A09E9DE0
632D6837353299D8CE2DB709C30E9B3B9C78A4FE6AD8B9B194FA7DA96FB6786F
62F7426959FF0DD8E258B9AFF2AD86F8924F9C49D789EBFB787CC759DF0D1707
BEDE166E1DE908780A52B5429EE2F79EF4E2F1F0F4D78A1196A5EAAD41B5104B
C65179337B7DA5855CEC57A5EC1BCFB4342D450C82DFC70B3150A3E6CE7D5AB2
880CB04D45DBE1E7DD5E5EF999CBC416F97FB4F7517455F0C94216B8A808B6EA
89D987DCA4A4F8201B24723627E65889003F3CE6A3981A29CE52DF2EE6D439D2
51938C2721BE5AC4B184E13F3ABA8286A96DAF674C5AE0CD3F050BA42A836A98
04BE8DA937DE99CDD75566D5C3B021B02F1DD77812EB19071A7A2436405EC836
D0C8CEE052BE1F0FE658D5EB1E46EB710DAEBB989B48DBC98E57578B33663F7F
5F1D81F409C850BE174A1566A3F265731CD526C7A4F59D399943842B27B753C9
B6D545290CE25B8400379E92B96132A8BA8E4E376729DA9094A1361F2E6C4E76
A6B2EAEDFE9565D60E580305099A0B262B3BBB059898D645C117B7225FBA13C7
FE71EA557DFD988A644B09A92BE5671E991B56FD8C5641AD6D48BFE7BF6BCBEB
73B3C5F833DE5F793C16A121491ADFEDDE6F90A3570652800AE55409900BAECE
A1C8631D68883F2855ED98CCD73CDAE346E38B7D56562F76FBBF12ECF39FFD23
C0FA7F58C0F8AA6304D5E8713B1D96456B768B1FAC4F89C50A8DC9238213C35A
B8A836046B12BE6A38FFC1BD34C6AFFFC3F1089ABF06EEB6ECE0A2622D2DF14B
E489492736B5454D78A8ACCC38F6CAE03A201BA7CBC847DC86AB2371D7470A59
81B47B515C6E6D60913DCF4A51C6C0530C4320C7D9A458B1562C425F463C2272
8BA55E0AFB0249952D309D9617D24FBD2E8F387D27D100D60F939BF8BBD65903
BE6C6D9D0F91ABCBDA6B65B45B0134F5B323D3DADF42D4319E93676009276DC5
B75205F60067527CC2640446D208CFA3DAC009E0E2DE4FF1FB6CEE1E9A66C027
FA35CB6EA6D88A5E11F0380C2A900A72B8A5D1F5C853A107744065FC2DE634B0
80C3E38D1C25838DCD402B96CFD76482F98FDD05A2F9564330CD6930BAD9F649
3F38B4FBE97F00F9D3359C270151A551919C30E63152168391B512B389BFBC1A
F6B09831A269999AE4FE4AB3F8FA46FC6AF51D200A3E2DD365EA4F00375E72AE
7DF7A2A72EF3A0154445FB3ADB4BE64A1D495C103E5065830B007345146306A5
3E719DF0384B527739759B3E21DB3816B432E7439DC2E117D9153C0734067072
1F1F6775025E4B43142233998A5065A1DAB4C0BE273F1ED259A3A70940586502
D44C0C49F6972590043AD10C9DCB2462987632DE50BF9CC8D40F313D1790A705
FF3419A835D7BE29725AFB2E0C4C4138D65FE161084CB89226EB88F633B1FF60
A5727CAD58678CE64B7EE6AF5AC3DAAF3A5376AFAA89D70726D687A9803A305E
9148FA4DE1CC269861657D6C32F98378402E41F2373EE0E166A63FFC0B1F0AFE
FAE33DB81211D08D023CEEB1C5B53BB2D2F9CB6A15F1CA898F2AA74FBF3D18B9
D1EFBD33DCA9FCC88C81AEA3DD506FE75A30E232C3EF21B54304D2517F9327DF
973C57B1FE56EFF1B5BD0CE6095425CA04979FB4754CD033EB0C4F18FB145B3D
B19656C05C8FCD5F5F8775B1EDDD5B9D7F5AADDF8E8680199971CD406B463508
438E112D4C11576A57C3006E66A3D92BBD1F128D3AFF2DCDAFA0B2CFE564CE19
24E598745C5C1084CA85E5BF5756F1825B442011F240BB733817F01B6C6AAC2B
8301E5C564E08214117B05752F65D0B9C34B09850E60CCA699F2CD63F96905E9
EE3BA10833783EB8AE6612E5DB228583FF4E9187824F994FB7C7F19FD434BD7A
76E74479061962B2E0D955B3CE136EA72181B0BB70432D0B27BF9FC01B8A6FD0
6AFB11401438F14379BD0B1D4A30E3FAEB78C3D84D4961A6D0EB975C763F13D4
2F5EF89BAC9731CDD270874A8936DCE7F7813109C32FC74287DAB1E02B88D8C8
0E4281AA9BA108F0919C809D15DA7739FAB57EEC3C5CBBF168DBD9A9BA43997D
55E24EEF7D218166FD7274E757ADFB50587098B50719B9F05E18317C354431CA
0996C4292795CC6A5A73674424FBF0AAA76430CEAEA7C7B83D6FDA314115541D
F4EBD62C447E261DD7716C900B6C82A623A546B1244C991A9FD9134B521E3262
C44F4BB97E8617401A038FFE8E5A83D45707E0CB833F961E9ACA1E0E7179E774
F2877E3D4C77B3088480F0B424AA60711B28699E5AF130FA645CA89A5CBB4ABF
6FCDBFF66E4164C5286BE17D9C443973AD1263A0A93801BF811E7A44644032B7
EAEBBD89B85B7D826B936D025CC035064A6517E4438FC9167915BAB2BE2EAFE6
653CC2925185A8CC8F2BBAEB23959590635B5D9042DE853EF4BFDEBC069AE503
8052FC18A21D2BB0B6761547B6CF44E98A398A3F149B2EBDCBDE3CBCC6C1DC9C
A559C6CF6E1B97E430FA68F144E7F69565E9436F3BA7072A0EBE221071C9819D
0EAAA930E6EB4AE432BDC405AFD6455B3E384B41B126AE1BE587E568C19F0565
2E5DEB1473C89540B7CDFE9A94C8EB5684F9C47FD2C6F943DF30216B1D5FAB72
BFC55CD21C1D7941FF68D4A698224D6D8B0E87E958B79BCA822281E6CA39AB81
C63C23DA1DCE71C736D17754B3DE30658935D97805FC7D3947F2D2A765DE2B81
B4484734B7B0F240106019BF4A09DC5FF91DC978723E90F9D3F17AA68EC20C5C
B506EDFF0BD2D94B789A54A8D8C29195D0B9745FDA4653AB1AB6356D8511537C
9A4BCE119F4D7A058854706BAE3140F77319FF8619C515E0639FCC0A35D3CD90
C44DC60B03BE3FCDEECAADEE5EBE9C15400868EDB8E0D8E6B361D854C4DDC488
A1BB87169A3AB30A423FA63E4E75C5E9890795BE2BBA45C6A761087E921C931C
DF9BD9A3E78721941497B683ED2B5E9C4B1F1E852BC71E409358888764AFC289
2D3749D7F687C5B883C770DE9E091173FD55AFDC9CBDE8D710FC948B7021B7F9
B5EB5F55E003DE987971064B890FDAD4D67197EB7A1935769D0BF52E2EC60861
C9937A06AECDDEC7186AE3F32B39B31CF5CE442D86A0B05FB26740FF08D2D34B
26871CC8A3A2F9DAF257E059FDB8A53FEE4CA7986BAE6FE4309C3D42A4919219
BDD3A089F01D0F30EE7214E73D818C01AD98BC810896C4558582B46CA3CB2207
30C08B3A8246D44E2CE8BDBDD45FB3785DDDA27020E65F069A414D615BA09EAB
66763788B16EDE6C752D8F369B3D6E6F6BB5270E889B7DAA5196F6F539BEB5AB
AA0A2A4280347B10ADACC617377BBF194321B485F23554FD187C8FDD02FF9E0D
A97C63037AB7B29E3F8F7C43BE5A46B5F3A902748462BF46E6268270D7573A66
4A5C9E37150F9C3F3A3708113B21F2403DA79A45660D3C74F6A0A41EEC817380
070D37C6AAF76F627668572135AA363B1A3C9FDEBA0B46D262472CE3B7D7C248
ED001238CAC117C9F25697931AC184F25A56FC85A92FECD918D3FE425E2F652C
6DD1D202871BC2B15E525138AD94ADE7CC6A57792919EF6B19628D4B659D7BCE
8ADFCDD0F4AFEE1667CBAF6C752C492566835B1585979BE0FD19021412894A4D
82C2E8C37CDAE9B54D33854F8E8A20DAD08A6A77D2B80F4CCEAF676704FE5058
5B789646F76F42F55D52D3E050A009F14F55E605F6BE8C0966DB3428A57FC738
5FF6FAB5F9E842D42862FBB603738B27D3D99109E1979F37F1A2B5E92756F26F
A600F8280AE354FC0F15314558B9DC051ADA408089B32A45DA7318CCA74EBBCC
9E819363D31C9B046F62081E1E6E11A5117A21D98E644A45DACC4141BA1E1FFD
59F38FC55E0274899E1EC5C99257C138E31093FA358CEBEF5534609AA336A0D2
6DFB36A8D593B1BF290DAB48B732130503B48A2E61B872F31483A751538D9D87
8E0FFBA5B6D1E665A4129D7B22C0D056FEC152FAC83E05506C89570D750EA4CD
343E24A840F98A0ECDBAFA14BD6317E89FD359D85EE629462FAA7463519D3727
EBB88850EE304E884C1DEEF7C9D068FAD2B802689D36CF06F32BD8F6B5EEB718
0211BFF0A31580F602C5E023CF7FC4370F246F2035C3B257CF88A004D6A10203
D03263B17E6317256579742DA57447C84D9735425A7325673167E7E717CB123B
3632EAAB1151DE8C812F725C55805CC58E40C7450BB60A85D75BA83B31AC1F7F
98DD6297A59CF9AE147C6D02114FED76DB7512D1958894317FAB6C9190D9B1C6
AFA0000AFC488F2C81DDBB1ED06F3FA5E139977A5EE755D9AFE54A0DD5BD0EA0
A2B75715F84DF1D183EC044D4EFB25A5CF50777D118F4AC56607DF3EC17353BE
244048B3B89923240E6C2A5421EA10EB74C27B0A27FE18BB278D46986F724F2A
69D918CB7BD7CB24926EB317E2C01C04E3B26CAA2B7058D86463CFCD129F3302
628A1092F59A37E64A32DCE7462B637968322F492BDBEEC0D236528072ECD027
D39B7C11B07B17151174D1894EEACB89EFEE62FABEE861A1DDE3EB9A11EB2FA7
8C38F5AC761A94A9B3218AFA12D3CAF0134F9EB859CDCACD402788DB6F861C1F
81C7660F319D1426E13A9CA18CE255E9676630870579B901FFD80B7809A73348
AF3C199484B6BDBB92CBB7A8CCA3FE9FCED4E1D84FCA742E09272FD9BCA278B5
7C2922CE2A118ACFB97D75905E841BEE16A4D0DB73A565A526CF1BB35B1379F5
9C0FEDDE4B609AA7E8683F0DD73BAA55D908D46E756A523E53F55837B6A86B0F
63E75BF57D64C7DDA6701F3ED6A1562C77EC2AD0E5FDE719B5736EA99B57BD2F
17F9F651316942BB09D6557A95903017BF4417AD19E4EDF26C547A4E866D2990
6D884CE560AD1AB363BD57EA947A0C38B4E1D141ED74D61E333E5726BBDE1F1B
D4015B96F34354AC14C53354B6DD72BF7F6BB0AF44716D3DC58E03804905F170
7EA9DE8329DF74571F07CDEE610FDC729EE033B2502F27741CECA6F2956B55E0
A1BB2B8232903317E57A34CFC9B801CE81ADF3043FEDD0301CA6CF483F5510DC
ECB185E43970BBC99E2753968EBCC752126DB8B5B6E4B6B480DA7537F7DB8536
B32BD09A54E27816D46064E06FD457E6D6B477A0D1E838C084D91C5160CF0CE6
4531E1E2EFDF21027AE5F527F862C89D9387BEDFF0E765BDC4ABAE579C4851A1
074339496DA9F4904DF749285E236084CE103F56B06A3C6B4032372C93E793C5
237225A4B3E7F15F4991A738A50A04AB3781A8B2C64A1C5D437A8F71DED4606B
AB6C090966AA5D77D9700C9E89AD6AA8CEE76C193919F5EEC746C960906847FC
CF911C1EC40CBC72B24D9587DDEC6C2A0F1D2C3C0171F10D56D782B7622B5E59
ED98FD0DFE9703C6C4056414DA95E99BFF72EEF610A4C6E9CAA5A41A1D68A418
3DDDD9F62EC78259CF77431A14EA77493A465D585DA6C15093DB8406F8974F71
48EE05F083BE1AC25CC45E94265E8E8BBFC9ECDA4BB1AA7F88CB9775F47359A9
EC5E6A0BC8C51DB2D78D992B05BC834637BE55DFDD43CF52DC5E0EAA3B6F51F9
6F7736D189BAF2F569639B33B556A8C3ED5518CCBF1BA7327342113ABA4D32BA
72A23D647358B5E697BD5A8CDDF24591F75D2560885EF7AC58ECBAC9867D327B
1E89DD5B2F577673D8920BB44F9BEBDB94AD9C66053CEC10F11B30D986E95D36
F5DC4C487EC3E76E8594FFC2EE011096ACC36A47A14DA4D590E4BF949672D7ED
18ED0BAA5A0AA9C1149027CC63FD04D45EDD74381B9FD6591C92633737641EA4
8CF468CA08301B4E755DE3156349DC7D88CF4541E05622AAF8C037B7DC70E276
BA3C1C78DD8D1D62871262B7963C635A192D45A7738699AEADA6E5AABE275DE5
CB7DAA2C67C44F9B49AE0A2FA7BECA20CF91084C271DD8B701A148
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1E24B79433A73BE771A305
ACFE83195EFA1EAC827EDBDDA678979C87FAA5768355728EF195A9456C7098D0
9D501CC27070F27AA426B145218C9315AFEE5B4BB37010E988DF32E2D7CBB3F9
F236403EC9325531A6CF39B45B12328C9EDCC6AF76A0DF223531C12CDEC349D2
325D6FAAC3C41E378245A0E017C3352B9CB7F2A1E4AA3D9A44E39D5BCD4C4FB8
7316BC327ABA5D5F5FF14BFAABD822D9433F0FC61DD06BF1493BFD06A184A94E
7EC0C67DAF6DD7825A6CBD56048BE3943949B1CC8EACE24367EB14A7D28DAC9A
22E2DF55C42D244D9DB407A7FFF1BAD2948665E1E90FC92AF5EFE248BC07056F
5352F11301DBADA209D66E6B7272ADCF9C9C7B4BC22FB3F9E0A93AF57FC08663
6A1604265B534680AB860FF5F2FF702423C0EB6E56E0E7DD0D816C25DC7B7CE0
73E2EBEC74AF763000A262532D1B24CAA8B473CC05A7CD120D9F6B2447A38930
3C84FD6466918B9F72C88E51B17B6D8F69AA1D88240826F6D1D9FA162B912654
16CC2075CE1845D363B3C3ED1681A80E335081D1D5681CF0CEB35BCC9D8E9FCE
D3B4DA403E3B41787E1449D85DD117A39540A0197C640F020ECBDB6FD7720E2F
4A345B24AEE908E746D55DDF44CC7EE2647534615FEA0B8990BD846D2F545B71
3538F400BD99645B533D17C6F0A63738A0392FB6093D2039E172FBBB5710141E
12B60CF7BE5D5A8BCA41E9829BC1614E98CABE064B28F5EA4123BA815519FF0B
CD6AF7F3F22D27F2E83E9FBDC40A2D56393A562B98DFE628838D45D6773D3966
DD91DB6F3E2E4A849403DEF07E3BFC306877D6A128D0540193
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 50 /element put
dup 75 /K put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCFB8EEBD68756D0C2AF1FB2264575CDE978EBC4051C5E8FAB7F854ADFA10483
B09CA310889B78C4099F92B863D042C3F64A74819F6DFA4CBB077034D588F17A
616BB4707CD0CC63BAE529782DF5C4510022E14028120C3C60AFEB8FC9ADFF5B
E499ED33B0BC3D068CF4BB0D08EED0B8BABDE51ACFF421E56C9F3773298A1B5E
A0B6DE83614A008F5D1DD94AF4314E78DA3AF0A60C792281817A96FCE1B6108B
E5250E3C19F2FD51EAEBB05132566299C15446EC76C95FC5DE1FB058402A25D2
E1275A7460318933483658A0DD29A550450D3F87A77F0507074499B02F3CBD37
5F684F6D46AFA58CDEB42EF603758290081D5BDE397C5C89BD59C00FC3BD270E
46F7E096D1B962F99EC8717ED037E752AA00CEA6F2C9A285611407B36F2601DA
BE365D3BB266654CE313AC57FD27C13A99072C0D7C76C0B472B9DE06A3EA2D39
5F6E8A6A80CCD466FE7150457B2FCCA9F0CB470E1E996245BF51EB487D3717DE
33BEF346D9C079C07D19255C16A04A69A24DA18894808992394BD302C816DAA2
AF6FF00DDD7E601265E51CF8AEEA4FFCCBF1C4664754FD7BB25ED53BB1ECCE1C
FEF9EEC5FD09E5B87D895CD0D1DFB90C71FB02F17CCAFE01952C8EDD2AF6EBFF
80A9DFB31E9B6DC21CE1620C62FD7C8508472B699FE8FFD2D42A00CCCEA0D295
C8188BFF16D5A4E45B2E0D457DC68AF9E48270168BE337EAF77FC4BA5240666C
3D54AF3C3ADAF476EE8DC47A70A748601E8A7897E5AFE822CE79E095DD5ED775
0C3599F7D0F89142B166D556FF2F87D9FC881FDB70248AAED35FB034723A1047
01F370C79910CCF0ED0912312C393C0A817895D0093935706E8212BB299586E8
19DD901A3F166A7F94D0072326DA1A9D115A5FE58E69579F27170A80B4FD2EFA
ED4ACA7DBBC2229BA9F1307E886D7F252B8026AF7F602B7BA42053C9BB37D837
E34FBBB7378BF43D64A14E8CC82074ECD19DD822D197C7E493126A4983E8CF13
41046A5778C6AD8F19DEB0E03D295A9E55F44FE3A229C03289B1DD2B545FF4B9
9353A0F28F9DC7795394CC95B8B408ED88E3E2CD7F65C627F254E1F4F83DBCC3
76B6EABE132756881FDDD5646A57508B3F49E9296F751A712C9EC7C81AA21CFD
448B16C232AD97CDF2CBFF1E0EDB2B897E4B011238CC6A61760626180CF78841
EEDEADC6A335CE3C610437394F332E6E26D77DC6363331A2AED0AC682D0E839F
8AC2095CA7A6F07DC5959619CA007E0EAF7081DEC757692675F538B012A27971
DB33392D322CF555E41C05E99C3D27E3673EC575A7A7635573A04EC07E649B14
92730D6B546657D4CD2DD20CC3F74C1EF08A8FD6E2C1EDE727C1EDAE151E9480
B3E1C9805477DCBCCB6C37EA999E5FEB32D339F4D1F65EEF56A2138910D9B6CE
08961A3F373AA7E2C0C4FCF691BF41E002974EF277A0E9E3C0A4B2279B4E461D
65585B90310BAFD173B048C6B77A613ADF2B874563B7F19D43ECC2F000046B58
F936B95DE66B7A584C4FF8D05832146B1AC5DC6E3B560023203E977708651629
DE30EAC951CD0D25CB9A6D166FD797459A8DC9797C0594A9165727AAAEC60299
3FE3D43FFBEB3DD7C2206FCB83829F19455703C4A2712B578110D67EE7DAD83E
8F5C5166858ADC4776C84B5A8D761B7A4A8CEC8F61EBE812334FF85A91CD81F1
6CF081E80F15D4CABB86087040738237B3E167A386AE293B0D7E9A9CD11E9107
0D09860036155A3FAE514BC5C859F78BE94817CBC0149B49ED15FE35DA7E7EE1
FBB3CD249AD57FED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828AF78129C9C6603D4793359703BBB83D30F910F9043E6A31F17C319
079B64B9C7888D2DF89BF71BB08F361EC07D0E4119F045EB572AC5B389955A93
1A377381F4515F20C6F1F3503F76DDCA6D87A8977F7605C2C662D4AC5FBD7397
94741B5A6FF7E1D483C3C771B42746C66CC7A594C399B666B71E328A986C3326
47CAFDDF30AAA7D8A0C3ADC4FDB570516BD13C9884301A1D63ECAF423F96B64E
3D4D450DE7EF52245F48E3FD1EF3B6DF0DC4D2C427DF440E27EA417A7883CA81
D98C519C8B61790857547C84002ED6036CF065D3F649772BAA9CEC32542EBC86
502466F34113D44545E5888BBD9B05D0635ABCAE77421C85809202245009A058
B972FB8AC8D78FCDF3B0EEC0DA70ABEBEADDB663D7849B6AC4C1B4A2265AE31A
DC473EE3B349E3B8E4489DBDD7CB2A7B258C1A3D23D339594C9ADD85D9250528
3ED10BFB9B43B9ECF49A816531D1983A33A1144BFD885B4D02D63FE57E6E3164
4E74C9090F9AB3CC86A3138E342EBB21833A438BB809DC402CB271E1265F243A
9CF768D74A1255FA8600B81CEEDCED3647126D015953A88F49EBEAFB1FF86F68
BBC872D374472CAA3929104847B662F72668BD66532FD812543F9C555E68D405
FE0765E776A71FFA16AA85DA46DB6274AEA1D5D591E4B936A0548FDD946F40AC
B49B2BB068EA7515AD3B21E218E8C78903AE0205ED35E2B36412F37030801A92
9BA3E4A616252E37FE941E14B805870838174D0F265434F38692A46C8FB2DB78
3389804BB2B2F4F91469F25756AF230A622C8B919ACFBCBB3C163D22687CFA27
BDAA048B93EE51D26DB01B64D9C75AE5907FC23CE395F3D41BC9E8BC10553D34
AF6DE0FC04B38DE831DA0255900634FA111013E720F008A4B799
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 56 /bracelefttp put
dup 57 /bracerighttp put
dup 58 /braceleftbt put
dup 59 /bracerightbt put
dup 60 /braceleftmid put
dup 61 /bracerightmid put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F65F3DB43A0A8BABD302BC98891F425F475C51
E98E9DC11C742D837512101CF3D43E18F882033A879B291513F4F26FE2B0AF03
640DD100988D0F89BAD32ED6331ECE4C3BEFD80565B54C472D926E43B3088C8B
DEB163AFAE577FB7848E71BE8834B902B99981EBA948B2697D478739A03579D3
1AFEF593CA0B65B4CD40F0EF4A9AC8CB60E30326B11788B5FACCF523F1679743
1E0E448E0D48FAAE04A7C12BCCF32D620EC76B67DD4D91FDE83D13262B29137E
08A3592A94CBB690BA794127E72C535F1FCF60E20725E852B0E823921031D748
9DFFEBBA9C7466D9E55A6A37A668E1C5BAC0AB21DF14947C5F16F692CF152F18
14FFA759243B9F5CD40BA5D6ED9D4B935BFB1969D5C2698508B11E368BF2AF46
3D7FE086EE8DCC78E1FC4BDE03DAA546D18E382F57891585462B47755F7F5F95
7A62F12E63A72943D20077E8965951BBF747650CA675E678791FFF1FFCF65039
BBBAEB425D5A221BFD2281FF3A4B71AF873880F7BF125DEBC3BDE10AE57AA7DB
94856955A15AC5B1584690F251097CCAE6CF24EC08A8FA23482E03565E430CE2
AB30460BFCFA7865A6F0A70A6B6680FB34638249781FBFC52B8546340EC75237
3CF1A21CD2CE5EDF29B818FE3A590B3DAE404CF4EE750C4D1169258B4004E460
2D23051A6147BBBA684B375DD680B1B661971080DEE0D1FDD4F22A75147A6F4E
1FACA7FEF0A0EAFEE32A8EB90589267FFD97E439637E055EFB16509349BBC63F
F947494A04DD74C846D9EE064F48D179CD85DF1180DA8034618BC04317C3A51D
8C7BEEC12141E2891DDBFB493E902E68FC323C81729B4C3B717586B50C1489A1
38230A3800723E1B873C31A5C393E52928804EAF26AA5543FFD6D9D139EF03CE
2469D4444D026D96BFF8BE34130611803958D7216528E95E9BD2275EDD5E42AF
0892A88180A724F764BB0DB3E8FAEE2EFE52777026DEA327C848719E3D09A4C1
199924AED33B29DE49B2D85AD5736FC96E94C9CE348210088C613DD00F537889
C1F0806C014F8B02EF40F40332EB1D91938149F971C448009EC89D309F10D70F
65ABF2D6CE11934D1F09486F0538ACE27CD64AAC1DD93C47BEC6BD9ED4715B47
27506249503CA3B7879A99BCAF708E3291538B0EDB7FAC213EB24F0986DD541B
F60A395607A0627D1EA6CC5FC218CC049CF062F62EDF17E08F57774AA1880AD9
8D8E7C324DE0A8D4A21AC7EC84FE3F7BF65EA74CB0A90A62398F93EB3E575186
3F1146E84715E9D2C12B39D64E2171A899839F2DDD5140A388AA381EC48A5302
05DD67AD494D4B2D3D1A95589E57A33ECE85762833F28E59DE0A5C01FE0E5FCD
8DDE22C079A3751BA50CCD1349C90A2F118636E17DC38F3BEF91931776EB4B4B
E5F545DCE57B98D67C85149F0F5297AF88EFD251BA6D55E64DFE00A6C7BAFAB4
41F2AE082A6483EDAC200D6A455E92C66569A1B2EFCBBDC774C8122E699AFCFD
F239C4EC7910C85BE62395FF295F3A580C92C744E79C1D269A36E7080E0D601C
38B8CE820E30FB88EB5FFA4EB93AC376159459910BCDB97A3EBEBE99F48D7B0E
D4F5DED500D7F1D6BE1BFDE2D4766010045531F1143F0655042AE2E29E08B55A
B1D16274DCEFDAB9DECBEAC369D7EDFBE17596609D82EA88C59E6AB51ABE878A
F20457219D27A593976CA0E7DF9E4C7AEBF826EAF6832CEC9F6FA507F022C494
09DD41D49C16467E4DB09092E202AE25B1140CF902A6CBB3469A056987739CB9
3AA4A03751085C481576797232B09EAF92BBC6F33628CE82A2924127F48BE96E
8BC4F3DBF1338B6B7A399D32132D79E384BA77CF2469BB531FDFC50530606D3B
72DAA67427E7E5562647455501D35C69236A8481B26F4B481585B4FD26494BA7
44DCDE9ED55BD1C59DA37EC817F53C242784E9D57D5EC3587C09CFB052316DB1
C0E90CD5E07DF017961A78ACC89B9B3E0F19012A15B858A33D139804AFDF6F64
83E4ADCDDD87EABC67BE619C1A3FAF17AE5944F75B45ECE4BB2497CF948A8525
D6AC19B5BA7785CFE3C98950153F5F57D2092544FAC265D35AC8E715C10A7F9B
86E611DC5BFE619F7EF7FA7AB771634F5DD803575976D826F8CFF6F73B7272D9
CCFADA3A947CA749B50EF2B691BA8A03FF11BFB205B9A42E323D6494CF850FAA
6E987E295F20D1601993BFF26F557E8462AEC9E6F8C203EDE00D881694D982F2
22B59037AAFC4391B765649BBAA3F2CAC0715DB56C14EF1A34FC36DCAB8CE656
29C141F8B87ABB3E545BCD37CEC8DFE9A3BCACFF6792AF2C89E160F29A73055A
6BB2E9CAD88B99E6880EE2EACC3E1A641907E9CEB2BC42B9D8A7E331F9389D5B
40ED5607CAF6A4C93CF8428248DDD8712661B236F20E7CF616D489A1296071CF
FBB307DC1F4D52361D90C5B39CF3E079D2C6879FF8A01E4D8708C497217E7CBC
0305BC4FF8F3B7A31FC1D16322AADA2C9385E00FE6AF90BC78375781D7213709
99A00D3EFA31905F68C12BB388848BAF1BDD954B13508E35E050CA4EA0F86CDA
D01B3D3FD2D408B56CE03452349AD2C330FE88D8329929CEAD44B719713CCF56
598AFFA45E4B46875563C6089690DFC9B48C4CB9AF75CCF109E1D52A6E6C037D
41EB320E0DB3F9699B941085C680BEFDDE27FB19467A17974D931520A783D73D
D8AE2364A6DB231F4DA2198E0976853871B13A473A7BBB21D15A47EB493EC18E
E37BA8349C503E5F33396DA0D1A451F982DBB629FA661440C361155CEF13C3FD
07E68404DBCC4C95F9533497073B856998AB63AEA42296321198CF85E3F5EE1A
DE6731FA8E255C3BC1F995C620DC8B61E709DD8D94A71806E3B95A5C1314D6A4
86D85B6AAC5C2A7C7398BD58AA326DB0B98D317FB0BEBEC9E8F7FE6DBE565643
D5F96B34AA833D2CF212F5B5F1AE9887731F794BDB2F176914B4B75444F90255
6EEF3D1AAB8A62B77F6DA0052F03731125289A7351C44BA472B777536BB62F3F
01C19DF3225A8692EC98C3C2DD8ACF4B804E789DD57960EB3765AAA2DE622CFC
862F8FBFB3A8A641A0C19EFA6BEB27AF8577A164CDEE5CE3227A9E246CB9FCBA
0FF22FBA1E2FE8FDD4834D8FBF1A603AA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 75 /K put
dup 84 /T put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B7893506FDFC1A72EBAA9FD2DD8062C0D
7B70D35F81B399600C625B80C26720158167C6BA509BEDB43F4F975523B11AED
089BFB242A98851A0A7FAB1BB928A943149A736931A0867FDE24808F3DF48A27
F5598BDD96919314CA8D4260B1159257DC993D3F9B82F87CDE05416E0CC15E45
C8F2E2FDB7967F289DA5EDFEDD893AC8E5586E78365BCF24B3B1BA740C848CF8
7621319EF6AA7510C351662198552DDE9EF05924970F8557B2746592028B3E0D
0C5CF6FDFE97F10DDE0678935A572EAACE23F981744D5B3262753CA6E3FDDBF7
7474796EAB41D7AAA55CDFB3C241D0637BF5430AF3A4E3BDA6951B234B05242B
B59E4930A2C7E1B6207C940EC5B40EDB5DE26F493F60693A21B553A3F3D6C721
F4E7333049CAF334A334F797146ABC71C7D6955A00ADDA201EE841CDFB4BB8E1
018039E069BFC5AA741899ACC5414C7F850918CF2719BADD88D574299885DEAA
F465CCB3B129AA68C642BA1837995A2E583199E56B3A54A0BE744E3665601C0F
1D517ABD4C04BEA4B05FBD5CBDFA807A41985E2CD4C04C1F6043EB8CB6C559BA
3E41129529DEFB2BD52E40BBBD77BF4F29EBB8A75DA6C8F2D01C9FDA8B105D50
F8AA518F4A5B8E83FDD826302AD8AFD571B8082DC0C5B7347A138C35377EF91D
9B63FA4CAD5D9EAD24FDD3AF724062BD6A19261A9B6F13570944C88A1BA0C3CF
04471BF78744A3103E61CE2407B7F9FB900D6AB70EEDAC1D956538C94F17309F
AE352B1A62FF753367718573AF2F0EA2198DF8134DC0A28D5F92E18293F0A135
D8453B8A546EA183A9844E4F0A1A6363DCEFD2F3B2512E8F0D9699F9383A3AC8
F188E8074C16E953DA089B31F4FEC57D1D6757D4B57B0E7B949BA3127389495B
C07051E7C9B2F578CA20276C62AE79B263BDD1C8FFB8D2D7ECF039BAED4DBB18
C3FC7F40AC5B1A1D1F89392312F427D82F3CE9C8BD0AC324E008D1FEBEFE3DEF
ACF3AD2148EC29A316829B4ECEB6FEB17D7805C7FD1E4185E90822BD1EDA1AA5
CE91952C2128C482F253F37485A08945607584FED6BF1E2FABC682DB7E6442CC
CCBA563704147695B43C27E88C51B2CEABA5329395034557D0926A5BD6AE8758
CFF6A53718E4BEC028029F245B1E414A89DD349903F47F6ED042EC4978172152
5B925707D9366A4DF9E3D869109A4E4A9A184590D9D550D4EB24A46A528E9445
C8D2B2BD4D092A28D86B61B36D54F2BA42052EDD941B80201670351C59049FB4
BD23FEEBD8EB2A93EAF0E27A75A670C2A30F65EE507F03CFB08B1D63C76FA0E0
A1120B4B10C851536C253AB8646F92109FB34F7CF885DCE112E714E0B69E47D6
3612340432535C466BA9BA284AB24FFAEE3BEF3E46AA957FFFD19B73A60261D2
14288680056CC64CFA1B45965CAAF0CD9908FD9E52F4C1ACA7D81219AE28757E
10C68F1233F7328E2CB87FD3E21D6A9ED8C4D2906E9F89F943CDF050085274AD
B56BDC36EBB96801664456B8E5897C28F04E41452A046CDACD654E580979EAD3
7112A72485538C292D4E243D2CEDB99C6A99148D5F9E0AE5B337E1657709D236
89FB17ABB83D74E26907D46939C05DE413E16A808377BB1B69AABA99A1D82FC8
4357CE9304BC0CD0A1BF47DF9C250A30FB868E11F94B36C1CB58FA5933C74678
3BD79DC068FE0AAA3765AC0A0CBDCE22DD38A9836CE10379D36CC0EC6075F8A8
7DA8B3435091A553152A94A0A0DA730BCD599183DCEF089C21CE6A0253544688
BA9955CC384BB68D3DC40B308485B9EB31CF050E7FAA9F302171787E7CCDD911
996336BBDD97A415FDD5B80524DE0A9221F267E564CA918B8651D33F5B0B0E9A
C57536E5F3FCF57DE7948F62DEEC56CC547C0B2A59954844D1083C15DA4CC594
ED86B064B549B7D15C5808596F2B20D1CF7B5FBC335EC0CC07D84DBA39FBDF14
1428249208AF6DD3CD6846ED6DB142097405E1E2D7E8C55AADE66876E094238A
414C41A7AC13677EBF730C7DE51F83F7BBBEF887235222F7951DCF07D671F7EA
1725390698AD813B74A3CF54332D54940712DF2F92652BF22554C6CDF82D82D1
F0DED70FE21069913F01BDCBEF136DB4BC1B6E22F5289EFF0E1449019120E754
5627D99C58B65462D31A866E74BA3AFD3E9B1F3E703B80198E8AFC22F33F05A9
2C306E5AAA3ADBEB40B59068EE12C3B5FD6A1E58DB3FAF01AD048E62A7BA31EE
733D1206454B6CDB80F5A540BDC8CBE36DE45461AE87A15C3418920617C65EF0
48687FBDBD8318C9EAA8FE621B8B11BAA42068BF009DC284283C6ACFA0FDDD43
C2F4D5927236C0F193AE75B4BE43A49B8F381A0F702F00202D11CF594162F31A
1AD0417FC8C9FCF965C62A411491667606E5443EDFEE44BD0E27DF880FC81B97
9F2D47A79F64B0093A6DFCABFE4D814C20425A8490462D6BA0AC6691D6FC7235
0AA98E19FAD0C61CD0E4C264E403E0CEDCB9254202178566148B9136D50191E5
DB4F38607253CA1D47A86E0632886265E9DF411AE095A128AAD529BA899BD21A
871C54EAE4CB2E429DA48B4528D263766FC7EB5AA49CF5243A899C3F47D05FB2
D63518E33F23C22F81CD44E9C71DDEA3A0760A3E35FDBEAD4AD74A86CFEE873B
1D595BBE14A9EB1F1B3317535CED100AE7DA263AED31849F0383403E13804D6C
B039283421E8C0EA3BE8BBD162AE1CDF0B806B83C6E916ADAA18F09B91396157
F7EFFBBF98CA08AB8770E293519A9A36E73F19B6BB964FD91CD0683950DF05BD
8383F5B028F05907E38552BCF2F6E64A4E1EB69CC10D197EAE2CAED01C5D9BB4
77E26820AB836BCC9FF774319203348BA9259E25D269E37386374CA224F85651
A701C897D3CE2381069BB067A05C2FFD01477F074C95C9B4E64709086E5633FC
CF18898A40B8861A4E8BD605C8AFCF5D44BE2F918BF26E9A494DB1A9FEDA40C7
9ED27BA99F9B658361323CB08E8348308EF755FDEECF89D7F73A1AFAABDB940B
9FA0B6A0E69C03C56540CDCD80
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 21 /lambda put
dup 24 /xi put
dup 27 /sigma put
dup 30 /phi put
dup 33 /omega put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 67 /C put
dup 75 /K put
dup 82 /R put
dup 96 /lscript put
dup 98 /b put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455596FD630BF9FA4967FAD0D848DE7F7DC36D8
B3E4AE909CF3893CB2E0B4C75AEDBBA228A6153D8E14CF85D69C13F84CC37AF6
D05DEE8D9DD494595AFE735E87FA1D6780C1F84FB83E0A2D5086611075E3A016
F785A92DFB5FBD099953805D03ACA6D23E5EF556554328C9BC2AB97C2982EEB8
A8DC00247C0778E947C4EF7D042669C7D5EED03CBC5245BFF3CA08418D9532CA
DAD907076117A8072F3F7AC69D1CD266B8F48AFDAD2FD3E6379B91272ABDB0A0
41D65CF118676BA87FDBB2085B54963204D93FD7755A12DE8D88BC029D03BCEC
D203D098D4F461D0E55885714473D052B3624D86AFF04FF03C1DB46E17DA92B7
0AFBACD8ABC6EE1566780C4BDC4AA9D4777134A01A6A80643DFF59FD3B5484D7
DF1E400D064CA96F1F5EC074F66ABD52EF90472D430422AEE66C97073D2B7FB7
99ABEE71AD02B50C585EF0E6548505AC7075ED622AA7DEBE1213DC0A9FA7D305
6A00663A707B9480962DB301593936F699EC289FB8CEBA459DD5A46D7DAB6C1A
F37802A73A01CE71D91C25CA641164CDA36DB8270DFE41A8EBFD64FCA08AA14F
156A919FA7A53034BBA21F6FEC9E7A46D286CEEFBB71E58BE7EDCFD3BCBF8100
7692E271891D1DD2EEE1939AEF9C41BBA36A4288438E8C8913B329F25C74FD76
FE30D8E3D92295E3CE29489A87EE0B1EEEB77554B9C4A60ED0A38A81206211AB
A28EB322B88B81AD5AF11A37E7371B0B1E6B89FFFEBCDF9174DB09A363038AFE
77AB7B207EABF9C393ED7B2588993FB02F8F57DD8C1C5AC12607195A8A06BDC1
4F4DD4FC98D6384D18D7584832B0120A39C9C5B4051E1CBB9BBDA91E070A2523
02C91F12C487BB73CACA341766AC5D3DAEE6114CAFEE27750E5A346B7C7100EC
76ADE330AFF0B673EEBA9E77F63D363C41CA508365E9ADE4AEC3FFD1ACEE4743
B1963E0AA4060EA1FF3D7A2F1B2929D6DEBC032DB5D4AABEB51CF4587BE7D10E
A7D651D211BB4F41E896748A1616AC8A1AFEBA0E7408995CA60532FD4ACFAF91
781B60D1697D835CDD9F9227BE085DACEB4FF6741D9779C7656508A718817041
2FF200E3BBCF1D490224EFD17B16126A5CECBAE9464F46CA4C58406675BDD940
03EE1F18120A3B2D996166F89D64AC84CD068C0E5C40EBFFE67714C03A027190
F7E41205EA3E31E752A2AC5A782ECFFB7BBB01B274450D8222B3C33EC7B1ED80
7F8B247CB59185E4C8DB7082067B633BA8C211FF94BA955FAD3AB8FB9CCF964A
C8428B33173A3B102E54C39208F68E1356EB21BDF1FCCEF9762DC0E83BFBAB1E
04DD48C187849A7125A5F0A102A3304B295DB6C14507F24760E1E289E50F0EA6
4DBFCB0B6C326FBE250DC2ECB68000717325BB979168846768232381C804D227
55635AAD9C5FF449A85B3B6F37E3D26A6BEDD814A0EEB4EBF62032482AF8A7FF
0693C54CBBAB31C708193E6D70A78950A38E677E3E74F446D7C6082B16D764D2
768CA8C460AE820B9B465A6D34EC7F81DFAADAEEDC2B01307E00D40715A0B453
D8A205290CBC9236EFF986394748B7DFE941A7B639CDF441D248687EA6623874
1FD7C59AE80FD9824F14F1BD6DD12AC8142A81AB097A9A3820C832DAF2F130DE
2CE4BB9578103B01B9C86DCAC89B3B744BB2E26EC6C3A156471F6B9E8482D659
8943A782BA5D304C3DF224AAC64FF97C4CD5CD52E0558EAC09802B78211708EE
DA55C7FADD133FBC002BB5FF60487DEEA08BB5778948D65AAD29AAEE2A44FC79
6A297CFC2FB998279D9988305DACA3C67D683017116C5C0B6DD53D970458DFBC
27E7A6C63EBE244C36AA04C8914F83862ADB94162C0DF11A2AAE3D4F5E82E5AC
0ABE99F10EDF9B3CA11BC9CA0F3FE9AE6180CC3E9C0FFC28081A97A9EEF75913
347589D7DFF127DADB6CDB2F9A90368C16BEEB5142AB7280098C1034808B9E23
F0ED40F5BB0073576C4B184E235D3979C2C707B5A91AD4823CB90C33BF9E09A8
1C450D9C48289DC7F1CCF1B8FBD01F2A89DB5B5CAF7B477880978205138EBC10
B5AD42003D144AB3F58B1FDE7F72583F4F58E020E7B079A03C1174C7F2262C8C
49FDD6A5A9BD1A2BECCE2E0EC469F810F15A4765343F07BFE6624B5CE6CDB5C4
9ECE6193B568F68796C3D16C11073ABABF5F21DBD3573FCF11443CEAF264842B
94A18D41C3FCB79818A6D6602575689F38DDCA6019AAC021154FB19E564D7842
D3B45FEB80705F2A648FFBA47D66456FBD77A4F8BD40E7D5DA23A01888EA969B
49AFFCC0D034950ED65E59D06E08F5004075E33C22BBB203303A945A18E1BD07
8DFC9D84CE0B547579475318C3C2052F6A613E2A543AF74E112D8BBDDC68EC82
13E5BD476C6D9E79D2FE74ED0123AAA78CA7BBFA1BADF38D5ED4985E402A7471
8AB3BF936231CC82D9A20F09095A1E981DE49D270632F4E81C55C211A8912303
645C832A117E6452059ABCC46C2C684960F57A181C672F2AFC80C5BED17E527C
E98F624C4AFFABBB77754346B6E84986A6A49FDF1FFF0C661867A6E62AD42044
24245A3666C6A7A7CA36F0412BE73CEB6B9F65273252D9687F0622945F09F1E4
5DA922D511B3D405F31B642976D0EAEEE6111E7F4449770B11244301A109F6BB
7D0D4253336C9ED271432627B4E72F25A88CFC3BB79C8518FA712E14CD656EA6
FE6C97113EB7191B567925169437DD627855613AA17BB32AF9BC0E7397B74DEA
36578E86E266E83BB22E368F7C09E12819445BE924E771A6178D6BA7F11F92DD
5ADBD8ADBAE9D61B5E9487739747C37578056180ADD96E8928246F4AFBAA1E3D
1075DE8CFF0D165EF1C2A06A9B9FF8CDC9389AA3EE91A27027060456FC6F193C
C359DD4AB88244672711F210B132FC992AD9CF202634A46832390018ABED0ABC
991AFED318AC50B22467FE3E22AAB8F4568152A2E7806F5FC04DC6832E76017B
58CF6E45A82875540F93C2BE6091FF0FC13EE24BAAD778B1D42EC68EA046D313
6A774765BB9F44C20B1574BD28CEF898EB60165AB1CA985836BB7109598EF437
F4CFDA24C84AE7FE26517026264BAAEAE47062D8B6144B8CA2DAAAC6C5A4FCCC
29386254DEEFE5DAC4032FB6768CCA2C3F93FEDE70CADEFCF3C6EEE7ECE318C5
D6A61AABB744D9B432AB0A50D8289E603752E2F17A9003C82F08DC1A56CE4DE8
B74FB0C3D906038408989E248C56A4996ACBA8328084A888F5AE4BD6F421E2F1
641D2D6CE79C3A141376547B731D6F7443CDBD0EC68502FD4DB31F96EF55E1E1
D781AE7300A40A4FF904F8C309AC9D982CE14A6F9861461B74A88BF96435C2AB
9A48482F44B80ACD7848FE8E8BD49E2D62E6F6122B27B725FF3B243FCF29471F
A7A1F724D5D0FCF645D143C29D5496A2B044FB44C73D5048071AFB21501E774E
AC3DEB9C4341F648F6B6195254D43B80B114AF67C1A6C6969E8C667BD7528955
45CB3BDFE1BB6492EA3F768E5D7FF4EAEA1963E15194ED5A08D0FDE14C07AF08
6B6CE646A01A088F56977BD31ADFB55B27F78DB8EF1CDE48E9893D236C7A459B
D600738D556AE52A5B9DA2E1E3E881B77E7D6BC1C722233F8CBC433BC321B574
471D6B8286FF245F4B46F171B561B90A1A250444CCB45B5D5B7E9E0A169B6264
04804D4327B50DA87325435B1CD7BC72F188B5DD53069C61AC84812F975C1416
54A85B5AFDECC82E2F61F87CD12CCF8EADD119BB016E17C14CD0CFD9D14FB45C
95D5C35A8502999C7D738DF0E9510F11BEAD83549BBFD1F53A5B750CA868747D
C6A1069B97D248F5FDC58F8EF23CD26D61CDAEB6716BA5BD7DCF40040AC920AE
785FAA007BC4CC25CACB7CA94C6285D63ABBE9F43DCC8A39E829641AAF5F67C1
5E161285DBA1E87C7E4BFB8F5D4F450784AE56F75A8B5C0A5BBB3AA575675EC4
C24F3408C198174FFE3B85F8AFD3C2EA1B3A120D2BA8229D81A30999A9D43A05
72EE25FD77FE8C3ADC67F32486D2700DCE9142B603ADB6CC9686A7BB400C1A30
7E877052463A04CCF2B22440531C628ADCBC15F7535F6C12082272F4BDD1D3C9
8EDC47786AB3F39CEA2C2F871D2F82DEF9793754964EA5411D70F1A5A2F94FB0
39EE45EA6B7AC7B56D977767DD49994C920B617840FBF7586301647A776EC59B
AF65EF2FF5E1F7AF39395634FEF3ABA682D26BD9969ABCCF69768DCC4B47A1B7
36D28F7208EB84E652B9CB30943EB22AB0EA02655384310ED0F912D569A7DCF8
69FB0BF4C34F0A41E7BB488741C4E3A2CC1D74B16402603FDAB0D63DFC183526
8562C7891BE0820D16FA0CD813FEF946070E72730E17E60B8E76055F012A9B48
277785C3977A9DD96A0155DD7B2923D53A2BEDC1A50D627C5682B1DA8AB2FB02
2AC985067A9BF642E78A5226E5534500214C4E60B7149FEEDD50661AFD00944F
9F1D50CA3E97715DFB4F282DAF45897BEBAEBEB13433E4C20FD49FAD458C3018
E97FD56C94F1F982E31324518874A56FF27E21AFC4666D2E171498BF1292278F
C98A83DDD6C1FD40ED112269394A7ECC376BAA7BDAAE399BF5F7E8098C65A3A2
4867C4FA24C04D3BDF1E066724B6034963AC27715576CC531CAC8279C4AFAE60
33744FD1B6A207DEC4B29502ECB6C7D9C49EB79985B1077AACC98E0F4FF0DDB2
E80D58B526E6471A3886A5D4A8C205829211DF582ED4FA478DCB3077044F45BE
C4A6A588D1C59B53DC6A0C3E4C1B1C3E52AAA4B1429637AB1CA994638C6FB3A2
CC076251B62F0EC09B3880D184C4D0436FA94FCB27DB6482F0C072BA1C8091AC
4666473F0ECA4B55AEB7E4881FA437C08B7274CEA9B78BE01A482A6735849AFD
8CA182762311C1BB76BC2E43A94A54368165A4665AB5123B438FEEA214889EAD
3D3EF2A5FE42B95601B90848A5ADCC957DF470D42A903643EFD297870FA5938F
CF4D5ED7E538470459A5F46488147DBBEAFDA4857DF25F92CB446AABC1A31774
777D50C5E46A6DC36D5C9CBDBFC18E8038704C3D384379D3418EBC7EA1828EDC
1E510D09C4A48E7627C92C952CF83EFEB2E1A0B5FF087BFE526C4D39F1C1891B
AFD0FB20E6E8FC0478114D39D4384DDA7A760B864F07846D4DE7C74BA3A5B514
DDC75E051985B9A228A7F01990580BB06B03450B0BCFAACEE237F5BF83ABDE8B
2D6323F8A1F9C883820321820E2C955547877FDD9CB4CE39A0D0BB97BB609EC8
C4A16981F396DC1AC05450D04379664C4CF1C9C9ABDDFFF297BBB06B3D01E512
43ECE56C9574828DBA45B35EFFA9C4DB22708EAA5B01361B559041190E5AA292
3BFC8E81DE847DCB44089056016F8EA7AA7E1218515E1A33957FD6C5A1ABDA85
F16EA4123A5987CA063DAFCF9E664034638A1823E9C25C323F421927A9B6F608
4DF7D727272E4D94577B2F2C043366427BB41E04BFEBC5A37C6D7C99DF76324B
91DA2B31F0B26B55EFE132B6BBF77B83BAC410087EBF33E5A9E324118855192A
37E1F38C5E57FA70F3EFF404105ABEDB32BC6AE18B5C41F7995022B2C4D74958
53D25F88E2C8320DDB0A2539D75567FB922777B77C8E89E1DFFF1A2E5222FA9D
94057CC06776D69E7ACCDE9D8ECF959188E4B703B18203A23763FEA864AFED8C
ECAAF71CD863B68B991A83196EF567D9065C03BF2BEB9C1D6E9BB123AA82E7C2
3E624735A20F0846CD897EA19275E2E995A945856BF25E60621B4FF882315521
1F0C798AA4D4795E7D11AE228DF2CA98965904C5883EE9D00DD04EFC9552BEC1
F23BB19B61D39D452824923280FAD2A2AE4426811702D2B0DBFE30AD16B7FFFD
46AAB2168A672F61279FD6B2CF1888E0A506ABC5E8D801FEE480E8F5B4D0EE95
1CA0A2420CA0D914852C4B68085A70DE9FE0D1EE4E85DCB518061F4572130CD1
44EFC235AB87DEE9BDE2D3D386AC120E3546C8F885B5CAB0CE0515CC011EF608
27AE697B46B16945AFBA296A493C17AF939B40431C44F275D11A1C9DE96102B2
A2CDF98C4B2897487BF1BD049D3A91792D7ED549C37900910688E373AF40EBE6
E9E223463A7F50062B75EE2A1C06FA11E7D64C520B1CD9C49F605B91DEC210E8
FA9908B4634A0FC4FAE88D84783AAFB19FC54C2D4EDD309FFC2E527924F8E719
38E6CA8471A87F35418D73E33652BA320ED3D2AE30B9FDE497BFA816B04E1AD5
E10BAFD2A5B7DE815C5C90A6B6D9C2E9CFEE675605075EB3FA5B1F5D5445F0A4
368571F1D0F199C87C77EF6E0A38A86DAC5C260FCAB107CDEC338755B761701A
DD79177E7EDE98E9119188
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D8E28E887EC5B2CA95FFD044FF2288FFDD68879C486B077F17522FE8DC
250FEA26AAA10C34F422BD8CCD4D8AA1165820089699920976543E664CD26098
BB5CCCF046CF76B610B83755F56EB856E563769DABD9A7C1E4B69195EA8FAE88
69F6200F0E94582C46B8D8D91D9135070980BAB7CEBFC95FF1C9B303FCA38E69
20083875E65A41B6689D6B1BD1581BA0E0E50A25A2CB1FF475423B447389C734
C74C47F96B61BA0F88E975A932C05361A679B4F05537A81C7607D2EF63672553
8A48EB9A267AAB954AA446FA6FA9B6D422EC56FDDF743730397AC27ED9FE7D19
A96391978EADF9B8C1FF28D34A0156AD359C58787900069BCD3053C9C11D33BE
430A5D8E871A8D57BD93B09F784A5EA38FCE67A6E0D143D41FDDC5E0E97FE168
766BA7F3BE1AB51E647DC94470C1B81595A55EBCAC619FD16BF6A719301CCC00
82AD4790F5B9871C7669547BD509E6FD227E6615E7FE9F45C595FA3CD4119593
3456AE8D5AE88053121C699A324B9D50C990B46D87C9FF26716444AF3A79173D
03CDF1F8F241016D11B72F307EC7AD2C6242A6881DB94FF3370C12A3C29AF6E7
A79BDBFAA8B43B7C8346533790FD2845E1BB54C70AF4475A4271B53515DC3AF7
1BAE6A930CD0E6616CC1CC9A6336D01F0626A57A61B6D9401F3295A00AD7871B
E2C7795D629EA1D555BEAC2C41D0887C0D644CEF054019D4F475419C4D7C7FB3
424500F588E6E9399E656D1CAD0B932A241BA16A4989231FB416D84E648FBF78
CE036AD10949F4D9C0F96D23A8E06301E091E0C1C4347088F77069AA0A31C526
E11CAA6454802EB5D2E870848AD592E6711B4A2C28B78DAF7F194C3189F4DCC1
567C039A32680817D223DC685C37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.0: CMMIB10 003.002
%%Title: CMMIB10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB10 known{/CMMIB10 findfont dup/UniqueID known{dup
/UniqueID get 5087392 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB10 def
/FontBBox {-15 -250 1216 750 }readonly def
/PaintType 0 def
/FontInfo 8 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB10.) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 24 /xi put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269F4A3F32986A7D15
50483BA7C04CAE03D8C22F6F9A1827004DE75B70455207585BCDA37DB2ECD162
363518DA08026AD9B621422303A6D262158CFFCC48946A47FE42911F1A43CF10
7CE85E61151664036FCF591A1CFF0E7AAF263909A6A4A50DF0CDB60C91A75327
8C011FC63A462B0598140B4357EAEA08DC2C5445E1F8C2C913B721D5A1B67941
77BB66689F330A22D1DE5D86B2C4712DE9EEB66EF95D1E68BE947672CBEA966B
3E26531084152B1412F48697A965C85B0338CAD1EE054DD4445A9726A72E959A
B5B74F0E0A5A8F630116FB8342254BC455EC3667E184A9954E0B76EF54015BDF
F3DB7D1FAF44EEEF38E5F07E9589B85ADCB9B529CE9C889CB4C43D1C7F5C676C
DFE91F37CD6CD338DF774DBBAB9A1493C7384ECD4B588506F23A024487CE4903
0B8C9D1483536BF7CBC05E9326211B9211F11FC8B2B098A0C5F89F19106978D5
84C9134F45A542D914AE56D73299B3FDC93C2E8F4D271B54F7EC0FB05C1DA397
E9A2036EA69C903EB95485765BB05BBD2E021ADD7B5D83555E490EAA81157819
A2AE883E39B4254EAA5C4FF60087C4875CDB9E4A85A54955EEF5DD5B15F8C970
8E22FDBBE98CCD8E49C27F55616F3588E6699202AE58B0D9A3E398A350D90CA8
D3BF920E504EFAF93B5CCBB336B072F2B3EFEA907599A95774F4870B6656257A
29ED37ABFBFDAA41ED08161F473C20CADE82D6F7531110CE680EB172A2024F8D
6F02DDD49350CB0BCC97C657BEC9A7A92A7C1E623E8B0E409A74B01DD0A470DC
94ED4CA0B6BD786EE287B753ACB1C10BD826A84D8FF92424FF1A2418A6EF9BF8
0B3D0F708E2F52E4557F497E749CA9F2E513F33D6D489612C68B68CDBBB4CE24
E53AC2AB756F64B838CD2B0D9402620B0903B8A357D8020DA8B4DEF15AA06A1D
D4D78057167B901643CFC357D7283A850C139E1BBF6E4079F375EAF63C7C4F7B
F630FB23A70A90178560B1A2C7F64A2B8796D60826F3B10BEFF755CB59DC26AB
FE5E0630FA1E16D083C8A5ADE0345F783D771AFE185F3DB251C33AD86127C0CC
548400D92F559737FD421E6D1A807AF696A22C1779AB236BDD37F7BC467570BD
4C1981D141680DC78513430DE03DCA87134EE46E90471F4DDFB4D5AF445433D9
FF6F9700904F274A610E5978C0C14110C00C0D49891AB4BC8690BC93418E9EF6
DF7A3BA8AF0BD66C17DA2694FF55528771B28262917CFFE822E973DA4B55AFC4
AE9F6C28994E25F88612E804C918278040097C028E15C6B7FB53332908842185
10217D7AF376DC438FE712CDE9C50040E0B79F4BD67DEA70C6C2FD34FDA699EB
0F6047A613FC8485CFAEC294FAA0214F0639603A00F19A5D92A3BE89E5FEFFDF
CBE800B960AFAC6EF1B85F4B74D8830266D0FDF78081F6DF0F596C90E1954C09
631D98F44A8F0C2394AEDF98EF8BB4D21AA7905B3703D76FC4E104389E61377F
92CA0B2A9CABDAF99CD194E473FA0104ABA283C76C20F003C604199E6D4D2A5F
C72FC32D84A1F4EAEE4E20660BA4C14C244AB65F000B6D896054B2B52F19F708
CB80929D9F98AEDC99365FABB6FC42D9337653ED45D2A2B802017BDFB8D28F62
745B5D74F4411CFDA724189030854D6D578DCADFB37B73AE15E80EE20EFBBFD7
959AEA06EE4A93DCE0D30B894D811EA3033FE26358EDEB614DA60CA8F9DE9855
F26F1B7FE1EC8DF0E6983ADDE63E3DC55C1088EA3091C21FBEA4C39E59BBF3C2
7C4EE5AE85C89FAECDBE6BED7B789D390EF78674F41A8104BC970E81FA9CCB45
DF6B8C2C2DBE4DACD0FD66877529BADA909675A761460C3F6B6F122ABF3C4F3C
C2B74804989359C5C127B69CE1D89AF4A74BE3B8499014942319D03AA740596D
863F0ECEFB11825FACEACB3E6971762E5BD8CB9D0055C620F4E276C3339B31C1
C321D785E1FD9D7AE53725AAEF68C258D2AB7F8DA4F9B95DD5CE20C35F3E9908
964C6CEC56D0AB5B34FE2AFE412455C971881B144FD7D979BB6C8B721A6499EE
D39109FDC63E5DDE7CAF6559CEDD080A1624690BB6565FB0828D5025D153145A
E8885E5D37301BC1ECF95161DD88ED99FCD11B77BBAD6BF1E1D1BB265817AD2F
40B223CD712D48CFD86428661D191D0DE40CEE65272A90AE80C134307D575808
57CCE5A72EE709196847F25EC20775359490CD96F818E135A4770A5D477FACE1
18C3E44F1C1F60D1B6BA8B206F107DF7FB7167870392CCB34357F9E4499A4164
0FD3EE38365F9F16642FA5D4BBCCD53E9680174838110C2F341E8856923D67FB
17F77E3C9EEA8B51509ADDFD595784714495BB36BF6331697025D64718C37131
782349E44FFFF0CC73A9A01D0F41D89A433D01D82267B25B15774CD010594C91
A5FE2AB68455420213D78D44D0D29DCBB7C27381182947FBA133FA137B8B7A78
9A1514A411497C4EAE49ABF00971280276284E642036ACE628F142181CAEC3E2
2FA3B8B74109C3317B8A0DCF444A2D7CD40B56A6A0FB571F29020C10467F8E5D
56DFF57F4B067C7115CE624EC693759F6C93F10C4BF79C1083D72390CF06110B
6A909581DCF8D72361238801670A67DBF1A2C831DBED6740191FB43F325AEEA2
7CBFF48305A64AD9FF4EAE3A6F71596DB0E5A1F5B6BA2B6869F4F65156E823C6
4FA7BEA68663C5A539F7609EFFB902DA29DB1AEC8D477051840A9AA16FC5389A
121D76409D28E23E7908DBBD8FF823B62036C9526C3B10375A9385A4AF991B59
88BF2D51C62FABFF359AAF056DB79D13260016F6217B32DFED2938DF6A313D9A
F4852580D0C5357C413D5E06C883D19CC2E6968A5902DC3E4CA25FF06C6F76A6
9E15D2395CAE81EA10644263244B15EAA5A40C6E3D66C0B6AC3AF60FE4C1F473
6D4C2A110EDC509210E58B4A5E5B8408170535D1321825986A1B998D105991AF
CBD6A46610E58EB90C9ECDF50BC0D26C7A681F6670ECCBE1B091808E4016D871
E3E4123FB6B1927307950B814B19D665E8CE2D5E5A77BF59108B2D9E183A1BEF
7D229985E5D326571C07E94A68EC0C495E8DA0DF16C11F6DA761BDF810195971
3EA07F0BAD9E1118239673FAFECDB14C685427B9FBF3D309C726D9AF11FBE3F8
9BBA94E8331845E2CD62549F90EDA5482053354CFFED5185ECBEB1305057F699
3FF0F6B568B180A1690C5734054B8903D637F31F3255526DCB44C8549B7E7AE8
65EDDA8AC5A34FF63EC3DEE34A9EA6F7FEF817CEFA9D7B22B603ABCEC4A45A17
4A5FE48105B99857693DF7C56F148FD13F085EB821CBD3F3DDB49138B1875A98
6D6E48B2C2C124EC0BC9164989AAB1F5AE8C0F21E63193C70038DE654D67F565
431FC9CE4B58D283A2DAA40287616409DBB7F7E94DCCACDF68CD8ECB19B98BA7
BD00C1499731B7959DF35899DEF7F684CAA993990B6239B66BB2220919C36185
A3BB431DCD9197A67852D137C00BF45AF3698C115A41CEBA5D3F1E2FF32717A1
69307623AEAF8287EFB7A7019B181C30F2CF4584351E8176E17A42BB48C5F521
B4538474B2724B5DB5CEA51E783E870AA97FC47401CA0FC0DFC4998613F2946B
B827C2F7E874267DD7BE63ECC00AB0E2448E7951EEC5DB4095F9915085A97AB3
812A376AC0101429983921C76C8E686A52A669E8BABBE21354C4A74A6EBD99E9
E2DCCE027FF45D75DFA6547FA60F2A63243D5A3AE3A808C75A99F3D42839A080
557C7DE6628F353F57B704B809F249DF208245612B47221653F42ADF0AA26CF8
57000DD580F6BEFC12E654AB4C4317490832055B92EE69CC2CF85A0232986CC3
819877F3DBAE3AACB1F431C216077B528B1D863CCD0BC6860C97009B90F33779
4DD77D702A114565F58A1DF4B7FDDCA0157CB0A7E74A116033212D83C1C2699D
65BBB42025622243B1A25E399014D0C0582DC50561373C8631D79148CAC3DB86
DAA8CF5E39387115637865FCC04676592C3365F2130852EDA3FD572A353F4B02
497576CE8B5E7BC90A46E02E20536AD5DC1F3EA2B832253D1D1A819B0BDAFE91
893067A21AABFF14BF0485EFF09F6256A58772FF91877896F54582EA274F32DD
CB96295DBA8BA6FAD260A71766FBAA4865CACCB938D96A7F35884B2F80DE838A
532F64A69274B1E648E6B18333465A3B89E8EC4ECED5855F6188825DC2D232AA
88283656765F0F957E152D46620E0001C4B0713F7D9AC4E887B649593353DFEE
334A3C8A3DF606AD48E286A7962ED8F7B0F382373CF35DBAFBAAD8B1B4B564FB
D421EC6183B7051E3F3022E09818EA7DA564EE44E054C995F112E33DF2A7C38E
B5BB24A172F51B5FEA5D11A81957A075AF1CC2D7C9041F85E46709ABE201426C
244C07EEA7550E78D3866493E451937C404152E4B9E081F52653EF379AFC7F85
D00FDB5360563EABFF210F4D46574091A6FBADE205D15BC7A0EAC7C25BCF58CE
479497AFAD121023BF24D9737C42F4566B3CE3E0DDE592E02A4088354A4D5799
02EB0EBA57C13A27BBA913EB949A144FC4F913E3A06FDF1C7C88AB50BD994F8E
08A5837496483EE06EDABEF4381339B1007CDB8D888A2770536EB20DFFC71327
B768DE076F35D951034F4E09E18359837D2D5B80339885FC6FB6E6CE88BC0C7F
465D36783E58902AF41670D0E01656E2983B45459BA7D7822DCA1D505E36F554
4625A1684579A20F7B9491B949E2FE69F32A016E62A979EB9C4A05944001CC9F
CAC4B8E45CF45726B6BF10811DB74CCABA5EA5E5F2AAAD3D24B2CBCA416F2BF5
C86B6495C5C820757C4743F1464B300F47EC054EA29215AD2F2F17F55AB92016
9919577ADF4BACE5695986055FC4730E531FE82E9D926B1B03A8C204F6FB4A39
1C94C310E6D5F2F53D41BBDF76848CC247C89D4CCE56EE40FADFF0FBB48804C0
1823A8A70992C265A469576F47CA341810FFC1B8B58ABE8EB762567DA328B25B
A9D4F3472428AE0FC180543D29B8E4376D7EC48D25A411991924FFC2DF520BF6
90A7B08513D2A6B42F2AA51B0E3E5F2F6FD57E63BD1736482F303A13D6E0EAED
1761211598B1F2AB26DDD5D45ED477172287BDA7062E8AF61D232473EC060F68
31A225E0AF2E6A5BE2D8604384359C53F880B0A503B5DF5C98D2D657D1466390
6736B42A24D1DBE55ACAEF4C5058DE5ACCE069D39746488D6AA244BEFE1F32D1
BF65D0EC3FADF515EE45E672AAC72040A1E1065DB5A52FC889E1650487BC4C79
77D55ACD9D726C74B6249277B0DF721ADB3293098639658F6796F7A012416C14
7C694BA55C734A527ABA0C9E6363C2C00633058B69261961658CDC29A477784C
90517818017B6BF89580BC66BF15757490F131D9470A323287091DF45DF490B1
9328CCAE434A9637E0E7D3A63A418989384C98463294D25CB07883B8637AC816
57A0AB17C4BB9891599D2B8398DC08A13B73A2DCBB9A79218C161AEF14D238A0
8D00C90ABDCC18B11AF05A54621B19294D09A4B533A7F1D4F0BF2E637BF5E723
53AAC5785828293988797F37B8F14C7CD165E8587E48A876C96D701F46438349
0DDF52FB12DE623F786F13D9BCF2D5BFBBB9D5A16E3FBBB5E6A9C34494FA3F6D
B81C12FF86521554113D1AED9A894E5BE1E7225A9B98D4980AE902A8DB3DF1AB
5D48B334C4476EE4FAE42C2CFFFD1BCFD99D82AB3992D3CE1F8642FCF7BBEE3D
5840F516EE8F6E87B5294DC8BF2DF4A0B7A380CF7A2BECF45CE0B0F8A996A463
E6193879C8E25724BF182AEF116B7FFE8BF1A1C7FB6FEDCA86965D325538AE1F
2863A49700469ECD3BEC3D75AC255984373E4A5A621AFE445A10B8D97EF1BCBB
61263A4A2009650770801C386AC6F95F02870DEC62FD6C556A084FD4C165AB0C
A52DF2633B01DCAC757F614FFBE09CE217092414A7C0FDC43FB02DD311A70063
2E594A67C9F8D8CD037020C074BFE24168E810C8804EB53F16CB67ABD8C9F99F
80D65C981C4221E857378C4EA79E5CF88CD53B841C2CEB7C58581AD1C3EE79FF
6B07BD35895A8843393EA65FD48BD248DE0E7799845B1B568189EE76445A58E1
42ADE3CC51747B8B97E031CD51E90C75880B6EB5D7729BC29EC0AFA8690955C4
AA5E809DE62E0AC18C5F1A6FE5E5F767B70C8DC44C965E7E2E8077938B4EA3CE
F119F7F824DAB88946A3BD00FEE7D8CF68B5A35614F864473C24A95F13C7BDC2
00F018B5BD313629E0BF5A5E35D0A34000BA338653FEB7040C3D5A43DEFC7FB2
5999A596BB7A701E8E03E8D3D35FDE11BC8421E8283EBC327F7C9F6D457E573D
073755A97EC24BCC4C33D93D72F62790E732CE02320F8D7B385DFE2230418B1E
70AFA7DF7D83D7E04A2F657CA6C2410A63F9B45C562B7736A272349BBB18E462
A02BCF7CBCD049B2FA692445C13C4B28C1762DD4A632CD41A8196DBB26075B7E
9708EA316266289D910151A6F7FD5F4755E7A41DCC3AADEFEFA2F28D241DC4D7
0AD828E18F7541FAD3C51FF4938FFD048E1EFFA5A6E443049FCA2472FD9CD0D3
00A0AB032E36C43ACE958C75B2772BEEE4327A53F279FA49DF38E5A3BEC64EBF
7677CCD8EC1B972B65FC2643DC5064EB8A66A777124B70F2DC6FE62030EA59CF
9E328396317798C1074AF49EE9698EC5B3A0DF1112669CB2EB0E2B6948DE7DB4
B136C23C5D0B2DEB49808EDCD5A3B68E161ACCDFA41C8FEDDA50942F8D2E75EC
EC36EB127AA8656B0EFCDEE65748D32220E16F296B8D06AEF513E272CAE380EC
17A1A2B0F235FC70D479A606B33AFF70D324C6FF178A38DBFF6F2BA86115FC2B
7237BCD1325690F655B912C30BC069B20095279D01D4AFDADEA0E9FBFAC0B22E
60E377515AF3012FD9069DE25DC4FA527AB6B2EA9CA5420243D815C95E0F4D51
FD84FDC5341F20BA6BF1520C684788BA2801A7CF3B95932EDB3D8693ECE35D70
3666A19F6348D59155A89FF25E119B37D5AF6635843E4FDCBBC413F4A6031F4C
615AA55A257FDF806FD0CC1A65FC78F1427DEDFBC1FC71408978F46E3F32E8C9
96FFE6AB284538B37213D6B88AEA47E99DD73D9AD4369B428EC913CBB75FF2BE
D9D9C51701D2D0559632530D6231586A667F3A530FF2F6227EA4CDC10BAB9FE0
E313D378C933138BEFE6D0639DE34F45A5CE2049F5DB6E28A70246877C55DDF2
079FB885DDA5C02313345CE0D2373638BA9990A6911978264D314CF74DF63517
57EE8699DEECC391365AFED7C1329813024B3ADC3565E28D754217B5B1EE6BF7
AF11791FC1BEB8E6835BE35B05CCF2992ED7EB12909C9D10E89DDF362036ECA9
FFDA4DCA0A6B1485F4C4B8A9BA588C708DEE0286A83FBBC77B9E9B8DEA69E54C
D7DA907064DFD9C45D3CEA56AE7503493D5F4BE359D3F1669F0B4722B2171811
C8C58B922FB5A692314BBE92730DD235964A7CE0DA5F79507D659EF04BAAA9ED
372D08CA888C6640CDDF10C3811BF9679C6340418C89C8A56E50467C11FD1BF7
D7A58A97F117F511B5BDA0F10AA18F32C4A6A2B7AD54974DA8E693381243AC52
1BF222A8CF93A087FCA2CBF3C036E803B2A5FE026072BDEF9A6AB04B50A9AF0B
C78CB24EAD3C4C6C1043F6701FBEDC2B16C73B0220B1226E8CF1C4AE76A77D50
A4F2FB0D95866FC447A648A6E95481134C882B3CFC3CD9CD8BE6B0D25A1CEAC0
E1CA4591E98EACE52EE14B5FE74A4A729CD3E5580A9B0D0473AA2ECE3C05B9D3
F253C0B613BA7CE0AC4D16FD02C19C536AAC90E5511DFABD5837A3B800C49239
871F61F40EBB75EE3024F37818ECDA106D09D2647CCC4E6AC34F49B8FFF4238E
DC8441F3D1D158E08E5D5645D6DABA6040C3DE2D19848AD86353FB4ED92FB37E
6979DE858914A958A6EAB798B58C9B6A36CC35641076D287E9A1273FDDB7138B
0C161175466943D60004550372BD065D6A5DCA17FADA86B5363F5C99E3C7C042
27494A0BA0C76B84A181985655506D3B58AF915AB4CE8F2CFC14ADEBFA0E3E8A
91C76313DE74FA53A60D6498774A0460A83EC3B6F14E377444A986FB5EF9C194
2C4D9AC5BEA84759A6B692319A3E75DDFD033C5B8B66C688E628C38E3F1BE22E
479148B45C92BF0AD9D02CF63A19D1EFA05BE28CC923C9A8C2F8F3A22ECA7F20
FD6BA7DB9C94DF3B3505F6646484721229D542B5641EB9C66CAF82E8860CEFF3
50C7D2A3108D8678E9BF9423F9943B97550C53E41832129661520ECD9C6A0C9D
C0E6330504E45F46344C43F5B4253CD35658EAC35AF3C588FDD2E543F068AE1F
55B004D1F17DC1BBE78D0EF8AB631D982DFDE423EDF366578A96A7971D5E5BB4
5FDE281680534FBCEB70779AB1E0C8940390B245C74BF93BE4111C73107028F5
0D544D270267846DB17712DA1C4FD37ECF768076EF9B79A70BBCAF81C0BAFB3E
BEA833C1C81BF21A50AEC4C40A8C2F3EA7759EFE04F474B89BC0FE50877E1359
E38B889219EED42A969AC5CDF218EAB6305899356CC64419AAAA059F35A02F38
C26F49D424D8464F2B20BF904CD66D0B061BFE167B181231608D05756C37E391
6BBA76FA41F7190C62C18F825704EB36B41F795F2295F5094FE3182E7BAF7A1A
625D5C16B825B8DA775CC796C1579C181487ACF350217F54A8AE5D69175A8FF8
DF6AC12E7E43E21835F5091D1631622EA88E6A9BBAD67E023394E66CB2980EB9
512D4A24DAAA10AA02B9A6E64E53AA37CA55A5F6A7DAEE28094B3EF59FE89D8F
58299C742AC4E7E1A076545649EFDEF9511E3B386155B07FE28B8CDF22563A2C
7D676B57B74B4CF1DD4CD93E68265F8118D2020B64FB3B8C4AA1D29801AD6A16
3AD177DFFEC42ECFB3C395A7B333195459F8010E3219675EE3AC4F4A3B80EE6B
2D9B57BA286C41D7A09D76F441B3085813F0EFD361C4630635B1E0C477144227
9AFF2ECB53C3E648B3C111D73419FC168085980106CB0FAA7EE8E0E1E6DD0342
9485B07F3C5323DFD8F555BF5C59DA947501E9E553022FC82551D951FD191D33
5040F28AA8C57130EA9DC40FC2083DDE77CC6F66F7D97323E47E076BD945C02B
43A3127947C49168E23A66479C302EF8752038806D700CB0380A7A68A4E779FB
5DF78DA01B4477D53B27F7E76324C08804EDF31220CA606E6F1C2C10910665F6
1B16E9C000F68AEACF707600738EEE3BDE2B670CC96110AECAA02073F18B99E6
C63FE5304567E43DD2A41A873B1A721C6C1CE5614C35D08D76A6351A3CA7EF92
80C4A83468815C5F42C3B156810D410049EEB1D993404B5B20DDBB8DFCC1B923
E60F121FDAD74806743FE475F8EEF2FEA7862FDFDE13EE8BE3E6BF3CC2781E83
F402F2B416C56AB241B29A47EC46528CF27EF8657B4A32BB616FE5D875113C33
AADD695DF7DD7018F8F58BB0702B8643F60A510653706164D6047EEABDBB07BF
2F19BDBC55F1FBD0C5B86831C43D64686DB696974619851F1827FAB7A353F8CC
DE2DBE0C9F9656E38A8D18A020489B40D99197B870990C3D0E6953EFC32229B6
6FE2FEF6B5CF42B3A212BC6630FE7533956A179AAAE6E52237C3C563A84B2481
18BF1E8DC1CAA2F652CA2A290E843D1E3A71E5B8AB64F41B1EDC81FA09C4F273
B6E2B9FC71FEFC376AFA7D3418530C38BA6A9C2140F1B6F31431AB9926C48ECE
F7AFD3899A53E95795514801B3BD5FC02E59BE273E2A3B5148366F34D72A7F29
C084826BA8BA98DEC5A3196E9B6C6F1A77254BC097120DD4B9B74E0717E58DCF
D60F2A568F0C14C46E8020EDF0CB17D03BA790CB02824D726A8785B0B704A387
E70A8F8989AD26E9E2FB704D19339EDB8C22F021B3428021428DAF4280ACB0A1
02287FC3F33F517969973C8C17498013FD2C319333A5D0993A165E9A6C65C4FA
691E17C62AE78555301276AABAE4D63EC5BB5B1218CC8BF0EC417B17509D988A
0F1A9C4B1CFBD510AA4482B0AEA451746C95D9010E7E9CFEB36CB73270219651
5B32D51A5DC8974B1B2E3CBB4C13868D2DF5E0BB4B109D411FA71F27F99F803D
001EAA03F4E3E0378C61BAA394D27FFB4563DD5E3042093EF26D31E6D28E25F5
4BB421691549753F8450C927522E3F8BD95297FEAB2ADCC3537F652C63FA2240
E990EAC10652561648
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 15 /bullet put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 22 /precedesequal put
dup 23 /followsequal put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 75 /K put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B173D
04EB366360BE407C85D3D5438FC30734039BA64C612CE4B55B31D7CF38FDA828
F09E354CFE201E2EF622184F4F77D062F6AAE96801D1AB07FAD7681FECCBB4BA
BA1CB90A126BF167630971BC818F83B1FA1212B92B903556C5BF3C524664AE0A
B89DF0865E14A2374BC9C5097DADB8D380DEF7DC1DC78624C748192FA321C96B
32DB626F7A1363DB3004BFD229E6A1E22554AF326DDC6C3E637CC8580098961C
D6EFEBC99973D55751D6F766B2D8A1776493BF6F949889654AE58EBA7754AFC7
ECC4FF008A8123FAD0B30DFAF717211AC59032437828F717EE2E59FD9EAD3E51
2FE7720E02C6DD2339840E03060107A73A17E2F98E620C2A709C44F011D6B887
45134E6D6FFE6BE239107011DD22C44B61723CBD13DFCF7993EB062A4593AE9D
824F45668B3D174C7CD69630188E9DA4BFA0F031A3DBE8DC6C320970E58F4DD9
F1AFF95B20C553031FDEB6F58AB8329AAB27D8C9E0D3061C57F7432BC153DAEE
2A9E08280FCB463523683551953EA173C7A620CC73336B57B9E7EAEAF69E3A07
914DF94FBF474D9CF2327440561593F32AA46515D55C5DE1EB8B1AC669B49910
BA691B2FFA1055A1BF1F5315534B46FCB42EF2FF6FFD6AEC86D08AB7F3652BDB
F29B1CB391F49A6946E76C2106BDFE10DCE5D33594B7713EE0B62E8D2AC11884
78910E02D9619B050EA53EC128FE6CE93C051EF9621DC92A2A8F4A8B037E75E1
A55E9B81B9AD97400D262FADD477427333DCFE3638BE87BAF8289494272A23E0
5A5AB89F752B699B9028C7BBED098ED433BB8863993FD6690E300C7198787ABE
284B137C848DA40398C631794B300AB1D35076F2DC67D955C0CEA79080BB0034
8D15690BAEE45C161B66DED6B1797BBF21EE2F41CB500B4C4FA0B2C418175FEB
94A41A1E14F2C9B351704E42E9C7D1E3C91D7FBEA1280C981C003FCB638D6D67
A851DACFA03C606560F2C51D1F5EA225C793CE0BCEAC3F3C5732A914FF684958
892DE7757C5F98FBE8747E1C74C3C550874A18C71894A0D1291F03932E92CE53
F55D89FF839C0E53FB26879DBE357C499115A35652536C52DF97D90180658269
87F639B21FC62DA0CE728C68B597903C84A4711417857E3308A5D0BD48F0CC8D
2DAB15C8E427232F26C64E63D8F2BEA052B781823137077CF69867D4241DF0CD
4557E7BF54FCEB8AE3A8E7603E359A2B91A8C28C37FA394234256F5C1DFFE78F
9FB462D083BB63695559C45A4A3B011C53DE19BF6E57D1BC503154160308495F
DB329A78DAFA9FAD5FAA4FAEE50C60CA6A97805600FA7F1F9C7FC588ADFBDD36
2A06ABF053678D9D669687DE98E06B35D9308CC1D94A72EFB66285F375F23FD9
74C843A421D8B8C9DF19F152FFB4B04D0DBEF3FD6467EAC45E54ACAB079BCA12
43115776652B30646787196BA2F0DAD877E1D3B281D938AB70D416CD393D73AD
DAC0549F77F1BB8A1F2306B16C05547BB860C61EA694CC9F51FEE1D0E9203EAA
2E2049CF447445F8D561C9BC490991C6356BE1AFF415E907BD22C8FEC23396DC
74E1ED7B7D3564A367362336596470B00EF514FCC94F7FBF43035334A8A2ED8D
DADECA8FE918E5F0B274CD73C797F5432180147772D812649023CB023C07C769
BF7EF7172D5288269EF95975D21CDE56A1933A0E3FCE02D064A6431BACAD4DD6
119FCE89F2468529759D4FF1CA31390AAB1D03A77082754FAD7C942D91642044
236D8CA0B37921CBE77CDEFBBBAFAEA4B1BB721D368B293FF50B15CC49B355AE
23F900237677BCCC00F95C17A5BD6E0E42D1F7895A90FD822EB26B2524F657CD
A986CBDBB245A7C4D65F57BF21BCC662A65E8449BF6E460FE6C07359821AF362
729BC52112E16D2D6EBD8AB99F8D772C7734D0AABE28118965C325379AFA2D68
574A26E6A581A765FEDFD7FBBDFAACA8A09F9F9110704255CC98025A55A0477E
EB06CC15AEAD6AE7CF3D291A6A86B62C2D4DD6F330F03A12CFFA0CA9EF04A8AC
B78CFEDC66286DF753D7D703EA24C8F14620576D6C329C9256FBA0213A9C78F6
36B11E2AE3B278A9BE212B8281B538DCAAE19E8A53AD061218F1F4B4C571ABE7
883B115C9AF7F9327EC6A30B99370F5B006EAD1041FB17BC48FFC56B584B1D38
BE7EE3CFFD82A2B4049CF9E0B420EE2CDE186FD7F702AE284CD39B90D54FC535
AC3BDB9C4CFABFFFAEA94EC036DBC88380D544883C5AC857F2A4EAA0AA79A68C
85344F970AC0046ADCF013E6AFC236C78BD3210C162C5395B416A6D4EA44C0B0
C530FEDFCEF4DF26DD0D3D1AC00F20A8330FA716173C0F45188C76BD27A5648D
67BB0D3DCEF149DC4593B84A76C026B68C3489D3DBC11CC40A1F52C3CACEC10A
70B8E09AA523AD1B9234B9C902B6E7313B5274F487A92E4EB78503FA83E6896B
8476DA0E158C0B0E939900133F8ED3090A38936A8C2B4E580A83556821501F5D
FB9BFEF00F25AC3F866CA0ADEBBB36B3E88C1A722759744BEB16DA05509E6F02
24FB646BAB1698E542113AF372D15F7662E33C9EB6A54042D38FFBA22F3BCDA6
DFB906B13937477858BCFE9092851A0A7FAB1BB928C0D3E406C62AFB3E3560E2
F950E3AD40B81FE333668FB2FA3347BBAE1575148A0EE5D31BCD316174177C89
3FB6354042B23663BA52610A29C945997A592707C4A231A4B0EDA9B2971F805C
ECCF6088297244721BB70F7E7D3C8ED07DF055DA6741DB098209F8034CBDF6D1
69213C118AD68F0AE7C3D022B66F61E4487AF6A7CED6B4AA80E9A64D7E0D5A1E
B8DE78FAE95408E2E8242C71689D0A03734F51D0431CA072DF9AB37824A55882
45468170110005EA0802C6213161166C073E2982688E6A052710C1BC6B71A36B
DCE0F69DA39AD3F084C801F9CC47F92DAAD842B09C8CCD431846ED8821530AA6
A22A9F411BBB4D7213FED3D88D224730A6AE3169E885CE778F56D20688176DFF
344C9F7873C9EDDECC18E863AFAD17E7C3DCB1880C41435C432A23072B0C501B
A0A3BC8E36B7EC1BAD069C02928359D33A3DCC5FA647A32855AD2E12690A3FB5
05E4FE595E459A27C0C4D0406FB420F6E7A566A9BEEB5C540413EA6F39BA89A4
36756273C11007F21F410BCA1D677AA44D08A6EF4DFC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3CB6A4DCBBA655E3D6E27F87E6D8BE12A15D35E1E75
D36532B9C5000C06A58822444593A1038EEB23C7AFC9EEE3907DF8232322B09B
230015E014F1B4CEB866234266440AD3686E30ABD086CF9C0926E711F0757925
5DEB3D39C8E6D6F0C05A364A0DBF90F6E32CD28887F7E237E04093E07A94C973
462254BC1B1586AAC29FC7F15A80FB5993ED22E79A0FB5BF0F7362CFA24BB2F3
D4EF7D39E1902C53053C27E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE259A
BEBFCA5C7E828BE667E9C72222B84C4C79C2DEB885A69861DDB635B02814BAAD
9672A14E50D6A2A236AB35C6DCBFA1165F47F8F52B0787EB4B70BFE3CAA8B511
A630E8148A51C1394C7C321156CF52EE7BFE07B6C354CB65782464D2BE42C0D8
14EAFBE88DA3D5C90614F22E02626ABD343F3AC0A9698AE84CB97F1CC421D34F
98B69FF4C335B95F4222A8BAB77662B4A57A4B574265A679334D5EBCB073FF69
66BD9322B1C2253AE85AB38889B26761BA509C7F638C6CBC4BBCDBBBF4BFE1AE
855973129978F707C87462B67509FE6EEFB5E0949674C34768F001827F12F1BA
77AE866711077C30DC0E40C2D8A6EF4D85355E596E26B675E8D223D4E55C3580
5B79260E90985DA5E5B2F43DE7713D5E67080D2843D44A3585E078615BEA476C
88233D241D3A427F9B1AD26ECD535E46C137084A835CD816CCA936D0011C53E7
B33D5B50ED7BF3F41289F48E394BDC963EB1AFD6F14F0C146E0F13B03E76B389
8AD8E81E41F14D1682A113D8BA1482D9DDFDE71208AFC351B62E028C3D50BE01
FC9CD5D5F36E28DADB469201F41E9F39098B65E43FD1227A26F6FF812CE452F8
B5476C28FC1B1B3E5FEF3A3B94CD552E29288AB0A3ABCEAAEACBD2D5E9001579
738029B0E7F635C6C4962340187558084D9CD408EF7FDCE23F465AFCAA8EAAC4
8855BF64EC9BC75371A98095CB51BE7FF107E4C6C21079571957B2AC35ABF77E
9DCBD599C549D3B40A36AB846859C7BD9F87A2FBC724621FC7B305F02742A66E
F2BBB6B21671FF62D682982C4E8F6645EA4A7D875E03774474BD86F76AFD4053
61E9AF3C9B374D730501BE61106AFFF8A463406722AD2C14D1A81C08C2A31E60
42DBCDBFFE4056E6AEF59CA261835523196A8921D1BE0013F8B3D6F05793FD18
3E767E98289DA6CA9DC9E2EF9E697998D2367E45AA87B3E75A57F64021FAB21A
A480FE7095000C29AB92E6D299B2E5EA7AE1997A6B23E1F90549334F62417196
89BF7E9F62484C2816CF5FC2ECB7DEFBB11E63D70CA13D96BF3DB3B95F39A41D
2E0C84ABD2FFD86525323ACE4A85A8944601CEE9D157445312EE9EB81873DD63
A1BF3256BD6E6C845E2379D4B42D8D19FA6D540368BA9F7C6B494CDB6694AEE7
D63B32A6A32C93477AE6756D1A028371D5B7758A43F98F4DC4792308CDFE2779
CA6A23D48FD50D1EE2A9FEF854CD6238126A0B323E6E84DF5275BCB2DC287840
236DF4AC604119029F54CA51AB33D12058FA9CE1F786D72DEB7534C9063F07A1
4FAB0CAD8DBED65FF87CF437B70542DF812FC1D641A3C73957D7CDB787E55326
BCE15E20005A033280C8C31AF064AE061942560C3988292E5524143950C35BD5
524BB96AF14BE60E8F9956FBA2929F3CE474EAF81A69B81F4FB50CD8ADFFD051
8E96AC46DC33DF4EC6DC248A7B15991D0FD4935D5695D326FED1CDFFED7BEC44
6C6DCD8DC31704D15EF8912BCC761A37BB6E9E90E14A3086BD02230FF586A578
43B2128664125C1BA4E06C41FB38ECA5A832B48D75FB3A0EFC727B03BFCFC98D
C52748CB3CA756E7F868364D4C3142658BD1A8882A485C7A7A50590D8855B53A
DF7B96DBADF256D5B4D8C5C6F4AD4DCA9C7B37FAC60C8AC53BBF7BE94CA66A79
DBD1DBC6AD38C184C680E51CA146C91F412BB4E0F28333F1BEB52EF4EA1CA207
D8D27BAE1FBBB21572D5EFD866FB8EF0BE3F55F7204ADB9BFEC7A4C2821FE1D0
A84D7FC75193ADEE29B25AAFE4A7BDAFA75DCE3BAE722C53823DCD6B271874DE
CC0D2B6F57CB79977E524F8701A7F7F2835B981123D2D12174ED5C933E8C85D9
58C2EE0B637B171ED1DDD8AE0B72F1822FD98BE06FD9BF5A825364886E2011B8
C111333B33652D9A769642D75AA672F80649AC5F612F9DB8FB17D47CADED3619
2293A35C02F1722F04F667C8FE51EF584AF1265E300E5887AA046524541ED058
36F844FABB0EADD6F9AE26685D7C6B8169F0D385208675F8F2A7DC5812626278
95DEECB32E5B51A24BA518655549854FF26AD442205922FBCBFC7A56E61352F4
2FE5AB89082AD0D0B504541A937F593CEB49FB1CFF5F00FCEF5FF429C4B77899
13C3C75D1FF98DCF5C633035F319EFDBBCACB988E467BE62E78F8B1A95C1CB20
D4AB644D535E9C267B30A97879A526061E6477D5AD75A5D06765E3DA71C7BC0E
C14CC8D54CCEE1045D378BA14DAA5A47452C3DE12595FC72D897B05FED459C19
8D43CFA9D144CCA85CF10A0439704A8A4952AE2DB49E38A7175D6CE846002531
399BCB8EAD5F91477D613E5BB764299460384F1A715859E3A5A7305EC51100AD
406684C1ED67A40D440C8EF74A292955AC6F95BE8401241D7BBDAC7D99C4CF14
0E34C290818F1180779ED64967E949E2424789A6F8CE7094BE31C88806CE4E41
E5807C6B91B60612CADB7A409E8FDB4E64365636A576733EF4BDFE605097FA45
8A3F68F0D96F80AB519B76C21D9B88457317EDC437443B3BC07523B8EFA5A151
6C98A7AA6809F2D7216F7E8E2E4EC935BB6524949B683DDF1E1FC3B0F724E579
2DE1BF39CD7A128412A1202378A54B2C0AB34EDF62C37A67763FC561C90BD0DA
D992D46DEAB512DC8BF9E64F30925B14BCE5BD469B1B93B49495942814EABED7
73C68EAA4B22D93915553EC8B9B966122E6595C02EA01B25F3E68CEABEA0214C
E42D58FC7CA9B8C009DC3F2A2C80FF07AFDBDAA4266EAD90ADB3DC045288705C
B2E2487E6B15752536EB505558A510C75CD21E3B4C0C7BA0A0C509A4E610C61B
310FE3E1DF700EA8CF75CCC432E03DF9313C0A00D8319101B67FE746F24EF552
B9187C731E915FF0F2524DD4A5805484B28F761684A038EE7C693745779B3E7B
42A46B923294B33A4AAEBE9D7EEF3ECB45DD2A26921485A078FBA2D5F7A8AA50
F3DA4B34839582C03FC1F31A8D35C34B829A458352D430DCAA7692A7F0068852
8CBF1684F7B1AAAF4694CFA8B3973EA563B15D6DF517E68956A513EBB5A274B0
4D158E714439301E3DC2959E097CCC1BF76BB470019EB9B86E9DB68C5807C2B6
A11B859A1311E0D751D0E895FE0395229E09D2B1B7EED4D6D6073035B7CC1411
B21FC61D3593A7D55599000ED2FFA9134DFA773C1FAC5208F3C5D72ADBB041B4
11C510296D874A314090A5D3976D472076BF3F1DF1685FF94E1907B2747BEB05
FD994D13A8327A6260D7E46E00217FFC6637647F6068B86A3A72AEEF11FE1872
6BD0EF3150B0A50B3C2B97AE2A762091E82C56AFC72E5CD2536D3FF3BA3D76F4
135730BDDE2151D45720644647DB62B11664490E5069C99D4EFE2CA4A2C6FF88
37781EEF2FAC7D12843BDFE540ED1C2B7D01B9B8619BCD169B5B7F292634789B
D1A61203A53BE7317F08351EF7FEF7AB50FC46A67DE93BC3CFCAA2BE022FFA2C
5A1DC706B6C07BFB23791A5902C595136EE4EDB808A376C7F6AD492AC74F5A31
7F20752EA3D582D65CE2766759EF54B10BFB66B9B45317CB1C608C28373EA0F8
64B67444CDEDBED35C909F9ACD0D8E1DF13AB43839A6076574348DEE7024D746
F31059F051D0248F57A7AAEF89B9D5F34FF355905304B587D362572442F7D9C7
800A230E3A80973C6A30B8D4C09BB62120D6AB9CE271C1354DD04E234D6DB2B9
60B06D616D4FC4603AF6A9FE9285E521E775AAD55145E7CDE8AF63300B6B1236
E42D671AFD6F1C8E978FEC73F8C183F7C5EDF9174516D5C84BD7CACF2AB5A9B5
646CE54176B3B9DDD340FE0ACDD6C1D84AC8A693ED6DD2F9653AE8254047F81F
A5E98CA68BFBC699DC378D6BE0F07ED89140AD7F820BF27468239ECE5B998493
F352391FD948036324F8DF0E58CE36D2019A4CA177E483650ADAEB84FB2F57D3
43A7B39BD78C467875582500763B714F2523B0C18AC5F94D21DCBD89AA683622
23C73ADDE51B3037134EB11CF03EFD85F3F989A5D059ED1D931E78E29DE1AD74
33C63297A57E7724DC41FDB1A4EB5EF3EB9B57565B074F8E5335A9CC4A64F222
96DBC5BB24AC5074329F8F5DD29F3A4C724D35A49FDACC3501C05C2B4689E273
B4BA184288164429A52AB0DA407E0CF4F821C170C996C55C5D4BB91B901098D8
E69ED5CD695255052D39B049EC4BD70E170CD5405AF26AD08AEDB65FE62B9AC2
E5BD3664AE63A5E1FC57F69F60420CE6FB005A43A086E68A3DCA4E7BADB8C529
CD5D6C4D42AB5EFEAB8147AFD47ECC1F267DFD31BFC7A91C98188B2A17614D2A
3441F1575D49FCB8E4FF78AEB3E03E1FE10A04552D8610B33E17113AACD5A873
57323A71E4F028A1A27B948DC5B0EA4DFAC9197BA1193A17C467C0B1FDD79FAB
6D8A06C5152259D7DFADBB2E05DD3A2A3B478EC2DD73B6CCE4465219EDF420DD
FB0C7E5FD4388F8B833C35D51538DDB866A7A8E8726B669FE94B37CC0AD6F434
C4B2336D04405425746CAB13A3F6BA5396BA0063B18F13461316CC03ADEE9A5B
873063C9172C6FF2454BC809E53029023DDA07972236283FD3749D378CAE06A4
F5DE7891C692B0A51C36CBFEAC457400C5BA9339A5093BE10A8C3799B32F787D
FF34839117967260922F22D2F235F01D9FB1EF16D4EDBD31C8DAF75497B183BE
E4CDFCCD460FDFE763DF32D433AE0412CE1D9A263755593FB1DA1840387AB39C
BA95C885121838D547C43DDA0D691C9E0F9791E46C651605AA681B27E7466ADD
FF835CB5EEB6EF9DCE222E5A14FD1689C0A41DDE34BB6243C1CCA4C0B74D5575
AA579DF3955B22EA29D17FB3813F6D2F7628CC25A24CED9FE7997978064F34EA
6C8C692D18C23F49D031DBC2D6FEF1C774AAF5F4F0336A003A55AEEA4C76840D
A2911F3C6C983508E24008DEDCCE427B138A90DF79CAC887D4FD541C15938ACA
DBCE71510EBEB9B9D455D73A474010551A61FB78A65A46A9FB585632D7BFF2BE
F28AF31DDFE9CCD8393D0433010939BBC0A4C39914B26CCC76C0C132C8152C55
E618E81DCFE6DA6A5B49245F423291D6D583D55E518D54536C253780CE13F5A1
F89FB40198070EB889CF3201E5D96EEF9CA2C7B755AE8C29720B7F688A0FDB5C
838D90E073CF6AE30B42BB1D413037B49F38DE52A4CE1D118EB5CF2774D82EB5
4A9FB6B53C0EFB3A529A2EF489494A18048F52FF11F68F12DD142C300B68853F
56E4D0B75948258A3D9AF18FE41044D43C57A68D2F8E41041C68B00F19357F0D
2FF4E7A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364703A31FFB8A31AB6328AA3B891E
A9410A536479A9A0378B1CE62E0205B073A9C3F004DB440C37234EC8C030E18A
42C47DD0FA1EE3521C98714EC451AB5E544183431A9C5254CA9A7F73A55B8B5D
A98941739E254A5DD0C519CDB28B2F4B9E4850788B0B46E26020DA98EE4E7AA3
9B55089D13329ACB496C86999B89ACF2099533DE1756F0248149468CC0F2C45A
CA7E24A4C93B99FB57A66912299D28DC5EA30C0D4DB0F6CDF4F8F910454D37E2
35E519763C2B61D2B1E6C3DE314A739F6DDBB748D0C6443D23FDFB6D6B162BE3
95DFA7EADEF780AF4D3EACFF2C28AB8FD4530E353E5270D5FA6599BA4CEECD08
BED2831AD39F1E8794319569D09632A4CD65FE1A20DE8FB18109D0F8B7EAE4F5
4715EACD45673984D60AF1EE8E6C93C4F789008648C1F96FA1F8B338EE47E2A2
2305B46D033B7C7A3E634072E1CE2711938D605AAC075BB8E678C339F7B42198
3E61AE2035C3829B1CEC2E9FBCD62C20CB0AE0607EE97E5A017628A9A8A5208E
BECACFDB8813888A023B8731F38AC5186F78CE942D14E03FC5B06D07494973F5
249B89DF0C0C2A31A235CFC12C3E168EE1B0AEBB2ABAC2B90A514D97941B1255
3D8AE43A964D2311F07753D0CE4ED2AD6198A473F1FB4186349B1F747F1354E7
0E1ED37284DDD65E8228EF2322AB847F88919FCAF407C96C3AA0B2F20F09BD34
4F8BE97024C48C184E2BC435FD6DD4F4CD5AC15EB1D8221E77F487E056BB3613
2D39A44712CFDAB3A48D28BB363416C0958CB46FF3CF8129557405078D2E6F37
ACD579854CD11DE48DF9E249F0DFCD212314A379EBFF13321BA7E3A23C00271B
B84AC9AAC072FF6D5AFDC5A833E61CE4EDB9B83A04BA1F3E668B0082724961CD
D8AB05CEAD315137CFB57E844A7DC46DFC69EBFBBC9D1F581E8E0953BCE6699D
EEB2249049C45268DA2932E99569B5C42500696B7E925728C444291CB0373B54
B48A33CBDE1CEFEFC6D570F075A428500CBD737D2D008D71EA43C933F42B8DA3
FD2CB03DE9CF83231812DE926D5F5B853070BB58B87CD0844E56167F1E71AB4D
0073D71DC38239BC688D3F5F61CB43AE2CCAD730AC023E80872307E08BA0127D
4C788A9CB395607D5F1B3E2561C2AB81BF9C9617CE8B933DABEB58822AA2F2C5
2EDBC1D1EC3C0B3D42854C3A8DE3B7104BB0433209DE16CC3C39C5EB0DD6004E
AB05E713C3467BEC4C8FC6F7865A7412C597240481CED1F064CE7026803F091E
BCC2E8E9055D2304EC4F90837112247E577629A758A21B19232A7B8E3BE68DBA
E0257C0292C8A10A95D4EFBFF0679C37303CF8BA996FA8D48C88BBB1C3FC4765
5B40D8F0B8C94B29F70821F3792AF90320A248EA13F6D9746B6BCFE2EDBE84E7
49B477BE528C3667F09E2CF9A4B1A00E66720CB04B2AA01E0A0AE61E5F3EC3AE
EEBF5F219D1F0F18B03B26C4A34300BFEA103CADFF36A58BB760E6EF9DA2B8DB
B44BF54B6B823C1F130DEA693AD05F6FCAAE4BFC1F60C355698E338300ACE74C
F1F136C8C443D9F413AECE5BEFEB1F409EE6A16976C0FC75CBF6CADA6A6B7A9A
077CC5439A37411A466AF600091CD7D0D500AB15F9033985B82031C0B7A7B585
674566215A2FD871183722A407F7C4524954279E275DBB8DC367BBCCEA84568A
BD139F70C1EA8869611D9D4D5D607A7170EFAD513CFE9712A3F609044A30B189
4E3CCCA5B2776D0B6F73549D6FC571784142CD22358F44EF740B9C892D8A712C
9A5B356340C7C6192B6AC6619D23207648CB6314A6BB60B747433F2F88161860
ABC8784092D44DCC6A69F94C1A332FA63E6536452588BF17DCD7F39765EF3446
B6ABB1245CEB8A55ECBAB7FAB04C08F2B26AF0F8C964AEFF267FAF08E24C5D0A
20285C99170FBC4B794DDD51BA16608FBC3E99A2A77823CAA8C4DFF3B19A91E9
1E7558084D9CD408EFF47B093B7CF38F6AEEB5CA1DBAD381FBF16066F107FAF3
D331C2F86B0CC274867D07F16E915503CB60CCFF963C1D8FF916E705CC93FC9B
8DA8BAE5A6A4B2422F75140C6EAFF31DF35191FA8E82F6C45C7FAE6B7FAD38D6
948CFA69D13EF6A90CB1FB1625572189A19315AD3BEB0439BAB334503F9F4AD8
72CC29CA785CB74C17AB31CEDE45C4317431CC1FC501195D34460B4CB5747DB9
163569E9EFDDA9AD142BC2E9E64E4E306E9C97A7434C3E74B72D8531F59BC124
3B45A3FE33424546953B546475BCFF91C5999F4D74FC8997E7E6ED02905CF212
C0F6431160B2E3AD1888AF21427248862324858A522B9E47D445FF19E2015BF3
65A8818C583267A3D110570EE2CEFB9DAED158B12490344F0E5C23806E8030DA
6F6BEEA9FF38C55FCD0CD01A41237A42015BA39AFBD326E3CDB9B788A966BB12
698C55D537D25FB7993C42366EC786EB15A5F0DEC6B61968510FA2DC8EF4E0DD
B13A3C17DB52F38098A03B11EEF367E1C79EBC3A3D377322FC19AD97D0A3754C
24B81757E986B420E0E437297DB82A1C7A8476CAAD6353DDFA9C87125EACBF17
B881FF4F8FFE7A79DC53DA80D46FBDE35252DA2185A99B973D833C0135325822
21FEA24683F2370B1ABF4893F3567676FC641611E4C83CF800BA0A076FA3506B
48D4B7FB7FA7152E4661FA15BD1301F1248952EEB7342745B8A7456A7428CBE5
7A81F1674755161F79A47BA4C86FAC6372298FAFEBF38541AD1BB1AEE8A7656D
34939AA8F00DBF92DE32D3A3BB44DA90B76A05860EF59E8879A3EBEA4F5827DE
D76A72BBF7DB91E84B7331B0BEAC0F45CE0A39F29E7E10E5CB7C9CE2E09E3C73
56D17602C55AF04EED67FAB3E790D851606C6FE39DD8EDAF5A0665FF224CFCBA
4C1A07242CA31F3ABBA94CCC26928DF1F1E29C235E3375A17BF0786B7FFCAE9A
895D47D5DDF48544FBC4CEEDA53D58C697C4776A709446C453011F619D35A919
1B73D6DE2B247550398E2A60F5164E651C114649A0504BBF5BA63528FF634CB3
22FEB7FC4B92206E4545B37CA8F67F41CE7D296F8B5A0D374B87CE07ADE6E6B2
935BD6312104253C02669A650F2136817255CA21E331B32068A8F8286A994307
EF8AFE1D6BA10A3CDA7A9E34EAEAE789DC30561FBB55FE64262D2DE373E3F28B
2E447E08A5ADF681BB7C42AB16F35C43BDEAE4C3D1054BCEEBC9224DF4B24A04
3124FE60C9C97659237E51C5F475F0C42E87F02759A0850BD90619D500EAAFB2
DF67B198BF1D5888DACA30487DD0721E0041BB3DDC31F990A09C55B8B747BAB0
A7B42844121BC01AD5D9081E2472787E60CEA59B07C199F94E3D8301B9B7396B
F67BA7A11FCBE76B797C26F5D34D728AEC7C0EFCDE0022568949E624D8FEF371
F8384BEAA53D84388DE636CFB7805ACF593CD86F510C52D1EECE54FBC7B5A887
C3478EAEE8720CC128DCA3822126F491688AB4FFC28B25F44AEF8261BB77AFEB
21A480621D4712CB9DE0BA518494A80BDB1FCB3EC7B565EC2FC5B15C09B013F4
481D5F25B933B91FD5268A552F501044C17270C5EB8B076BCB69433441BC5F5A
06C0BCD45B574E13B45A0BE6BFB77638DCDA119BCC5E4258B4204DFBE866094A
7243BE63A74844E7157CE0DECF83D245E58F566CD2B835E679AE70C001DF32EC
2F29119720132C1015D653721032830F968D72A2FDCBF3BFA7A0C66921AA667F
410715A65BD8AAC94E0A90D9DD2C1512EB3248B515CB0B42183754AE0BA1503B
D8C12771C6D0E14A141A52D9465223B3ED9E26A5D57B9DA95F8356184088CB97
75FCE8DEDC25FBD18C35837ED5030ACF6D1D4C7DFE67B5709DEE044BE0532A1D
A3678B5D4EFFD8613B50B2DFF44E39A4A52769D3A19CF3E5E8784A0AAEE4E01F
B33FF8EA9FB6F94AC23EDCE675810D9C16BA2F7AA675732F363845199BCA4F85
9A83F28548BE89E91C84930FAA87A50C9375BAA0172345439BEB39CC63FF75EA
03F6F0D8FEE5232E18160B2693B607A67E0AEA9A7302561E1FBBEADA9715C091
CAF8D0B98986388E07A4B3B963C3E0FB216D55D8DB84FB19A69E370D9C14BABA
9042FA4AD9530E18EDE9E73CA20AB8A3FEC6C11C63F1E06782E6379812B7C5E7
EC3012B2212F1936F84E1921CF4093FB340DEC53F22BBC9011D18C818CAC5CAC
0C9821E976BC987EDD09BAE89570309470134FDED27BE1BD23BD6173148BE33A
A7F9A2098050930394E3DB10D77AF669DA070A7DA880A804FC1958002332DC0E
C7A0A30A0ED78FDE5DF3D67E76100AEEF2A32FCCA9C22627131EB37FA55EBF61
E1E2693A9F8813DA01510A2A8AF8E4FBF827B58967510EF71F929F7F76E62075
FFDEA3239B07FA7C983C393D2888C61BE8621684362861404D65F4AEF105F109
CF32143643C725505EDDD071765E4818CAE1DCC14FEDD6FEFD70DB32B76EE92D
0E0D69A496E0169997C9E05B2604264FF21486482776266CFDD016D20FEF564D
54FEF189B7360DA2E37074A25FAB74BA5B3711F4E38EBA4BA166828C4A3BF35B
1C8589E32DF0DF9112A3CBD948C23F32041672BBDE8DAF643B40030DD1949870
DD7D5446014815D0C477A40A31911160174C2ECD15EA51160F79E82E5B91290B
FD1BB65DD4FD47594A04F0CE40826ECB64139419373923D513FE4DB2415452D9
8C32CBEC99792A6322A6D545507A1511BC821BA38D994460EB2A6172ECE2D41B
93A7265D4BC2A47E83AEEBAB37E2EE655DE181FE4F701A6B502826C0AC756C78
19E41A8DD9A9962B49C2C831D2F707343AC429096FBA2011384457412869E052
3C6C9EF3B12946D7B862DF17F2AA8B68A405CA9AB73D57894D18DC62905DE489
796B567C75E664B98AE520E91582170CEBC59BFB76D44968F727644BC4182249
339D8E010AC6FE4D87F22E64C65DBBB8C118BD51590E4384A919413425D64EFC
D2B2FB2A720D75ED191B9DA7AAF34B926D49F325E7C8CAD7F30EB9AFB704BFE5
6BE68EA0A1274365F6A74051ADDF7DC9BEC7DBA46C444A56CAE4011B9D18DFD3
36E5A616142CD8EACD974787CDC58296F8AF5A5FE7E43DCC5A1A5DF5BBAB472E
BE2E5D0D35B49424061E8EBF0E18A1B5100EDDB028FB92EF7376535652750E37
141489D12CC29A692D2A026FFCC83CBDD00A34017C53C8B34D2339497A1C50DF
E9CB095766A05C33851ACCBB2BDF4685B81648F41E5A0383FDB5530C5E79F271
AAF436FBBB3FC276B0990D4F0E207536D2A5B7F323F1A17FFB4DA0E7E738F039
74BC387625D1D89D75F8459CDBB13EC8ED7ADFBBF5772F6A1055B9336D0C3197
C0DFF41FD7AE32D937E376D1E3B8F2D98F101692007D3DDE0D717D5F80A5B7BF
19BFF017D5E31C41E10C530F2D867BFB9899E701D376AF377A7CFF53E1602B98
10C197C0834CAA25FDC9BEB696AA8ABD1FDBE17E3075D6B0498A8E7862E312F7
A3DAE761AA55835BB225E0B223191F587512EEBBFB99BA058FF44E00DFD00AE6
B97F69869CE28FD370B27FA94F4C5584FF42C59F3A4888FF522B5371DF3A7B5B
D94C02E9A5121302DC60D81033B64E1D5B1C605299E63C5D482EF6DCB912FF55
2063282BFCA4DFCB3F8CF5E6F3137837B355638B261D302B7301973F13EC9948
ABBE008A3A92E2C9E7AA9E90183250841DA3DE15464D3C42633B0F9A3EEA1427
1BB0CDD44CB5CA6B85891C4DA3B4173C685C7519F753FF9C5850EEAA368C659A
AF5E06B07B4FC9ACDDB60532FA1F7B47B9AAB2B8201A7E521BF359E58250ACCD
1A381F3FCEED0F44965D6BB24F176221D78B507477E5510E6C0CC25A8018DAFC
4CF7124B9350A1BCC971F1C589547967EDF50F9666CEFA12B2DB7A9EBE7DA751
07F470F568242DD4B03A231A47A0A2C035E36D9F85BC9DC39A3A3E218219F686
F1DAE56EDAA633C4835C9AB07AE0F0E29423F81405612F0D47464AA1C5559CE2
678681379BB6B432A3DA3751588B07A139D91A49B8F31D86A3501DFE39269A40
AACC691F574AF3D6D1CFFD21330D50F3ABB4056FB553691E8BDCDBEA9B66B6EC
9235AEE0A9BA6B2C028864FE5136C9B68E59BB5130B884B85FF4B97FC6355DEC
63EB85BEEA57FFA5C2021714D2D880451A16487F9F0AF964D025DB9504D694E3
D3DFD996A7611B4329C31E67785EEC7F488036CE1DE1256554ADA22592E96301
159337D92F409E0B4B21FB3564EA0FB8131F79E0F99FD9320A92B08284DC0970
57CD4A6ABD36B01ADAC27F6133F46882944B7DF21337E4E0B941302CCFBB589F
CF09E92900DA3194908210BFEF2E880610049137EC08D37E30BBA74DC55FC853
CFFA3EFA35B5D5C92DB1723ABEAE9AC66E6108A94C63CA469405BB11CD69812B
FD7CFB34954D65A1B3E708B3C8FD38C82CA09E06AACE3C8032C182C9468D4757
2493D89A5CFA112FF02C9726BC0274D3C775B5E1D917F52681C14DE689160C95
02A84D523A5918CA6144BD013DAE3F2FF1E74B1F87205F49DEC7CE5CB05424A8
E86BB522925307FD1A4D1FE090610F314013996A3B7333D9E776B5B15E6A4391
043942A609F5DE564F541C3778F7605E43842AE20AB95096E89FB1E023158FB9
CC452DEFA83D10B2E602334D5AFDF010182EB00E589E434606E56E5F1EC1A751
06CEA01A4F46393C70CF4C6714E5692DDCB4C9A97966546A3FF46C75C99292C3
AE6A1D5A74905ABE95302892D6C111E137B9CB20FC06E387747E0B76955C01FA
1CDB2061FB7E3C070E20237F60649816B077C6A97CAA026394D7F8596354FB3A
785CD311FB09E807A6B50D3E9940DD6826ED01A046674D4B2690CE38377276AA
0AB08908D5F2D86E74C7221F91E9B6D0983B6C777916CA82282C2BE02B9CBD7C
E8F48C8C176FFCD453645031EA0EB6447E068272EA7EB5DC9EE75D77C3D54922
38EA2FBDCB9C14EF60E3C5DC74684427126FE25E68E8355A4A3E3EAE813A135B
0EC13E5F758B42CE384B3B8D5BBEE7D3C33FAF021E0BCA3AEB1ACFACCE785B4B
0341C404E13036F8C289B81EBCB7EE88C8AC5025A7ECA42FF364B135A26CA835
0E73FEAF569DBC0A4CC9829B24892DF674FEE775F55D1F9D473809B8BDCA4131
EA02F284CD4431608678FD5B1B78052EA58AB3F9C7556EB0A0DD0F8CB57DDF83
5883843425AFF2A713B19FE26C9FDDD1130010FD3A89FCA6D1A957BE1ED0D460
DC48DA355CFC85FBDB118EEB9CB0568414BE30130BBB33621176DAA4FC85E6F1
6D979970795EFA7D8AB5179980F2261599A79FDEC82DA364FFCC7617D6BA28E7
C974A935830098B26CC017A628F3BACF9B0D243BD873CDBCB1124B89BD4566FB
3F5949348E27EEA87E3221CC10D3B7A75406A10B9A44143521759D27AC497D87
EFAEAC7C197F4794B9F4FF24292D348D91956C4E791906586C73B447795CA639
A5C9CD7C63EAEDB03BB0B59C4E0E53CC72296942C4A0144329ED1F9318CDD41C
9CE2BFCE1CC2C212EE9D7C1B7E8099EB24BE7DF1F8808913D056932572243ED7
D42BA3E8794EC7A170F24347BBA172134D243EAAA5B7B1504D1DFED3B6F8CF49
F3E712EC33B1145F87DE3179AE8343561EC8CAFA1382ED00ED74A2229E80CDB1
5BA1DD479A53F4343801506254B94C779AB41BC28FA91A90E095AB560BA8CDA8
C476B4443E39AE17EF9A884CCF89AECD31121965327BD1C21F81912DAFD1A016
84C78BAAE42CF19070340D5CE14C4F8FCD7420E5C2262D147F0B66805822CB16
5B95ABB13AE9071BC35EAC7A7C7B3C43A95DA7197597C0C3D4ED10F9B3F99B53
7929E5FAFF19ADFF611DB43F876884331A114257E96F726455CD5BA2513A7455
5B52D12CD27EF7944888452B879BD7BD0BE529F50149E7B528CECAC3FDA16556
F09D040E0E8CAC2D7CBA06F9D5E1B9EE868BD38328A98AE5A947D32D18697E55
71A2172237D97446FAC3EDF11E01C3C452595045891BBB0BB50D3B798FD81B6D
2D2B1F726B2F68E05304D56BE569E17A3DC1798E9F2B9635546E00D33D4948F6
23E36D6693D77421469B5086C4D04F1B7407526C90A4A8D3F317853626684DBC
599B8F0D5B9846E2259311C30587D33BA9C81BE47942DFE8D546269C0EFCB403
D58F56C62FC613AF2B388C73AC31F294EAFF4B3639856E71AD9E40D20C593F0F
2E7F219373B9F9FA564DA1BAF35E65CEEF0BE62E81A8738A225F04B30A3E95D2
B8B5B16C5BB3107F938AE50FA56F708797EB9FB4F2EDD138ED38D16E40487564
6E5A523802AF11BAA041EF80C5BDC189D104C82B57372EBBB47746892FC8E756
7543D65836105D930D25FA934BF02D183CBDA1BD74558B19AAE7557F6D131A26
FB68AF75A2A8B6D4436E84E106F71FE0D7782FB73E0944F100090E3602386405
34AA980385F38AB4C33667CFF0E38357328E3F8562CC1847C7EE43B8AC9DB167
DE22C6FBA35F4F7EB11189FE40ECD67D0F781C74EBC4FC87CFB9FED897C092D6
1E056A3509C84A2F2C0A1A885BAEECFD0102B37BFF70D3E2B31056F217B27376
8BD9CCE87812DCFFCB24FB8DC279959D21E0189DD931BCC8F08807407042A540
0A43863EB6E1DAA1BDED351F99122B2B5186BD8D5BC07512BF7B7E6F39609C3E
C1503C8D96B4BA59BE6F2D410B90BFF45D6A3B0D53ADA0BB3EC272AA12E1C155
186DD91F10CD8D1B1BEE312E5DE8571E005721BA86EE32C81CFB94C8640BEC94
8F8B1E7899BC38EADCAB0FE17C7DCE3AEAB65BB7132EA6A3BB1285CE34C6E089
BF758BA21B5994C392EBD35439590A9AFABBB0E7606DF9C8CCF5D6B8430E94EC
7CEF46B62DB57C978E635083B1D17C09EE2A98A7A64935E71337590E98454C7C
2A86E4F7B78166E0C61123007F2ECBC8FB43630A86166BDB6FEF91E26E3DB316
5E0E69F10A99EB4DD1B16DF4F739DE7E3545CF05CF50938054A76150E1EC1D56
B95061FAAC1D0D8745AA2074A006046CEE4F9DF7367204D429F8A9B83E0671B9
45E9A72F642DF6B64A5808B27F0449EB779B4D54029B2D775BD8E9D8D22780A0
B18255DC828D686EA5DAA78B9D69AE9D4255FDFCE237260D1BFE3F033087E030
52FBCDBA46FDB1E94F1DF4E8856345CDDE37ACD9C62AF36A6D28C07E9DD86E69
D3284129BF8569E6C5C5862B1876CA703B15A7AFD674A7EF2513F558F8A8E0EE
94D0BC2933AD3A6768D602948B172DE286E2C030C04BF9C49FFEE3986EA868DC
9682F811461BFB7B54BA91D6EAA744DF8CFE5B68BE07DC43EE65504AEB27B92B
0F22F0DE8EF8B99C7EBED764DE185CF55AF3BED8755D4F5A50B92A73E68015F9
DAB539F7A0CC87497DE54CA91E5404188A64FF956BBAFE2A95C1F45694749C4A
6FFC6E96A9AE0AF30522B5955E4ACCD443D208AE1D0C11F7ECAD07F4C6BD9EB8
06FE142A275C455EF28D22A8C913519B533C445240D398030E68E3E07C0E7722
D4F0400F55DAA1EED06B7D281C75B24F393073FEDE7E330525C4E5DC90ABA82C
11E32AC273889F1A387EFE079C12BB07400E0A6B9E8C89A4286014D1BF3986C9
C98729168F8A3552DC396C2A7855233D698AB903ADDBFFEC93E1E94E9A72DCAF
376F1B8F7C2918382341EBC7819CEC1A84AABEEB26763B76BD8F81F317009D3D
046BA596F6315CCF5B72A78E9602426E02D77B88C92582CA75E085AC840B110C
6C03F819ECDB56A78023F1D72AA290C90C8CF7DB1F1ECAECA185579B4F355A5F
14B679862A190EC67C1ABB257AE8D9592DBF9E55698BD980D6EEDAC474A72D65
D641DF303CDFE87E1591B327DA11F7E17B796A138126CABDBB54106414B30F35
C753E8766587933C06873470534D40879EE45C568FFF06B87CB7D64E8E02AE09
768E6A1DA91D0DB22C933184FEDA33C938F2E43611A6A377F4CB81916659BA08
F395AE460618554F01366677CBD417F3F57428667E7FEF50B56093A078B39511
ACB7CE18AEE90015AA0A81607DC1193657DC9ADBD34ADDBC5CF6E8A57B0E68F0
3D511769A80594F14574528FC80D87F762B52C4F75468F9E444CEE92F1CB8428
0F878816A80438057312751CDE8ACD9E29DEB3357FC223B710C6358285D39C29
CE161DE0FBF48B310EA98F3DDA67C3C67D789982E29B607CE5A93F567D387647
ABC1873878DF75EDA9710C6CF526B81F07D5D0FB35FE0432E1EAD0B91A5F5809
32533F055A4938F3332E91D689F2F3441C720099060729367AA58BE274C1314A
59786661CD0AC0AC465A53A8AF9A702488B1DDE623A3B820BEEB8339D2BC3E81
6A117A0521CCB04B11A82DB313841062075731AACC88C4AD05003B4F76DF7A8E
AA4E532BD29259FDE50987CC093E0A585CC1E58D0332B037E5AEAEAE99A5460B
E5C87809E3D915B9C28A774F157EB96D0401F5DAB753EF0ED40BCA25BAE5B0AB
44033A1ACF08AB8FB32C9E48A23EB7940EB4D5FE0807EAB6F7F72035055016D4
6066C3521CBCBC1508FBCE413C077A5593BA653FE14049592C0C7705B1575782
3050C1936BCF8E9D2128668F614833EBB3158ACE5D96C42EAFE86CCE7C466940
379D41360153632AD2C930FC1BCC2AE06C6887E21111AF327515858697E1482F
B17B307F5DDB60CC5218038146B61B9223AFCBB4DE9F872886210A5FECF92A9F
0B2C04B085E58A4E9A26CAB0D536D4A7EDE7A944196C65ABD1BDBE8E17FF82D9
D9E9D9AAA50C4B1CDBBEC24030F250E8A720C136446ECE464332DE0804E13985
D2D5061FE99F0C9043C662BDD973DB1CA51BED1553C81C7B04436F5076392BA4
FAEC009591D805F96911442F684FD2545A23D91A4612FDD7B75E35ECD27D621C
AFACDDE9B1B3926A51DDF306C39DBD73C9AAF057796ACE12F24AFC9967A998F6
24DBC693F68AE6D11DB6E508D34BF8A311350F926724D3DB7B225317A4893BCC
D3B9A8D8288887C111419E6619B4D3C73E4500DA43E9EAB3C24920B47CF771F6
EBA987630EAFF43AFBCDEBC4E5B5B92C598CCD879CA067C0824AF056D73CA50D
40DB3EACE78126CB1751E6F6F9236EAB94C08D866B5E32AEE0FF9EE78708490E
F262F0BBD32502AAA0E9517930FD359B88627CCD7F9958190FAA61DF8736C6F6
24F5F05023BCA21810DE56F380B61E55FA67A7A4D727DA208998A3318ED80C04
599F0024C4C64F9A1B4135F36CE6030F71E5CB539BEB3C1B9198EBE88280B39E
BDF884B92BC0124DFCEFF1323DAA750A580B9106FF850E0BD4C7BF39583C87D0
B1876748046E49F08D123D9BF287ED01F8ED374EB6978CB110AC2B773E773C0A
AD20EEA3E6E29961346A27DB5FFDF0311E6A292A8053C9742F56D18C95C6F3F0
33B3C678F989B2BE889246D302DC57AB5990F3B7CDB3350D403F83366D2A86FC
529C2037B3FCCD9EE8750F0C6F0726CF649951D63F52E337BAAFFCE554CDF5E3
C2DEBBF6AC6A22CDAF6368F764A2A36B5D5D742079756342E124D3AF77BF63CD
1963874F9B72FBA240238BE2E0F9F0A98D6DC59A28B5BC54C8C10E62D701554E
EE895A643C8806E538F82753308F0CAD1F7BE7CA1540CBC841C17C397A498AC6
42C06B70FDBF93991F4FD03A3C26F6643C6A7352CB037BDBEF86BBF54D4DCE72
E417A3C9054DDDECBA64BD825113E685E41AFBC7848D5E6072C80FC0D1D8D864
D22E6EADF863A217E010D4A24FE15C8C07C6309840D3CADE5CA12D71E1EF2693
27CD08AF85C11795E0C8B27356340D15033AAF92D3D52E0E136DF33EB93E6096
01C558FCFDD7AB484582E6E036E0D8D9E9DCE56F7EFD7F54DF53E425D2B4C6B2
8A2579A6317EC9E527F9229026083C46CE0DB07508C0FCDA7F775209D602C329
BC02FE431B6899026CC9A5C35B906AEB6E812ADF86F0AE31DB3FDC7DF52B0966
D107E8F36423A49ED900FB4EC1DA14C4CC37C73CC3830586849526678DD1EC2C
30E6BDD1990B6564A3AEB2DA0053701F7928C18E7F94715863BB6C3AFD5147B0
84CC4F9FDB4447296B4F76D31ABD7A706D9D0D3C0112F2D488E227732A67CC47
58F41B1E9CA898637EC6D1559EAEF55E7AE5EA7BF71132F6F4BF467EA6B120D1
E0F831D75D4DEAB58944C13B7E82B9C3D7228A037808785928E2D5A9F08572B7
598489857DEC5B988BB9A8937E9F17E8D74947E940732D00D69FF5B1C3EFC9F9
243A14B427ED85BAD43006A752F86D5A8B2F54F1302CA670EF57227A1D216B53
FD461AD31E3F49BC3FC5E3B93CCAFA8DB5D95EAC1DF4E3C1F9BD788E47E22632
6126A8D931D72997CC2A31D90E59B4964A2C862AC94AEC259D118A73CE4A460C
ADFA59BE9C13DCBC2BD629EC4F55DD902A279B482CDFE2E4018491AD262ACC1A
61A16A5EE4F95405AC12BF19261DA01ACD5B702818E852C00F6149185A07B7A2
44D66648DBB4E5589BC506E0FB00BB6EC3120612F6741A04664410E42E55DBD4
646EC3D4DAFD0DDD87DDFD6E19075B7851E0C7841470EC3F42AA46B41FF2272C
E2CF83DBD24F554602DE62A4E159C78437EB057EE8790555642B98A4BC2D11B9
831F7E5D2DF23D99DBCE486C85B40A5395332B307E571021792B0AF7FEFE4949
3D3279616E4617F7DDBACBCEA5068E5C82CF45D1F63AEDDA032C706A748FB032
435432349CCE51CA517808B017246DACA873A4DA23A61333856C5BBFDE8E71CB
044A5C117B617FDF17C21F9995A0F3AA43FECE25D13B9EBC0BAD8338661936C8
4214C3CF551717998778B4E07497DA38B71EBD1737FE06105DDF2C13186AEAF1
845ED81B205539C9ACA80421B10D4563DE9DDF53C618B825FF66C4DAE48823BC
FC8957C27AB1BB183650E54537DAE8B7E8494B412F28DF61E99774F285FB77C1
73150DC0BE488A3E829D52C4A10F9248558CA3F2DEC982347BF6C53F23E7CFDA
A299201D9514261CC7D34E90DD25A8E462D61A74C57ED50AF06A0BCC5256C77F
629A4172B96894DDC109C7D628E2A3B7784E98027448C85477C9D3405A6BB857
4DA2849B193AFC1AB3D7142B1B6F74CC4C4E3B4352D775A7F30EC428ADA56777
048B9CF7271BE17A2D50013B80A26E9DA21FF2816E4FF450C162270181A4C7D0
032CE2B16826AE0C2924651AA430B73CF7035B04E1A86DE3B52CD229608A5411
221B1CE3D82F7191EBC0601EA22B0F59FB1B043A65CA82D008771B9830906A56
FF70243E9A0908829C0983041F93C119DDF036599587790571888FE54BB1E9DB
BA48AEE08A9646C89F70F79D1D834BFA1C2FD13FA9C982FB1BED9B7BFE3124F5
482AC55966DA02F89C179F78F2626B10CF449C5ADED4CB928BA33D61D0F1DB44
528ED8C9138D4A7D38FEB8843EB2FD198E4014AC1AC39AA0D7567A5E438895C6
A5631663E50A4A486A2D80033DFE8176600146B062BE925276BF11CCDE2EB2F9
D5EE9C83B0DE3011B8130C7546866B562A1E189CB6475293878D03E7609CC639
FD937D55A39640B6CCE2004D169D402D9B297A19E7210C3875A14959B71D5EB1
3184ED39B4F6C04D58CA4C946BFC14A567DDE8404D4FB3398F954C4FD52D0918
D88E4EDA98A9A9C847FD8B7F8ADE8A0A986DE2ACA9D0B9206A0D3E63661BE9F6
2415FBF0E6DA37C3FB531E263B1D034199E8C981F7AA986DEE05E06567907491
5CDE15034FAA1AE03B15D795190298BF2DFAFEB48F050BB1B23FF46FCEA0D735
D249B80C2CF8EC79E9BF163287DAD7F2D7422B5C5AA5D71EFB6AD67AE35E5A4C
9DA929577ABFB570680BF2A3D04277E3B470A1B1EAD5E7D9E546BD67450353C7
57F78E6DF37F5468CD27A4135B20A90E518344770CF5D2A31C633F06412E7085
85E6CB069521FD1BB18D70AD6BDD3794C3041DFE5D4D1981198FB0DC6D6CFAEA
0B5731F61B14C6325283DDAF7CAB2CCC5A6659ECF7A30CA975101A8AE333A92B
95C15F70D75D0E8C5B0F46820259AF566F57C967CB374F5797E05433BA0AA7A0
967CDCB28294D717FBF3DCC32DCC9DD4DA903B22E572BFA69DEC6B4FC7722FB4
7F211EC165F2A209F531AB874B2E410FBFBA0708EB303418524A091A540FF938
AB6B70F3423C87003711D0E43ED14E5FC6B3C8A847A74A14A67043FF3870E83D
8B2D3213B78E55E63976B8A7C66F4B1463583C4C50FA0FF295815EC2755DF8A9
D3F0883CC2D016297C94D4D7BAD1CF550FF288BDD34F9A28C14886F17F77A6EE
9C23EEF55C6FC1E05E44ED8740F22FC35BA8CD03EFB542923FC3C193AF215E01
2FEE2151C9B3A2DA6818434D3D82EA58A6DAE7F05EB19D0CE5747B2FA43CA7D6
E26B084AFE36481AC920A6F36CB5D11AB81434FF0A5D07E02383DEF4894EE1FE
BF5C22F5993ACE10CC259CE9C6E3A244F96867FA3F9E5A8919CCFB5720844AF5
030FF187845C9D8FA075CE770AD2427AA13591FDA3D0080D761E41DB114259C3
E9FC2C593AA3C7544DA0F8AA7DA8ED524B44470B2DB7F69E1AECEEC39C5E3EA7
C65FAEFC3DB188CE7FF140C5E17063BB1AA5320C7E22B6DC3B8357106C1FE455
D2AEFA7F7C6BC79BE3AD3E52CC6F8842969291B11856F7B9B2F4008B8E9CE744
AB16ED7C034565DF18DB2DC848F6F27CE8B46BE9D94C144A3F8416B996017092
B44CF7267CF92C15336B9CB1CC7E227CC47B4A1F7DD2AD0EB796DE1D4B72C2DC
D4EB9321300C060E234440E0F5B7E10F8CA11C3F3FDF183C92A7D53211A68D41
F05C884321D9AE031CBF19DF3E6029DA5B5F7C39662CB0B13DBA9AC0FBB892B2
49F00A48B62E89F470CD57160AA8157CF666A9A69C91D4B50DAD534D89F70699
2C7420E54D7832BE65F287E470800B6431EDF59D0205801CC3502FA275959219
23E009868A98178FE803898E68483C323B03203B8197F9D467B87FE6988F84E7
F7236774ECEAB354B338405D242C54987A10436C9A3107A9BE3E7923D508BCFA
0E526E67426758AF101A0AD64320406697B3A10B63DBE9FB9E3B74213309A9FE
6844DBD3903ECF7AA62C97FBCE1625D9C68E04B83BC671948011CFFD784AB542
3AA602A4B36B4955D8A28C3170066B8BC99AC8E1939F60A53AED1FD600EADE52
D465A02ED017E50F0F7085F19AA66F2409796B15B50CAFE4D45F311E23EC9F3A
2772B3269497C25F2DED6BFA8CD687868B2C21C651E49AB0BB5B309D75E3BF71
42323D4C0FC1C24D768290656DDBC6EC22031D09F49356354D1DD317FE47A853
5978E68AFFC2E6A25896B4D3BB4CBC8EF1E96B28535CDF5087DD06CA53476C60
85799F183D8AA125DB05EAC1A3F059ECF009CC75AD9E31F72E528D5799EF43B6
ECC8BD3D72E9F9FA813B45A8D0FA36D525D566ECFADE68C696FA46F5DFBA03F4
215E2584A67E9E471744DCB239A8DDF7AB69F970B1F1EF0762E22762C03D60C9
B20DB19CEF24E9E276A5F1ECC0553F33BDCFECB67E61FDD4DBDB3A858536EC37
451969D2F02B5B0F1C3A6A611911F0647F560E74E747AD655DC093D873DFE626
CBD1DCC1DDAB5AB268A983489A49E5FD38D42D1B7057500C865A2965A5A33859
9C4CB6FD9E38ECD6C383CAC4588649BDB0FBB74E41EDF87E097DDCFC66FAE2CE
F48E66F6C64BAE4972196605AF8F578D5BDDB59CE8668EE49ECE6D76EB5CE403
6608AF551BA0F0D032A4C08AD012B05F215A1B73DE5352FBC10FF237E38BC8E1
372E5ACCADAB39041D7B492F5F8106C56F0AF94B6AADEEDE60059FBA0A105453
29E88118AE5A696F8FB5AE860C44847B8E4D8C7B17315099E71D849C661EB72D
366D6C13EB740F6838542DEADDFF2A1F4324399C7C777C002F1962E0332E1DC1
1742700D8D55A0F3B6B7F5E6B5B422DAC7374DCA3BAE922668A90B38A7099A46
ADFC9FD09C9F3811360E9ED131026DF00670670ADAB56ED941B0043A6FF29AB5
35A8D020E978F867C49F9AF319F637BAE8B9BC7B9C132831AD915A5E16E4D7C1
EB55CB5B228FF004FAEB15D9988D71B65D6D4B91A3E8AF64E9AAA70EFA2FDD60
CA43DA297A279E0A4505547DB136F4D1F9B65CD91826A9207AD7D21DA0FC528C
ADDA8620D5D2807646C12E3CD7F7386DD7BCF8A09853F457DF8A76E8C146794C
EB8B96A458DA7C49EC16F3D75C6F6DED33FC2D063EA5DE59B602D83CD2DC870E
BCE7AFFBB421518817109C80DADF3A56913805625CFDB7DC32297D756B555A89
A612A191E1621799EC9AE2E80F389DE673A73F75C70559BC79893239C1FEFC90
68EE83DFB93933A385859F0E9D622D72AC6864DCA60CA92E4606B10A849FE69E
5E6C4B4A1894675006A756345B159C54BAE507A4C18F1045201B58A51C6280D7
95BAB24728B1810DCA3044D22C5B95F45A31D28F236525ED360F8B0E8A1CC30D
D4B7F0C07241B9CE61C958091ABD5C60E1DEA25E67AD96323B7D4FB0BE374B75
A19C130A9CBCEC056A2EA7DCC1CEC72AE2202FA2C23B2F7EFE1E689E54EA8D04
C34F804AD2D736210F9655C8E2510EB7D5C05960942DEDB8E04CB7CC12EA8D05
D22EBDE38633221DA470ABA5B1E2CA227E0B06F00C7A8D705E91588856744B08
23BC14CB07794FE68841717F131A3ACBDF6A89204651BFC231DB4658C59D9D6F
0BC1A61719321A58B26D75BD09F7C009836C97045D4D4E993ADA9B3A7040E563
21FBFDF9D36C31E1614EB71D5E01749A3141F31F2C8C7D97CDD5FFF88544262F
676A8AB2AF34312EC8A672FBAA220DA337C7EA6EAC71AE68F82145D08B70235A
88708CD9C46859DB785FD7805CFDE847F6D29F7B833107F331BE69D40F0AD647
2FC4E432F394026C95426E1A5843F7277F0D14A2D21781B71CA010AA4EEFB34E
ADD486BD9B199C78F3E00C54BECB1E0B353AAB382DC323D3353FBFC12DEB5A3A
FA386841D57C3F651978B28CE97C9CAFAC457C4BB4DBAC0317C2DA1E23FFEF55
05BE3AC7FF1D8C2C2379A72271FD1187BA90D8ABCB64DEC0DCB3D19071E26725
8FA4B79F2AD583B34235827CBB3D70B9B871F9AA41FDAF2A196A145058D70F9C
977AC4FE446272475BAEC3A4F839C435878AB20E965700971760936A5997068D
7383F97A98196EB8779C1C48CC6C1289329EE775BF2CA25036B7465BAD3B801B
2144A12AA42D76C826B3C44222FC5592F0BD6581CE9D4C5BA3AADD958E7C76D9
815709384840126CC6BBF100A909E025D9F5B4A40F47DFE8FE424FB103C6576B
9697457E6F6C423C93EF644C585CC45C3608AD2592A8AB8ADD0579B802FF6836
F031C75F9AB80F5A813C2E703B35F72783A4544A0A5615182E5D5E7AEE67A0A5
3CCF4FFB2E8A1095464E4CFE3BC47588FE57CABDBE20AAAF52227A842B9ED550
5387CE8A3D7DA69C2121B2AABB1658E31E5EA04DC3AD6D2E121C35B1C2BD57A2
EB37AF06520682351C6B8B26C44F4D9DF976CA7AEDF8B947EB0DF0A7BDFE18F1
D5BD4C67A1DAB62A2B8FC55928E30B3C16C72DF726009A4CCF85C33152A6AD67
4F18A56578ABF6E82BB97B20AA7D44F776170850B7DEC165BB08923F875B98BD
0D7345D125175721306D23B0BD42B47DF8085FA6D75CB959C5E648825A90E7BF
A68C653296FF49CD108C3238070758DE5D4840AF4CAC09CF5F7D4C830BC0E3F4
CA32E62567C75FD322189A364D2EABC0AD41496CA94702D01A0D093D27A63170
F646D908B51651579ABE481EEDA922576E7F22A0AAF320D9E4CDB45EDA837EE8
47FBA16E4103611BCDB712262CC947C2B9A3D3E3CD939AAD5F40BB363943D221
8F3AFD70EAE4969E696394BDA477D5DBED81D7762B3C933258BBFD063E571CD1
C07DBD590872AA2FF240200BC3484A500D9B146F295EF2AE7613704C1B7B1AE5
E8917C6DF03A6D62511C908931358F39763EB04241F501C15798C5BC1BA61806
591F4F3323B5CBC2A81DF785968664D20D34DE223F6C1CDEF9FE6D24E1D1DF16
D6654B35AF657EE44AF04DDBB31F501880FF49402E55EF38AB389839B987C86D
29E72606C5D99CC81BBB120395193025CE274503FA385056A1BC7CDD7B729305
BC1586FD7ED4E7A9842501634AD99283EF730DEBE927B37B43AF6643C7D1F5B1
1227F64F3311DC3441C9765DED64AFA263B3FF62CDB994080FFD7210C8526EDF
BEEE7124E79FAF6E0AFA2F03CF1869FCD57C309DFA96CD121762E79C395B3214
3EBC4D13690CFC4244FA9073AA6F23C252D385BFA8F35EB2AEBDC59C11E888FA
74D9290D5155F46171519A783967FA554FB100025A2C3C0B4A3B8F7702E4A056
FB2818A3ABDB7BA7B5D587144E62179F700EAA0A0BB1E28A3AA5FDFE64C55E38
F8CCCEAC5225CAEAB762B3D48A937119B07F215882110191E96EE8DF8B81FB5E
BF335490B956F4E1D5369CC0BCD4F63291156FC5080B4AC659584C71654BB27E
9DB0B87677AE41DFB1C5F4F617CF3F5E89F1F6C668696ABA0B8AA16D688622AD
2FF7E060EC8C37E3953B1CDAAE8FB25A96D66F9EBEA0DDB7A436DB1B4117C822
5BDB8E9BC66B8A89C8648A1B399AB34D974EB50DDFF44C0EE4FD50D08EBDF932
2B25D82EA1E19A375944EDE341605D50CB75E2F2156B5908050B305526C7510A
BBA8158B687AF433F42ADDB375BA342217470D89900297ABAEE9C2BEB3A52464
0CCF74915AD2767EDF87C012E179558B031D4DEA0377C919011028712AAB6507
A6EDFB54FA6B5EBE9EA454B4018017B883A0E4D46238B647DB0F980AD7875E49
B501C942C9945A67F38E02BA4B04ADDC0ADD59FE45D3DF97D98B882B39998A46
33E815393E6B62F58F9D647373906561CBD1C4D737DFB487EEBFEF05569F148C
D4100147EA5F69DC305959AB218F5BD3A31C2B4BF940B9726DB7C6D3884A3091
5BE0E7032ADE4A95FA325F4F459CCD236781E2EE1296CDB0C7067E0348BB2DD5
0E7591226C48C0AA8A2DA6296EE94C0E55DEA1200C55916A9E8530F6BB923CED
F8F622562CBFCA32780C00F783A0EC4E5F36727B12F11896AB8053FF5B413BF5
B270D228C937B33BAA19996BB63D25F37BB8DA6864852E1CEFF56F6270809656
1814AA8A406D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600
(compiled-literature-review.dvi)
@start /Fa 244[54 11[{}1 66.4176 /CMMIB8 rf /Fb 139[44
44 46 2[56 62 1[31 2[31 1[56 34 51 3[54 10[85 2[62 5[106
1[88 24[56 56 2[31 46[{}18 99.6264 /CMBX12 rf /Fc 150[22
105[{}1 49.8132 /CMMI6 rf /Fd 149[20 2[35 35 26[54 24[47
46[35 2[55{}7 66.4176 /CMSY8 rf /Fe 134[55 71[52 52 48[{}3
90.9091 /CMBX10 rf /Ff 167[131 22[80 80 2[81 81 81 81
81 81 2[61 61 61 61 80 80 28[67 67 18[{}17 90.9091 /CMEX10
rf /Fg 134[35 11[62 1[37 29 24 4[36 15[41 8[60 7[50 67[{}9
66.4176 /CMMI8 rf /Fh 134[45 11[80 1[47 1[31 6[39 1[38
13[69 6[77 7[65 5[45 1[25 25 24[57 2[54 2[52 2[40 2[53
7[47 51 58 11[{}20 90.9091 /CMMI10 rf /Fi 194[55 10[35
35 5[55 43[{}4 66.4176 /CMR8 rf /Fj 133[50 54 60 76 94[46
12[69 11[{}6 90.9091 /CMMIB10 rf /Fk 149[25 30[69 18[51
1[0 3[61 16[91 91 8[71 71 71 71 4[45 13[25 71{}14 90.9091
/CMSY10 rf /Fl 138[49 30 1[38 2[46 51 74 23 42 1[28 1[42
28 42 1[42 1[46 97[{}14 90.9091 /CMTI10 rf /Fm 133[40
48 48 66 48 51 35 36 36 48 51 45 51 76 25 48 28 25 51
45 28 40 51 40 51 45 3[25 1[25 3[93 68 68 66 51 1[71
62 1[68 83 57 2[33 1[71 59 2[66 1[68 1[43 1[71 1[25 25
4[45 45 45 45 45 45 1[25 30 25 71 1[35 35 25 26[51 53
11[{}62 90.9091 /CMR10 rf /Fn 138[75 52 53 55 1[75 67
75 1[37 71 1[37 75 67 1[61 1[60 1[65 10[102 2[75 5[128
81 105 24[67 67 3[45 45[{}23 119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 448 482 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def

448 482 a 448 482 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 448 482 a 448 482 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 448 482 a 0 TeXcolorgray
448 482 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 448 482 a 91 x Fn(1)135 b(Single-k)l(ernel)46
b(Supp)t(ort)e(V)-11 b(ector)45 b(Mac)l(hines)448 776
y Fm(Supp)s(ort)31 b(v)m(ector)k(mac)m(hines)f(are)g(based)f(on)g(the)h
(idea)f(of)h(a)f Fl(fat)j(mar)-5 b(gin)7 b Fm(;)36 b(consider)e(a)448
889 y(set)i(of)f(p)s(oin)m(ts)f(divided)h(in)m(to)g(2)h(classes)g(whic)
m(h)e(are)h(linearly)h(separable,)h(a)e(supp)s(ort)448
1002 y(v)m(ector)30 b(mac)m(hine)e(will)g(\014gure)f(out)h(the)g(h)m
(yp)s(erplane)e(that)j(separates)f(the)g(t)m(w)m(o)h(classes)448
1115 y(with)34 b(the)f(fattest)j(margin;)f(the)f(fatter,)h(the)f(b)s
(etter.)51 b(W)-8 b(e)35 b(ma)m(y)f(formalize)h(the)e(idea)448
1227 y(as)e(follo)m(ws)p 0 TeXcolorgray 0 TeXcolorgray
1177 1436 a(minimise)1641 1374 y(1)p 1641 1415 46 4 v
1641 1498 a(2)1696 1436 y Fk(jj)p Fj(w)s Fk(jj)1875 1398
y Fi(2)932 1577 y Fm(with)f(resp)s(ect)h(to)100 b Fj(w)r
Fh(;)15 b(b)1135 1690 y Fm(sub)5 b(ject)30 b(to)100 b
Fh(y)1676 1704 y Fg(i)1704 1690 y Fm(\()p Fj(w)23 b Fk(\001)d
Fj(x)1943 1704 y Fg(i)1991 1690 y Fm(+)g Fh(b)p Fm(\))26
b Fk(\025)f Fm(1)100 b Fk(8)p Fh(i)25 b Fm(=)g(1)p Fh(;)15
b(:)g(:)g(:)i(;)e(m)589 1875 y Fm(where)35 b Fh(m)f Fm(is)h(the)g(n)m
(um)m(b)s(er)e(of)i(observ)-5 b(ations,)36 b Fj(x)2280
1889 y Fg(i)2343 1875 y Fm(are)f(the)g(observ)-5 b(ations)35
b(and)f Fh(y)3409 1889 y Fg(i)448 1988 y Fm(are)d(the)g(target)h(v)-5
b(alue)30 b(for)h(eac)m(h)g Fh(i)p Fm(.)41 b(Graphically)-8
b(,)32 b(this)e(is)h(what)f(it)h(means:)589 2101 y([insert)g(picture])
589 2214 y(This)f(problem)g(has)g(an)g(asso)s(ciated)i(dual)e(problem,)
g(whic)m(h)g(are)h(as)g(follo)m(ws:)p 0 TeXcolorgray
0 TeXcolorgray 1247 2471 a(maximise)1752 2358 y Fg(m)1718
2385 y Ff(X)1726 2580 y Fg(i)p Fi(=1)1864 2471 y Fh(\013)1922
2485 y Fg(i)1971 2471 y Fk(\000)2072 2410 y Fm(1)p 2072
2450 V 2072 2534 a(2)2177 2358 y Fg(m)2142 2385 y Ff(X)2151
2580 y Fg(i)p Fi(=1)2323 2358 y Fg(m)2289 2385 y Ff(X)2293
2580 y Fg(j)t Fi(=1)2435 2471 y Fh(\013)2493 2485 y Fg(i)2522
2471 y Fh(\013)2580 2485 y Fg(j)2616 2471 y Fj(x)2676
2485 y Fg(i)2725 2471 y Fk(\001)20 b Fj(x)2830 2485 y
Fg(j)1019 2681 y Fm(with)30 b(resp)s(ect)g(to)101 b Fj(\013)1221
2794 y Fm(sub)5 b(ject)30 b(to)101 b Fj(\013)25 b Fk(\027)g
Fe(0)1718 2907 y Fj(\013)1787 2874 y Fg(T)1842 2907 y
Fe(y)g Fm(=)g(0)589 3092 y(The)h(strength)g(of)g(supp)s(ort)f(v)m
(ector)i(mac)m(hine)g(lies)g(on)f(the)g(fact)h(that)g(w)m(e)f(can)g
(map)448 3205 y(eac)m(h)f(p)s(oin)m(t)f Fj(x)936 3219
y Fg(i)988 3205 y Fm(to)g(a)g(p)s(oin)m(t)g(on)f(another)h(space)g
(with)f(di\013eren)m(t)h(\(and)f(p)s(ossibly)g(larger\))448
3318 y(dimensionalit)m(y;)30 b(this)e(space)h(is)f(called)h(the)f
(feature)g(space.)40 b(W)-8 b(e)29 b(can)g(transform)e(dot)448
3431 y(pro)s(ducts)i(on)i(the)f Fj(x)1168 3445 y Fg(i)1196
3431 y Fm('s)h(to)g(the)f(follo)m(wing)1497 3616 y Fj(x)1557
3630 y Fg(i)1605 3616 y Fk(\001)21 b Fj(x)1711 3630 y
Fg(j)1772 3616 y Fk(!)26 b Fh(\036)p Fm(\()p Fj(x)2038
3630 y Fg(i)2066 3616 y Fm(\))21 b Fk(\001)f Fh(\036)p
Fm(\()p Fj(x)2317 3630 y Fg(j)2353 3616 y Fm(\))448 3800
y(where)30 b Fh(\036)p Fm(\()p Fh(:)p Fm(\))i(is)f(the)f(mapping)g
(function)g(on)m(to)i(the)f(feature)g(space.)42 b(As)30
b(it)h(turns)f(out,)448 3913 y(w)m(e)k(don't)f(need)g(to)h(sp)s(ecify)e
(the)i(mapping)e(function)h(explicitly;)j(what)d(w)m(e)g(need)g(to)448
4026 y(do)e(is)f(to)h(sp)s(ecify)f(the)h(so-called)h
Fl(kernel)h(function)7 b Fm(:)1442 4210 y Fh(K)g Fm(\()p
Fj(x)1621 4224 y Fg(i)1650 4210 y Fh(;)15 b Fj(x)1750
4224 y Fg(j)1786 4210 y Fm(\))26 b(=)f Fh(\036)p Fm(\()p
Fj(x)2092 4224 y Fg(i)2121 4210 y Fm(\))20 b Fk(\001)h
Fh(\036)p Fm(\()p Fj(x)2371 4224 y Fg(j)2408 4210 y Fm(\))589
4395 y(Th)m(us)32 b(w)m(e)g(can)h(reform)m(ulate)g(those)g(problems)f
(that)h(w)m(e'd)f(had)g(en)m(tirely)-8 b(,)35 b(with)d(a)448
4508 y(sligh)m(t)g(mo)s(di\014cation.)41 b(The)30 b(follo)m(wing)i(is)e
(the)h(primal)f(problem)p 0 TeXcolorgray 0 TeXcolorgray
1115 4734 a(minimise)1579 4672 y(1)p 1579 4713 V 1579
4796 a(2)1634 4734 y Fk(jj)p Fj(w)s Fk(jj)1813 4696 y
Fi(2)870 4875 y Fm(with)g(resp)s(ect)g(to)101 b Fj(w)r
Fh(;)15 b(b)1072 4988 y Fm(sub)5 b(ject)30 b(to)101 b
Fh(y)1614 5002 y Fg(i)1641 4988 y Fm(\()p Fj(w)23 b Fk(\001)e
Fh(\036)p Fm(\()p Fj(x)1970 5002 y Fg(i)1998 4988 y Fm(\))g(+)f
Fh(b)p Fm(\))25 b Fk(\025)g Fm(1)100 b Fk(8)p Fh(i)25
b Fm(=)g(1)p Fh(;)15 b(:)g(:)g(:)i(;)e(m)p 0 TeXcolorgray
1920 5225 a Fm(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 589 573 a Fm(and)30 b(this)g(is)h(the)f(dual)g(problem)p
0 TeXcolorgray 0 TeXcolorgray 1182 840 a(maximise)1688
726 y Fg(m)1653 754 y Ff(X)1662 949 y Fg(i)p Fi(=1)1800
840 y Fh(\013)1858 854 y Fg(i)1906 840 y Fk(\000)2007
779 y Fm(1)p 2007 819 46 4 v 2007 902 a(2)2112 726 y
Fg(m)2078 754 y Ff(X)2086 949 y Fg(i)p Fi(=1)2259 726
y Fg(m)2224 754 y Ff(X)2229 949 y Fg(j)t Fi(=1)2371 840
y Fh(\013)2429 854 y Fg(i)2457 840 y Fh(\013)2515 854
y Fg(j)2552 840 y Fh(K)7 b Fm(\()p Fj(x)2731 854 y Fg(i)2759
840 y Fh(;)15 b Fj(x)2859 854 y Fg(j)2896 840 y Fm(\))954
1050 y(with)30 b(resp)s(ect)h(to)100 b Fj(\013)1157 1163
y Fm(sub)5 b(ject)30 b(to)100 b Fj(\013)26 b Fk(\027)f
Fe(0)1653 1276 y Fj(\013)1722 1243 y Fg(T)1777 1276 y
Fe(y)h Fm(=)f(0)589 1471 y(There)30 b(are)h(also)g(sev)m(eral)h(k)m
(ernels)f(that)g(ma)m(y)g(b)s(e)f(used:)p 0 TeXcolorgray
585 1674 a Fk(\017)p 0 TeXcolorgray 46 w Fm(Linear)g(k)m(ernel:)41
b Fh(K)7 b Fm(\()p Fj(x)1442 1688 y Fg(i)1470 1674 y
Fh(;)15 b Fj(x)1571 1688 y Fg(j)1607 1674 y Fm(\))26
b(=)f Fj(x)1824 1688 y Fg(i)1872 1674 y Fk(\001)c Fj(x)1977
1688 y Fg(j)p 0 TeXcolorgray 585 1859 a Fk(\017)p 0 TeXcolorgray
46 w Fm(P)m(olynomial)32 b(k)m(ernel:)41 b Fh(K)7 b Fm(\()p
Fj(x)1634 1873 y Fg(i)1662 1859 y Fh(;)15 b Fj(x)1762
1873 y Fg(j)1799 1859 y Fm(\))25 b(=)g(\(1)c(+)f Fj(x)2207
1873 y Fg(i)2256 1859 y Fk(\001)g Fj(x)2361 1873 y Fg(j)2398
1859 y Fm(\))2433 1826 y Fg(d)p 0 TeXcolorgray 585 2103
a Fk(\017)p 0 TeXcolorgray 46 w Fm(Gaussian)30 b(k)m(ernel:)41
b Fh(K)7 b Fm(\()p Fj(x)1548 2117 y Fg(i)1577 2103 y
Fh(;)15 b Fj(x)1677 2117 y Fg(j)1713 2103 y Fm(\))26
b(=)f(exp)2024 1974 y Ff(\022)2091 2103 y Fk(\000)2172
2041 y(jj)p Fj(x)2282 2055 y Fg(i)2330 2041 y Fk(\000)20
b Fj(x)2481 2055 y Fg(j)2518 2041 y Fk(jj)2568 2008 y
Fi(2)p 2172 2082 437 4 v 2320 2165 a Fm(2)p Fh(\033)2420
2139 y Fi(2)2618 1974 y Ff(\023)p 0 TeXcolorgray 585
2337 a Fk(\017)p 0 TeXcolorgray 46 w Fm(Sigmoid)30 b(k)m(ernel:)41
b Fh(K)7 b Fm(\()p Fj(x)1506 2351 y Fg(i)1535 2337 y
Fh(;)15 b Fj(x)1635 2351 y Fg(j)1671 2337 y Fm(\))26
b(=)f(tanh\()p Fh(\014)5 b Fj(x)2161 2351 y Fg(i)2210
2337 y Fk(\001)20 b Fj(x)2315 2351 y Fg(j)2372 2337 y
Fm(+)g Fh(b)p Fm(\))589 2540 y(Not)28 b(all)f(functions)f(can)h(b)s(e)e
(k)m(ernels;)k(it)e(m)m(ust)f(satisfy)h(Mercer's)g(condition.)40
b(Sev-)448 2653 y(eral)29 b(k)m(ernels)f(that)h(don't)f(satisfy)g
(Mercer's)h(condition)f(can)g(in)g(fact)h(generalize)h(w)m(ell;)448
2766 y(the)h(sigmoid)g(k)m(ernel)g(is)f(one)h(example.)589
2879 y(Solving)24 b(this)f(dual)f(problem)g(will)i(giv)m(es)g(us)e(the)
h(solution)h(of)f(the)g(primal)g(problem)448 2992 y(as)29
b(w)m(ell,)g(due)e(to)i(the)f(strong)g(dualit)m(y)h(nature)f(of)g(the)g
(problem.)39 b(Giv)m(en)29 b(the)f(solution)448 3104
y(to)39 b(dual)f(problem)g Fj(\013)1208 3071 y Fd(\003)1248
3104 y Fm(,)i(whic)m(h)e(ma)m(y)h(b)s(e)f(obtained)g(from)g(quadratic)h
(optimization)448 3217 y(solv)m(er,)32 b(w)m(e)f(ma)m(y)g(compute)f
(the)h(bias)475 3607 y Fh(b)25 b Fm(=)g Fk(\000)716 3545
y Fm(1)p 716 3586 46 4 v 716 3669 a(2)786 3424 y Ff(2)786
3587 y(4)922 3607 y Fm(max)847 3672 y Fd(f)p Fg(i)p Fd(j)p
Fg(y)961 3682 y Fc(i)987 3672 y Fi(=)p Fd(\000)p Fi(1)p
Fd(g)1182 3424 y Ff(0)1182 3587 y(@)1296 3493 y Fg(m)1262
3520 y Ff(X)1266 3716 y Fg(j)t Fi(=1)1408 3607 y Fh(\013)1466
3621 y Fg(j)1503 3607 y Fh(y)1548 3621 y Fg(j)1584 3607
y Fh(K)7 b Fm(\()p Fj(x)1763 3621 y Fg(i)1791 3607 y
Fh(;)15 b Fj(x)1891 3621 y Fg(j)1928 3607 y Fm(\))1963
3424 y Ff(1)1963 3587 y(A)2063 3607 y Fk(\000)104 b Fm(min)2154
3672 y Fd(f)p Fg(i)p Fd(j)p Fg(y)2268 3682 y Fc(i)2294
3672 y Fi(=+1)p Fd(g)2490 3424 y Ff(0)2490 3587 y(@)2604
3493 y Fg(m)2569 3520 y Ff(X)2574 3716 y Fg(j)t Fi(=1)2716
3607 y Fh(\013)2774 3621 y Fg(j)2810 3607 y Fh(y)2855
3621 y Fg(j)2891 3607 y Fh(K)7 b Fm(\()p Fj(x)3070 3621
y Fg(i)3099 3607 y Fh(;)15 b Fj(x)3199 3621 y Fg(j)3235
3607 y Fm(\))3270 3424 y Ff(1)3270 3587 y(A)3350 3424
y(3)3350 3587 y(5)589 3901 y Fm(and)26 b(the)g(predicted)g(class)h(of)f
(a)h(new)f(data)g(p)s(oin)m(t)g Fj(z)5 b Fm(,)27 b(whic)m(h)f(is)g
(based)g(on)g(the)g(sign)448 4013 y(of)31 b(the)f(follo)m(wing)1358
4286 y Fh(\036)p Fm(\()p Fj(z)5 b Fm(\))25 b(=)g Fh(b)1697
4248 y Fd(\003)1757 4286 y Fm(+)1882 4172 y Fg(m)1848
4200 y Ff(X)1856 4395 y Fg(i)p Fi(=1)1994 4286 y Fh(\013)2052
4248 y Fd(\003)2052 4308 y Fg(i)2092 4286 y Fh(y)2137
4300 y Fg(i)2165 4286 y Fh(K)7 b Fm(\()p Fj(x)2344 4300
y Fg(i)2372 4286 y Fh(;)15 b Fj(z)5 b Fm(\))p Fh(:)589
4525 y Fm(These)44 b(seems)f(computationally)i(exp)s(ensiv)m(e,)i(esp)s
(ecially)e(as)e(w)m(e)h(mo)m(v)m(e)h(on)e(to)448 4638
y(larger)33 b(datasets,)i(but)c(as)i(it)g(turns)e(out)i
Fj(\013)1939 4605 y Fd(\003)2011 4638 y Fm(is)f(a)h(sparse)f(v)m
(ector;)j(there)e(are)g(a)f(lot)i(of)448 4751 y(indices)d
Fh(i)g Fm(suc)m(h)f(that)h Fh(\013)1269 4765 y Fg(i)1323
4751 y Fm(=)26 b(0.)41 b(F)-8 b(or)32 b(an)m(y)f Fh(i)g
Fm(suc)m(h)f(that)h Fh(\013)2389 4765 y Fg(i)2443 4751
y Fk(6)p Fm(=)25 b(0,)32 b(w)m(e)f(de\014ne)f(the)g(v)m(ector)448
4863 y Fj(x)508 4877 y Fg(i)565 4863 y Fm(to)g(b)s(e)e(a)h(supp)s(ort)e
(v)m(ector.)42 b(Th)m(us)27 b(the)i(complexit)m(y)i(of)e(the)g
(computation)g(reduces)448 4976 y(to)i(the)g(order)f(on)g(the)h(n)m(um)
m(b)s(er)e(of)h(supp)s(ort)f(v)m(ectors.)p 0 TeXcolorgray
1920 5225 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 589 573 a Fm(No)m(w)34 b(let)g(us)e(consider)h(the)g
(generalization)j(abilit)m(y)e(of)f(an)g(SVM.)g(Letting)h
Fh(R)f Fm(to)448 686 y(b)s(e)c(the)h(maxim)m(um)f(radius)f(of)i(whic)m
(h)f(a)g(ball)h(ma)m(y)g(con)m(tain)h(all)f(the)f(datasets,)i(and)e
Fh(\015)448 799 y Fm(to)36 b(b)s(e)e(the)h(fattest)h(margin,)g(w)m(e)f
(obtain)g(the)g(generalization)i(inequalit)m(y)f(on)f(SVM,)448
912 y(whic)m(h)30 b(w)m(as)h(pro)m(v)m(en)g(b)m(y)f(V)-8
b(apnik)31 b(in)f(Statistical)j(Learning)d(Theory)1387
1164 y(Generalization)j(error)25 b Fk(\024)2349 1103
y Fh(R)2419 1070 y Fi(2)p 2317 1144 172 4 v 2317 1227
a Fh(m\015)2449 1201 y Fi(2)448 1411 y Fm(th)m(us)e(ev)m(en)i(though)e
(the)h(V)m(C)g(dimension)e(of)i(an)g(SVM)f(ma)m(y)h(b)s(e)f(in\014nite)
g(\(for)h(instance,)448 1523 y(consider)k(SVM)f(with)h(Gaussian)g(k)m
(ernel)g(of)f(small)i Fh(\033)s Fm(\),)g(w)m(e)f(ma)m(y)g(still)g
(generalize)i(w)m(ell)448 1636 y(due)g(to)h(this)f(inequalit)m(y)-8
b(.)448 1880 y Fb(1.1)113 b(Soft)37 b(Margin)h(SVM)448
2051 y Fm(W)-8 b(e)42 b(ma)m(y)f(in)e(fact)j(mo)s(dify)d(SVM)h(to)h
(allo)m(w)h(for)e(non-separable)g(datasets.)72 b(There)448
2164 y(are)37 b(t)m(w)m(o)g(most)f(p)s(opular)f(mo)s(di\014cations,)j
(namely)e(the)g Fh(`)2465 2178 y Fi(1)2504 2164 y Fm(-norm)g(and)f(the)
h Fh(`)3160 2178 y Fi(2)3199 2164 y Fm(-norm)448 2277
y(regularisation.)589 2390 y(F)-8 b(or)32 b(the)e Fh(`)947
2404 y Fi(1)986 2390 y Fm(-norm,)h(w)m(e)f(ha)m(v)m(e)i(the)f(follo)m
(wing)g(primal)g(problem)p 0 TeXcolorgray 0 TeXcolorgray
1025 2665 a(minimise)1489 2604 y(1)p 1489 2644 46 4 v
1489 2727 a(2)1545 2665 y Fk(jj)p Fj(w)r Fk(jj)1723 2628
y Fi(2)1783 2665 y Fm(+)20 b Fh(C)1995 2551 y Fg(m)1961
2579 y Ff(X)1969 2774 y Fg(i)p Fi(=1)2107 2665 y Fh(\030)2147
2679 y Fg(i)780 2862 y Fm(with)30 b(resp)s(ect)h(to)100
b Fj(w)r Fh(;)15 b Fj(\030)t Fh(;)g(b)983 2975 y Fm(sub)5
b(ject)30 b(to)100 b Fh(y)1524 2989 y Fg(i)1552 2975
y Fm(\()p Fj(w)23 b Fk(\001)d Fh(\036)p Fm(\()p Fj(x)1880
2989 y Fg(i)1909 2975 y Fm(\))g(+)g Fh(b)p Fm(\))26 b
Fk(\025)f Fm(1)20 b Fk(\000)g Fh(\030)2447 2989 y Fg(i)2575
2975 y Fk(8)p Fh(i)25 b Fm(=)g(1)p Fh(;)15 b(:)g(:)g(:)i(;)e(m)589
3178 y Fm(with)31 b(the)f(dual)p 0 TeXcolorgray 0 TeXcolorgray
1182 3436 a(maximise)1688 3322 y Fg(m)1653 3349 y Ff(X)1662
3545 y Fg(i)p Fi(=1)1800 3436 y Fh(\013)1858 3450 y Fg(i)1906
3436 y Fk(\000)2007 3374 y Fm(1)p 2007 3415 V 2007 3498
a(2)2112 3322 y Fg(m)2078 3349 y Ff(X)2086 3545 y Fg(i)p
Fi(=1)2259 3322 y Fg(m)2224 3349 y Ff(X)2229 3545 y Fg(j)t
Fi(=1)2371 3436 y Fh(\013)2429 3450 y Fg(i)2457 3436
y Fh(\013)2515 3450 y Fg(j)2552 3436 y Fh(K)7 b Fm(\()p
Fj(x)2731 3450 y Fg(i)2759 3436 y Fh(;)15 b Fj(x)2859
3450 y Fg(j)2896 3436 y Fm(\))954 3646 y(with)30 b(resp)s(ect)h(to)100
b Fj(\013)1157 3759 y Fm(sub)5 b(ject)30 b(to)100 b Fe(0)26
b Fk(\026)f Fj(\013)g Fk(\026)g Fh(C)7 b Fe(1)1653 3872
y Fj(\013)1722 3839 y Fg(T)1777 3872 y Fe(y)26 b Fm(=)f(0)589
4075 y(again,)32 b(this)e(is)h(solv)-5 b(able)31 b(easily)h(b)m(y)e(a)h
(QP)f(solv)m(er.)589 4188 y(F)-8 b(or)32 b Fh(`)791 4202
y Fi(2)830 4188 y Fm(-norm,)e(w)m(e)h(ha)m(v)m(e)h(the)e(follo)m(wing)i
(primal)e(problem)p 0 TeXcolorgray 0 TeXcolorgray 1025
4463 a(minimise)1489 4402 y(1)p 1489 4442 V 1489 4525
a(2)1545 4463 y Fk(jj)p Fj(w)r Fk(jj)1723 4426 y Fi(2)1783
4463 y Fm(+)20 b Fh(C)1995 4349 y Fg(m)1961 4377 y Ff(X)1969
4572 y Fg(i)p Fi(=1)2107 4463 y Fh(\030)2151 4426 y Fi(2)2147
4486 y Fg(i)780 4660 y Fm(with)30 b(resp)s(ect)h(to)100
b Fj(w)r Fh(;)15 b Fj(\030)t Fh(;)g(b)983 4773 y Fm(sub)5
b(ject)30 b(to)100 b Fh(y)1524 4787 y Fg(i)1552 4773
y Fm(\()p Fj(w)23 b Fk(\001)d Fh(\036)p Fm(\()p Fj(x)1880
4787 y Fg(i)1909 4773 y Fm(\))g(+)g Fh(b)p Fm(\))26 b
Fk(\025)f Fm(1)20 b Fk(\000)g Fh(\030)2447 4787 y Fg(i)2575
4773 y Fk(8)p Fh(i)25 b Fm(=)g(1)p Fh(;)15 b(:)g(:)g(:)i(;)e(m)589
4976 y Fm(with)31 b(the)f(dual)g(problem)p 0 TeXcolorgray
1920 5225 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 928 633 a
Fm(maximise)1434 519 y Fg(m)1400 546 y Ff(X)1408 742
y Fg(i)p Fi(=1)1546 633 y Fh(\013)1604 647 y Fg(i)1653
633 y Fk(\000)1753 571 y Fm(1)p 1753 612 46 4 v 1753
695 a(2)1858 519 y Fg(m)1824 546 y Ff(X)1833 742 y Fg(i)p
Fi(=1)2005 519 y Fg(m)1970 546 y Ff(X)1975 742 y Fg(j)t
Fi(=1)2117 633 y Fh(\013)2175 647 y Fg(i)2203 633 y Fh(\013)2261
647 y Fg(j)2298 633 y Fh(K)7 b Fm(\()p Fj(x)2477 647
y Fg(i)2505 633 y Fh(;)15 b Fj(x)2605 647 y Fg(j)2642
633 y Fm(\))20 b Fk(\000)2834 571 y Fm(1)p 2798 612 117
4 v 2798 695 a(4)p Fh(C)2975 519 y Fg(m)2940 546 y Ff(X)2949
742 y Fg(i)p Fi(=1)3087 633 y Fh(\013)3145 595 y Fi(2)3145
655 y Fg(i)701 843 y Fm(with)30 b(resp)s(ect)g(to)101
b Fj(\013)903 956 y Fm(sub)5 b(ject)30 b(to)101 b Fe(0)25
b Fk(\026)g Fj(\013)g Fk(\026)g Fh(C)7 b Fe(1)1400 1069
y Fj(\013)1469 1036 y Fg(T)1524 1069 y Fe(y)25 b Fm(=)g(0)589
1247 y(whic)m(h)h(is)g(basically)i(the)e(same)g(as)h(the)f(hard-margin)
f(problem,)i(except)g(with)f(the)448 1360 y(mo)s(di\014ed)k(Gram)g
(matrix)h(of)f Fh(K)7 b Fm(\()p Fj(x)1656 1374 y Fg(i)1684
1360 y Fh(;)15 b Fj(x)1785 1374 y Fg(i)1813 1360 y Fm(\))25
b Fk( )h Fh(K)7 b Fm(\()p Fj(x)2169 1374 y Fg(i)2197
1360 y Fh(;)15 b Fj(x)2297 1374 y Fg(i)2325 1360 y Fm(\))21
b(+)2509 1324 y Fi(1)p 2482 1339 91 4 v 2482 1391 a(2)p
Fg(C)2582 1360 y Fm(.)448 1599 y Fb(1.2)113 b(More)37
b(on)h(Kernels)448 1771 y Fm(Some)32 b(of)g(the)g(k)m(ernels)g(that)h
(w)m(e'd)f(had)f(so)h(far)g(ha)m(v)m(e)h(parameter\(s\))f(that)h
(should)e(b)s(e)448 1884 y(decided)k(b)s(efore)g(the)h(SVM)f(giv)m(es)h
(us)f(the)g(result.)56 b(This)34 b(brings)g(us)h(to)h(a)g(question:)448
1997 y(ho)m(w)31 b(do)f(w)m(e)h(determine)f(these)h(parameters?)41
b(Sev)m(eral)31 b(metho)s(ds)f(exist:)p 0 TeXcolorgray
585 2183 a Fk(\017)p 0 TeXcolorgray 46 w Fm(Separate)40
b(the)g(data)g(set)g(in)m(to)h(training)f(set,)j(v)-5
b(alidation)41 b(set,)i(and)c(test)h(set.)676 2296 y(F)-8
b(or)40 b(eac)m(h)h(c)m(hoice)g(of)f(parameters)g(w)m(e)g(ha)m(v)m(e,)k
(w)m(e)c(train)f(the)h(mac)m(hine)h(using)676 2409 y(the)h(training)g
(set,)j(and)c(\014nd)f(the)i(error)g(on)f(v)-5 b(alidation)43
b(set;)48 b(this)42 b(is)g(called)676 2522 y(the)33 b(v)-5
b(alidation)34 b(error.)47 b(Then)32 b(w)m(e)h(pic)m(k)h(the)f
(parameters)g(that)g(pro)s(duces)f(the)676 2635 y(smallest)f(v)-5
b(alidation)32 b(error.)p 0 TeXcolorgray 585 2813 a Fk(\017)p
0 TeXcolorgray 46 w Fm(Use)38 b(cross)g(v)-5 b(alidation;)44
b(the)38 b(most)h(famous)f(example)h(is)f(the)g(lea)m(v)m(e-one-out.)
676 2926 y(In)29 b(this)g(pro)s(cedure,)g(for)h(eac)m(h)g(data)h(p)s
(oin)m(t,)f(w)m(e)g(extract)h(that)g(data)f(p)s(oin)m(t)g(out)676
3039 y(of)39 b(the)h(training)g(set,)j(and)c(train)h(the)g(mac)m(hine)g
(with)g(the)g(rest)g(of)g(\()p Fh(m)26 b Fk(\000)g Fm(1\))676
3152 y(p)s(oin)m(ts.)54 b(W)-8 b(e)36 b(ev)-5 b(aluate)36
b(the)f(h)m(yp)s(othesis)f(v)m(ersus)h(the)g(singled-out)h(p)s(oin)m
(t;)h(the)676 3265 y(exp)s(ected)29 b(v)-5 b(alue)30
b(of)f(the)h(error)e(is)h(kno)m(wn)g(as)h(the)f(cross-v)-5
b(alidation)31 b(error.)40 b(W)-8 b(e)676 3378 y(don't)38
b(need)h(to)h(single)f(out)g(one)g(p)s(oin)m(t;)k(in)c(fact)h
Fh(k)s Fm(-fold)f(cross)g(v)-5 b(alidation)40 b(is)676
3491 y(common,)27 b(when)f(w)m(e)h(tak)m(e)h Fh(k)h Fm(p)s(oin)m(ts)d
(out)h(of)g(the)f(training)h(sets.)40 b(Practitioners)676
3604 y(recommend)30 b(the)g(size)h(of)g Fh(k)j Fm(to)d(b)s(e)e(b)s(et)m
(w)m(een)i Fh(m=)p Fm(5)g(and)f Fh(m=)p Fm(10.)p 0 TeXcolorgray
585 3782 a Fk(\017)p 0 TeXcolorgray 46 w Fm(Minimise)43
b(the)f(generalization)j(b)s(ound;)i(b)m(y)c(v)-5 b(arying)42
b(the)h(parameters)g(and)676 3895 y(training)33 b(the)g(mac)m(hine,)i
(w)m(e)e(ma)m(y)h(obtain)f(the)h(form)m(ula)f(for)g Fh(R)g
Fm(and)g Fh(\015)5 b Fm(.)49 b(They)676 4008 y(are)30
b(as)h(follo)m(ws:)698 4268 y Fh(R)768 4230 y Fi(2)832
4268 y Fm(=)25 b(max)1001 4327 y Fg(i)1112 4081 y Ff(8)1112
4163 y(<)1112 4327 y(:)1228 4154 y Fg(m)1193 4181 y Ff(X)1198
4377 y Fg(j)t Fi(=1)1374 4154 y Fg(m)1340 4181 y Ff(X)1341
4379 y Fg(k)r Fi(=1)1486 4268 y Fh(\025)1539 4282 y Fg(j)1576
4268 y Fh(\025)1629 4283 y Fg(k)1671 4268 y Fh(K)7 b
Fm(\()p Fj(x)1850 4282 y Fg(j)1887 4268 y Fh(;)15 b Fj(x)1987
4283 y Fg(k)2030 4268 y Fm(\))20 b Fk(\000)g Fm(2)2271
4154 y Fg(m)2237 4181 y Ff(X)2241 4377 y Fg(j)t Fi(=1)2383
4268 y Fh(\025)2436 4282 y Fg(j)2473 4268 y Fh(K)7 b
Fm(\()p Fj(x)2652 4282 y Fg(i)2680 4268 y Fh(;)15 b Fj(x)2780
4282 y Fg(j)2817 4268 y Fm(\))20 b(+)g Fh(K)7 b Fm(\()p
Fj(x)3142 4282 y Fg(i)3170 4268 y Fh(;)15 b Fj(x)3271
4282 y Fg(i)3299 4268 y Fm(\))3334 4081 y Ff(9)3334 4163
y(=)3334 4327 y(;)1851 4572 y Fm(1)p 1828 4612 92 4 v
1828 4695 a Fh(\015)1880 4669 y Fi(2)1955 4633 y Fm(=)2085
4519 y Fg(m)2051 4547 y Ff(X)2059 4742 y Fg(i)p Fi(=1)2197
4633 y Fh(\013)2255 4596 y Fd(\003)2255 4656 y Fg(i)676
4863 y Fm(Th)m(us)34 b(w)m(e)i(can)g(minimize)g(them)g(as)g(the)g
(parameters)g(v)-5 b(ary)d(,)37 b(and)e(c)m(ho)s(ose)i(the)676
4976 y(parameters)30 b(with)g(the)h(smallest)g(generalization)i(error)d
(b)s(ound.)p 0 TeXcolorgray 1920 5225 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 585 573 a Fk(\017)p 0 TeXcolorgray
46 w Fm(Use)30 b(m)m(ultiple)g(k)m(ernel)g(learning;)h(for)e(instance,)
i(use)f(a)g(linear)g(com)m(bination)h(of)676 686 y(c)m(hosen)40
b(k)m(ernels,)i(and)d(solv)m(e)i(the)f(optimization)i(problem)d(as)h(w)
m(e)g(allo)m(w)h(the)676 799 y(w)m(eigh)m(ts)31 b(to)g(v)-5
b(ary)d(.)41 b(This)30 b(is)g(the)h(purp)s(ose)e(of)h(our)g(\014nal)g
(y)m(ear)h(pro)5 b(ject.)448 1085 y Fn(2)135 b(Multiple)46
b(Kernel)g(Learning)448 1288 y Fm(No)m(w)31 b(consider)e(a)h(set)g(of)g
(k)m(ernels)g Fk(K)q Fm(.)41 b(F)-8 b(or)30 b(eac)m(h)h(k)m(ernel)f
Fh(K)i Fk(2)25 b(K)q Fm(,)31 b(w)m(e)f(ma)m(y)g(de\014ne)f(the)448
1401 y(follo)m(wing)j(function)513 1705 y Fh(!)s Fm(\()p
Fh(K)7 b Fm(\))25 b(=)g(max)906 1759 y Fa(\013)1033 1518
y Ff(8)1033 1600 y(<)1033 1764 y(:)1148 1591 y Fg(m)1113
1618 y Ff(X)1122 1814 y Fg(i)p Fi(=1)1260 1705 y Fh(\013)1318
1719 y Fg(i)1366 1705 y Fk(\000)1467 1643 y Fm(1)p 1467
1684 46 4 v 1467 1767 a(2)1572 1591 y Fg(m)1538 1618
y Ff(X)1546 1814 y Fg(i)p Fi(=1)1719 1591 y Fg(m)1684
1618 y Ff(X)1689 1814 y Fg(j)t Fi(=1)1831 1705 y Fh(\013)1889
1719 y Fg(i)1917 1705 y Fh(\013)1975 1719 y Fg(j)2012
1705 y Fh(y)2057 1719 y Fg(i)2084 1705 y Fh(y)2129 1719
y Fg(j)2166 1705 y Fh(K)7 b Fm(\()p Fj(x)2344 1719 y
Fg(i)2373 1705 y Fh(;)15 b Fj(x)2473 1719 y Fg(j)2510
1705 y Fm(\))25 b(:)h Fj(\013)2690 1667 y Fg(T)2745 1705
y Fj(y)i Fm(=)d(0)p Fh(;)15 b Fj(\013)26 b Fk(\027)f
Fe(0)3252 1518 y Ff(9)3252 1600 y(=)3252 1764 y(;)3347
1705 y Fh(:)448 2008 y Fm(No)m(w)38 b(b)m(y)e(stating)i(the)f
(constrain)m(t)h(explicitly)g(and)e(assuming)g(that)h(the)g(dataset)h
(is)448 2121 y(linearly)31 b(separable)g(on)f(the)h(feature)g(space,)g
(w)m(e)g(ha)m(v)m(e)g(the)g(follo)m(wing)h(problem)p
0 TeXcolorgray 0 TeXcolorgray 870 2398 a(min)863 2459
y Fg(K)5 b Fd(2K)1044 2398 y Fh(!)s Fm(\()p Fh(K)i Fm(\))25
b(=)32 b(min)1379 2459 y Fg(K)5 b Fd(2K)1560 2398 y Fm(max)1618
2453 y Fa(\013)1779 2284 y Fg(m)1744 2312 y Ff(X)1753
2507 y Fg(i)p Fi(=1)1891 2398 y Fh(\013)1949 2412 y Fg(i)1997
2398 y Fk(\000)2098 2337 y Fm(1)p 2098 2377 V 2098 2460
a(2)2203 2284 y Fg(m)2169 2312 y Ff(X)2177 2507 y Fg(i)p
Fi(=1)2350 2284 y Fg(m)2315 2312 y Ff(X)2320 2507 y Fg(j)t
Fi(=1)2462 2398 y Fh(\013)2520 2412 y Fg(i)2548 2398
y Fh(\013)2606 2412 y Fg(j)2643 2398 y Fh(K)i Fm(\()p
Fj(x)2822 2412 y Fg(i)2850 2398 y Fh(;)15 b Fj(x)2950
2412 y Fg(j)2987 2398 y Fm(\))863 2608 y(with)31 b(resp)s(ect)f(to)100
b Fh(K)7 b Fm(,)31 b Fj(\013)1066 2721 y Fm(sub)5 b(ject)30
b(to)100 b Fe(0)26 b Fk(\026)f Fj(\013)g Fk(\026)g Fh(C)7
b Fe(1)1562 2834 y Fj(\013)1631 2801 y Fg(T)1687 2834
y Fe(y)25 b Fm(=)g(0)p 0 TeXcolorgray 1920 5225 a(5)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
